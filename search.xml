<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>网络免费收集的 iOS小火箭ID发布页</title>
      <link href="/2024/10/17/%E7%BD%91%E7%BB%9C%E5%85%8D%E8%B4%B9%E6%94%B6%E9%9B%86%E7%9A%84%20iOS%E5%B0%8F%E7%81%AB%E7%AE%ADID%E5%8F%91%E5%B8%83%E9%A1%B5/"/>
      <url>/2024/10/17/%E7%BD%91%E7%BB%9C%E5%85%8D%E8%B4%B9%E6%94%B6%E9%9B%86%E7%9A%84%20iOS%E5%B0%8F%E7%81%AB%E7%AE%ADID%E5%8F%91%E5%B8%83%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<h5 id="网络免费收集的-iOS小火箭ID发布页"><a href="#网络免费收集的-iOS小火箭ID发布页" class="headerlink" title="网络免费收集的 iOS小火箭ID发布页"></a>网络免费收集的 iOS小火箭ID发布页</h5><ul><li><a href="https://ccbaohe.com/appleID/">https://ccbaohe.com/appleID/</a></li><li><a href="https://free.mayun.us/">https://free.mayun.us/</a> 密码5779</li><li><a href="https://mmy.blyun.store/">https://mmy.blyun.store/</a></li><li><a href="https://idfree.top/">https://idfree.top/</a></li><li><a href="https://idshare001.me/chong.html">https://idshare001.me/chong.html</a></li><li><a href="https://gososhare2d6.com/">https://gososhare2d6.com/</a></li><li><a href="https://idshare001.me/goso.html">https://idshare001.me/goso.html</a></li><li><a href="https://free.iosapp.icu/">https://free.iosapp.icu</a></li><li><a href="https://free.shadowrocket.online/">https://free.shadowrocket.online/</a></li><li><a href="https://new.itiktok.best/">https://new.itiktok.best/</a></li><li><a href="https://appleid.22ne.com/">https://appleid.22ne.com/</a></li><li><a href="https://idshare.me/">https://idshare.me</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云TCP运维题库-多选题</title>
      <link href="/2024/10/09/%E8%85%BE%E8%AE%AF%E4%BA%91TCP%E8%BF%90%E7%BB%B4%E9%A2%98%E5%BA%93-%E5%A4%9A%E9%80%89%E9%A2%98/"/>
      <url>/2024/10/09/%E8%85%BE%E8%AE%AF%E4%BA%91TCP%E8%BF%90%E7%BB%B4%E9%A2%98%E5%BA%93-%E5%A4%9A%E9%80%89%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>1.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做一下对账，用于分析在云上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整理是一个必须的过程关于费用方面以下几个问题需要您的协助，腾讯云上提供了非常丰富的定价策略其中就包括以下哪几项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line">A.线性价 </span><br><span class="line">B.指定价</span><br><span class="line">C.到达阶梯价 </span><br><span class="line">D.累计阶梯价</span><br></pre></td></tr></table></figure><p>2.您在改善公司整体运维效率的过程中，发现腾讯云上的全部产品都提供了完善的API接口，打算尝试通过API接口来完成一些运维任务，请您认真考虑以下问题。目前腾讯云上的产品同时提供了控制台管理和API管理两种方式，如果您希望使用API来进行产品管理和配置，您可以通过以下哪几种方式来调用API?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line">A.通过浏览器或curl命令直接访问API接口的网址 </span><br><span class="line">B.通过编程语言调用云API的SDK开发包，调用SDK里的函数 </span><br><span class="line">C.调用指定的IP地址并加以参数辅助 </span><br><span class="line">D.使用命令行工具CLI调用API</span><br></pre></td></tr></table></figure><p>3.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做一下对账，用于分析在云上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整理是一个必须的过程，关于费用方面，以下几个问题需要您的协助。在对象存储这款产品上，使用标准类型和低频类型相比，标准类型无需支付以下哪几项费用?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：BCD</span><br><span class="line">A.存储占用空间 </span><br><span class="line">B．取回费用 </span><br><span class="line">C.提前删除费用 </span><br><span class="line">D.流量费用</span><br></pre></td></tr></table></figure><p>4.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做一下对账，用于分析在云上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整理是一个必烦的过程，关于费用方面，以下几个问题需要您的协助。腾讯云上为特殊的大型项目还提供了自定义计费的方式，以下关于自定义计费的优势描述中，i正确的有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line">A.授予更高的信用额度 </span><br><span class="line">B．允许特殊账期 </span><br><span class="line">C.优惠政策定制化 </span><br><span class="line">D.折扣力度较中小规模项目更大</span><br></pre></td></tr></table></figure><p>5.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做一下对账，用于分析在云上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整理是一个必须的过程，关于费用方面，以下几个问题需要您的协助。在腾讯云上运维时，我们应该时刻注意持续的改进和降低成本，在腾讯云上改进和降低成本的方式包括以下哪几项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line">A.减少过度配置 </span><br><span class="line">B．做好冷热数据分离 </span><br><span class="line">C.优化备份策略 </span><br><span class="line">D.实现自动化运维</span><br></pre></td></tr></table></figure><p>6.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做—下对账，用于分析在云上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整理是一个必须的过程，关于费用方面，以下几个问题需要您的协助。在核算CDN费用时，平台提供了按流量计费和按带宽计费两种方案，以下关于方案选择的描述中，正确的是哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：BC</span><br><span class="line">A.如果是繁忙的大型视频网站，推荐使用按流量计费会比较划算 </span><br><span class="line">B.如果是不太繁忙的公司官网，推荐使用按流量计费会比较划算 </span><br><span class="line">C.如果是大型的在线网盘提供商，推荐使用按带宽计费 </span><br><span class="line">D.如果是大型的在线网盘提供商，推荐使用按流量计费</span><br></pre></td></tr></table></figure><p>7.我们在使用专线方式设计整体迁移方案时，必须做到包含以下哪些步骤?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.了解自身架构 </span><br><span class="line">B．测试公网的传输质量 </span><br><span class="line">C.选择迁移方式 </span><br><span class="line">D．确定迁移节奏</span><br></pre></td></tr></table></figure><p>8.腾讯云上不止提供了普通的云监控，还提供了自定义监控产品。在自定义监控中，可以通过以下哪几项方式来上报监控指标数据?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line">A.使用命令行工具CLI方式 </span><br><span class="line">B.SDK方式上报 </span><br><span class="line">C.通过调查问卷的方式 </span><br><span class="line">D.日志统计</span><br></pre></td></tr></table></figure><p>9.请选出以下哪些自动化运维工具是用于配置管理的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line">A. Puppet  </span><br><span class="line">B. Cfengine  </span><br><span class="line">C. Chef </span><br><span class="line">D. Kickstart</span><br></pre></td></tr></table></figure><p>10.您公司的业务整体迁移至腾讯云已经有几个月的时间了,近期您打算做一下对账,用 于分析在云上的消耗趋势，也好持续的优化成本，在分析之前，数据的收集和整理是一个必须的过程，关于费用方面，以下几个问题需要您的协助。 腾讯云上提供了非常丰富的账单服务,并构成了一个完整的账单模型,请问账单模型可以为用户提供以下哪些方面能力的支持?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line">A.资金管理 </span><br><span class="line">B.盗源管理 </span><br><span class="line">C.账单API </span><br><span class="line">D.审计</span><br></pre></td></tr></table></figure><p>11.您接到了领导的任务如下:1、学习微服务和单体架构的特点与关键性技术2、评估将公司自行开发的业务系统在腾讯云上实施微服务化的难度3、将公司的业务整体以微服务化的方式上云。在公司单体系统的整改过程中，您可能会接触到以下哪些知识点?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line">A. Docker镜像 </span><br><span class="line">B. Kubernetes架构 </span><br><span class="line">C.优雅启停 </span><br><span class="line">D.灰度发布</span><br></pre></td></tr></table></figure><p>12.您接到了领导的任务如下:1、学习微服务和单体架构的特点与关键性技术2、评估 将公司自行开发的业务系统在腾讯云上实施微服务化的难度3、将公司的业务整体以微服务化的方式上云。 您在研究微服务方案时，发现有Docker和Kubernetes两个开源项目可以选择，您必须明确两个开源项目的区别才可以更好的改造业务，以下哪些项的描述是错误的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A. Docker和Kubernetes是两种不同的产品，没有任何相通之处 </span><br><span class="line"></span><br><span class="line">B.Docker和Kubernetes是同—家公司开发的开源项目，且Docker的开源生态会更好 </span><br><span class="line"></span><br><span class="line">C. Kubernetes在使用的过程中，底层必须使用Docker，不可以使用其他开源项目</span><br><span class="line"></span><br><span class="line">D. Dockerfile 使用的是YAML格式</span><br></pre></td></tr></table></figure><p>13.您接到了领导的任务如下:1、学习微服务和单体架构的特点与关键性技术、评估将 公司自行开发的业务系统在腾讯云上实施微服务化的难度3、将公司的业务整体以微服务化的方式上云。目前公司的业务都是单体架构，您需要明确单体架构和微服务的主要区别来完成业务模型设计，以下关于其区别描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BCD</span><br><span class="line"></span><br><span class="line">A.微服务是一个大而全的“超级&quot;工程，通常所有功能是部署到同一个服务器上来承载压力 </span><br><span class="line"></span><br><span class="line">B．微服务的整体思想是解耦，将一个大型项目进行详细拆分，分布式进行部署 </span><br><span class="line"></span><br><span class="line">C.单体架构通常扩展性和吞吐量比较差，相比微服务架构来说，较难实现快速迭代 </span><br><span class="line"></span><br><span class="line">D.相对于单体架构—旦需要变更非常麻烦，使用微服务以后，日日可变更，甚至可以实现自 动化，日日变更不头疼</span><br></pre></td></tr></table></figure><p>14.经过一时间的上云迁移之后，该公司本地的业务已经完全在腾低云上运行了，现 在您作为新入行的信息安全岗位人员，需要全面的保障公司的业务在云上安全稳定的运行。目前企业遇到了以下各种问题，请根据题目分别解答。 您打算在云上做好服务器安全，面临两个选择，一个是购买商业的杀毒软件，一个是使用云镜产品，不知道应该选哪个，以下关于这两种方案的优势对比中，正确的有哪项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BC</span><br><span class="line"></span><br><span class="line">A.商业杀毒软件占用服务器资源更低 </span><br><span class="line"></span><br><span class="line">B.云镜产品占用服务器资源更低 </span><br><span class="line"></span><br><span class="line">C.两者之间并不冲突，杀毒软件查杀的是固有的文件，而云镜是用云+端的方式进行实施防 护，可以同时使用 </span><br><span class="line"></span><br><span class="line">D.使用云镜就移了，无需额外购或使用任何杀毒软件</span><br></pre></td></tr></table></figure><p>15.经过一时间的上云迁移之后，该公司本地的业务已经完全在腾低云上运行了，现 在您作为新入行的信息安全岗位人员，需要全面的保障公司的业务在云上安全稳定的运行。目前企业遇到了以下各种问题，请根据题目分别解答。 鉴于公司业务频频出现漏洞问题，目前公司安排你提前了解云镜这款产品，下列关于云镜产品功能防护的描述中有哪些是正确的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.云镜基于腾讯电脑管家可以针对webshell文件进行有效的过滤和防护 </span><br><span class="line"></span><br><span class="line">B．云镜能够对恶意请求行为进行有效识别，从而提供实时告警通知 </span><br><span class="line"></span><br><span class="line">C.云镜可以针对指定的网页内容设置防篾改的功能 </span><br><span class="line"></span><br><span class="line">D.云镜可以针对CC攻击进行防护</span><br></pre></td></tr></table></figure><p>16.随着互联网金融发展，对商业银行IT能力及需求快速交付提出了更高的要求，某知 名商业银行为了赢得市场先机，对公司IT部门提出了更高的要求:凡互联网类业务应用的开发或迭代，周期应由月为单位，缩短为以周或天为单位;顺应行业趋势，网银和在线商城等应用软件架构全面微服务化;要加大秒杀、抢红包等活动力度,并改善过往抢红包等活动中经常发生系统崩溃的用户体验。IT部门经过严格的梳理和慎重技术选型后决定，采购腾讯云TSF、API网关、TKE、CMQ消息队列等多个产品来达成目标。请根据以上描述，完成下列问题。 根据案例描述，选择API网关作为微服务通信的产品，下列关于API网关功能描述出错误的是哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BD</span><br><span class="line"></span><br><span class="line">A. API网关能够把各种微服务的API接口在网关中注册封装 </span><br><span class="line"></span><br><span class="line">B.多种不同的终端均可通过API网关进行授权接入 </span><br><span class="line"></span><br><span class="line">C.可以基于API网关配置访问流控，保障业务稳定性 </span><br><span class="line"></span><br><span class="line">D.API网关支持多个业务的整合，但会增加微服务管理的复杂性，需要配合其他微服务管理 组件来使用</span><br></pre></td></tr></table></figure><p>17.某集团公司，旗下运营有地产、金融、旅游、零售等多个业务板块，为适应新时代数字化转型的浪潮集团决定除金融业务外，其他业务全面上云，现选取物业管理业务优先上云作为试点。上云前调研结果如下:1、物业管理业务，客户主要集中在北京、上海、广州、成都四个城市及辐射的周边地区，集团在该四个城市均建有本地化的数据中心机房，以存放业务数据;2、一些高级VIP客户信息比较敏感，经讨论决定，敏感数据暂不上云，但云端产生的普通用户信息及相关数据，需要在本地机房有备份;3、要求在上云迁移过程中，业务不能中断。针对以上场景，请回答如下问题: 应用上云迁移是上云非常关键的步骤，下列关于物业系统应用上云迁移思路描述正确的有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.在云服务器中部署物业管理系统应用，切换用户访问流量到云端 </span><br><span class="line"></span><br><span class="line">B.先确保物业管理系统应用为虚拟机部署，然后通过数据传输工具，把虚拟机文件直接上传 到云端，开机即可 </span><br><span class="line"></span><br><span class="line">C.将物业管理系统做微服务化拆分后打包成容器化镜像，基于容器服务TKE部署微服务集群 </span><br><span class="line"></span><br><span class="line">D.基于物业管理系统现有的部署模式，用P2V或V2V的工具把应用系统迁移到云端</span><br></pre></td></tr></table></figure><p>18.为了更好的提升业务服务器在高峰期时的规模以及提升伸缩的速度，您将弹性伸 缩组中的最大实例数的值设置为1000，自动将实例分散到两个可用区上，冷却时间设置为1秒，设置了弹性伸缩实例挂载到负载均衡上，就此配置而言，以下哪些选项指出了此配置的错误?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.最大实例数过高，在遭受DDOS攻击时会造成大量不必要的浪费 </span><br><span class="line"></span><br><span class="line">B.不应该自动分散到不同的可用区，应该在同一个可用区，性能会更高 </span><br><span class="line"></span><br><span class="line">C.弹性伸缩的实例应该手工挂载到负载均衡 </span><br><span class="line"></span><br><span class="line">D.冷却时间为1秒会造成大量的浪费</span><br></pre></td></tr></table></figure><p>19.在使用腾讯云API网关时，API网关支持了哪些发布环境可以供用户选择?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.测试 </span><br><span class="line"></span><br><span class="line">B.预发布 </span><br><span class="line"></span><br><span class="line">C.发布 </span><br><span class="line"></span><br><span class="line">D.二次发布</span><br></pre></td></tr></table></figure><p>20.企业在构建混合云时，本地机房和云服务平台之间的链路通常会在VPN和专线之 间进行选择，请准确选出专线和VPN之间的不同之处?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.、专线是—条真正的物理链路 </span><br><span class="line"></span><br><span class="line">B. VPN是一条真正的物理链路 </span><br><span class="line"></span><br><span class="line">C.专线由于整个链路独享，所以延迟小、速度—般较快 </span><br><span class="line"></span><br><span class="line">D. VPN是走公网的，所以存在泄密的问题</span><br></pre></td></tr></table></figure><p>21.正常远程使用云服务器过程中，出现卡顿，实例连接断开，此后再次发起连接无 法登录，根据描述分析造成此现象的原因可能是什么?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A.CPU或内存负载过高 </span><br><span class="line"></span><br><span class="line">B．安全组规则设置不合理 </span><br><span class="line"></span><br><span class="line">C.云服务器被DDOS攻击 </span><br><span class="line"></span><br><span class="line">D.远程访问端口为非标准端口</span><br></pre></td></tr></table></figure><p>22.云服务器有CPU、内存等多种类型的监控指标，下列关于云服务器监控指标描述 正确的是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.CPU平均负载指的是CPU所承受的计算任务负载，体现了CPU的压力大小 </span><br><span class="line"></span><br><span class="line">B．磁盘IO等待指的是每次设备I/O操作的等待时间，取所有分区的最小值 </span><br><span class="line"></span><br><span class="line">C.内存使用率指的是用户实际使用内存与总内存之比，可判断内存是否趋近瓶颈 </span><br><span class="line"></span><br><span class="line">D.网络出/入包量指的是网卡平均每秒出/入的数据包个数，体现了服务器访问量的规模</span><br></pre></td></tr></table></figure><p>23.请选出腾讯云上提供了以下哪几款消息队列的云产品?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A. CMQ </span><br><span class="line"></span><br><span class="line">B.Ckafka </span><br><span class="line"></span><br><span class="line">C.ZeroMQ </span><br><span class="line"></span><br><span class="line">D. RocketMQ</span><br></pre></td></tr></table></figure><p>24.腾讯云上提供了各式各样的安全产品来全方位保护用户安全以下哪些项属于腾讯 云网络安全防护能力?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A. DDOS攻击防护 </span><br><span class="line"></span><br><span class="line">B. XSS攻击防护 </span><br><span class="line"></span><br><span class="line">C.注入攻击防护 </span><br><span class="line"></span><br><span class="line">D.羊毛党入侵防护</span><br></pre></td></tr></table></figure><p>25.随着互联网金融发展，对商业银行IT能力及需求快速交付提出了更高的要求，某知 名商业银行为了赢得市场先机，对公司IT部门提出了更高的要求:凡互联网类业务应用的开发或迭代，周期应由月为单位，缩短为以周或天为单位;顺应行业趋势，网银和在线商城等应用软件架构全面微服务化;要加大秒杀、抢红包等活动力度,并改善过往抢红包等活动中经常发生系统崩溃的用户体验。IT部门经过严格的梳理和慎重技术选型后决定，采购腾讯云TSF、API网关、TKE、CMQ消息队列等多个产品来达成目标。请根据以上描述，完成下列问题。 案例中描述，该商业银行的应用要全面微服务化，下列关于微服务化架构设计原则描述正确的是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.微服务架构设计时通常建议:技术代码层，前后端分离 </span><br><span class="line"></span><br><span class="line">B．微服务应用通常建议采用无状态化设计 </span><br><span class="line"></span><br><span class="line">C.微服务间的通信往往采用轻量级的API通信方式 </span><br><span class="line"></span><br><span class="line">D.微服务应用以最少的代码量为拆分和设计原则</span><br></pre></td></tr></table></figure><p>26.随着互联网金融发展，对商业银行IT能力及需求快速交付提出了更高的要求，某知 名商业银行为了赢得市场先机，对公司IT部门提出了更高的要求:凡互联网类业务应用的开发或迭代，周期应由月为单位，缩短为以周或天为单位;顺应行业趋势，网银和在线商城等应用软件架构全面微服务化;要加大秒杀、抢红包等活动力度,并改善过往抢红包等活动中经常发生系统崩溃的用户体验。IT部门经过严格的梳理和慎重技术选型后决定，采购腾讯云TSF、API网关、TKE、CMQ消息队列等多个产品来达成目标。请根据以上描述，完成下列问题。 TSF是一个围绕应用和微服务的PaaS平台，基于本案例分析，下列关于TSF产品剧功能述正确的有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AD</span><br><span class="line"></span><br><span class="line">A.新版网银微服务应用发布、扩容、版本回滚的管理 </span><br><span class="line"></span><br><span class="line">B.在线商城微服务交易系统性能瓶颈分析 </span><br><span class="line"></span><br><span class="line">C.开发新应用时，为持续集成与持续交付提供DevOps环境 </span><br><span class="line"></span><br><span class="line">D.当遇到高并发流量时，提供服务限流的功能</span><br></pre></td></tr></table></figure><p>27.目前大部分的云产品都提供了云API接口，您可以使用SDK来调用，请选出使用 SDK调用API接口时，具体都包括以下哪些流程?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.下载SDK </span><br><span class="line"></span><br><span class="line">B.获取API密钥 </span><br><span class="line"></span><br><span class="line">C.编写代码 </span><br><span class="line"></span><br><span class="line">D.发布API网关</span><br></pre></td></tr></table></figure><p>28.某与微信支付紧密合作的第三方移动支付解决方案提供商，通过提供商App为用户 和商家提供便捷的在线支付服务，支付过程如图所示，那么在该案例中，主要体现了消息队列产品的哪些功能?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.异步通信 </span><br><span class="line"></span><br><span class="line">B.提高了消息传递可靠性 </span><br><span class="line"></span><br><span class="line">C.事务处理能力 </span><br><span class="line"></span><br><span class="line">D.进程解耦</span><br></pre></td></tr></table></figure><p>29.云服务器是腾讯云重要的计费产品，在购买和使用CVM时，下列描述中哪些是可 能的计费来源?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A.实例规格配置计费 </span><br><span class="line"></span><br><span class="line">B．娄数据盘存储的费用 </span><br><span class="line"></span><br><span class="line">C.CVM关联的VPC实例配置费用 </span><br><span class="line"></span><br><span class="line">D.实例关联的安全组配置费用</span><br></pre></td></tr></table></figure><p>30.以下关于腾讯云中蓝鲸自动化运维产品的各个逻辑架构平台描述中，正确的有哪 些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A.配置管理平台:提供面向运维人员的服务器/设备基础信息、进程服务、业务拓扑等资源的 配置管理平台，支持自动发现和web可视化能力，并具备丰富的API接口 </span><br><span class="line"></span><br><span class="line">B．管控平台:是整个蓝鲸平台的底层管控系统，是其他服务的基础和服务体系与用户机器的连 续器 </span><br><span class="line"></span><br><span class="line">C.作业平台:支持多云并发，海量且高效的运维操作平台。涵盖了脚本执行、文件拉取/分发 等基础操作，满足各种复杂运维场景—键式作业，实现真正的Web自动化运维 </span><br><span class="line"></span><br><span class="line">D.集成平台:蓝鲸集成平台是一个开放的平台，又称蓝鲸PaaS，让用户可以简单、快速地创 建、部署和管理应用</span><br></pre></td></tr></table></figure><p>31.腾讯云数据库MySQL支持以下哪几种数据复制方式?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.异步复制 </span><br><span class="line"></span><br><span class="line">B.半异步复制 </span><br><span class="line"></span><br><span class="line">C.半同步复制 D.强同步复制</span><br></pre></td></tr></table></figure><p>32.当发生CDB For MySQL实例由于连接数max_connections到达极限值，基本无法 正常提供服务的时候，一般是由以下哪些原因造成的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.业务程序bug导致的空连接过多 </span><br><span class="line"></span><br><span class="line">B.业务流量太小 </span><br><span class="line"></span><br><span class="line">C.某个连接执行了太久，独占了MySQL的资源，导致大量的访问请求被阻塞 </span><br><span class="line"></span><br><span class="line">D.前端过来的访问远远超出实例的处理能力</span><br></pre></td></tr></table></figure><p>33.您计划使用腾讯云上的DTS服务将本地数据库迁移至云上，针对DTS的服务范 围，以下哪些数据库支持使用DTS服务迁移至云上数据库?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A. MySQL </span><br><span class="line"></span><br><span class="line">B.Redis </span><br><span class="line"></span><br><span class="line">C. Oracle </span><br><span class="line"></span><br><span class="line">D.DB2</span><br></pre></td></tr></table></figure><p>34.您公司的业务整体迁移至腾讯云已经有几个月的时间了,近期您打算做—下对账,用于分析在云上的消耗趋势，也好持续的优化成本，在分析之前，数据的收集和整理是一个必须的过程，关于费用方面，以下几个问题需要您的协助。 腾讯云上为特殊的大型项目还提供了自定义计费的方式，以下关于自定义计费的优势描述中，正确的有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.授予更高的信用额度 </span><br><span class="line"></span><br><span class="line">B．允许特殊账期 </span><br><span class="line"></span><br><span class="line">C．优惠政策定制化 </span><br><span class="line"></span><br><span class="line">D.折扣力度较中小规模项目更大</span><br></pre></td></tr></table></figure><p>35.某母婴连锁品牌，为了更好的服务好互联网用户，把在线购物平台和内部的两个 应用系统迁移到了腾讯云上,如图所示。但由于对云产品了解不深，上云初期在线平台经常遇到异地登录告警、用户打开网站慢甚至打不开、用户反馈收到官网发的异常链接短信、活动优惠券被盗刷，更为严重的是,发生了客户数据信息泄密的事件,运维部门压力非常大,经排查甄别，发现运维部门在账号权限管理、云产品安全管理上存在极大的漏洞,请根据以上描述,回答如下问题: 基于图中所示，现要求应用系统1和应用系统2的实例之间相互隔离,无法互访，下列选项中描述准确且可以实现的方法是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A.将应用系统1和2中的实例关联到两个不同的安全组，且保持两个安全组中无互访规则 </span><br><span class="line"></span><br><span class="line">B.将应用系统1和2中的实例关联到相同的安全组即可 </span><br><span class="line"></span><br><span class="line">C.将vRouter中以10.0.1.0/24和以10.0.2.0/24为目标网段的路由删掉 </span><br><span class="line"></span><br><span class="line">D.可在当前VPC中创建多个网络ACL，添加其它网段的入站流量均拒绝的规则，然后将ACL分别与业务对应子网关联即可</span><br></pre></td></tr></table></figure><p>36.某集团公司，旗下运营有地产、金融、旅游、零售等多个业务板块，为适应新时代数字化转型的浪潮集团决定除金融业务外，其他业务全面上云，现选取物业管理业务优先上云作为试点。上云前调研结果如下∶1、物业管理业务，客户主要集中在北京、上海、广州、成都四个城市及辐射的周边地区，集团在该四个城市均建有本地化的数据中心机房，以存放业务数据;2、一些高级VIP客户信息比较敏感，经讨论决定，敏感数据暂不上云，但云端产生的普通用户信息及相关数据，需要在本地机房有备份;3、要求在上云迁移过程中，业务不能中断。 根据场景描述，集团公司敏感业务在本地数据中心部署,而物业管理业务在云端部署,混合云的模式选择是—种必然，那么如下哪些产品适合构建这种混合云模式?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A. VPN连接 </span><br><span class="line"></span><br><span class="line">B.专线接入 </span><br><span class="line"></span><br><span class="line">C.NAT网关 </span><br><span class="line"></span><br><span class="line">D.云联网</span><br></pre></td></tr></table></figure><p>37.某母婴连锁品牌，为了更好的服务好互联网用户，把在线购物平台和内部的两个 应用系统迁移到了腾讯云上,如图所示。但由于对云产品了解不深，上云初期在线平台经常遇到异地登录告警、用户打开网站慢甚至打不开、用户反馈收到官网发的异常链接短信、活动优惠券被盗刷，更为严重的是,发生了客户数据信息泄密的事件,运维部门压力非常大,经排查甄别，发现运维部门在账号权限管理、云产品安全管理上存在极大的漏洞,请根据以上描述,回答如下问题: 鉴于案例中账号及权限管理存在漏洞的情况，下列关于账号权限和端口安全的描述，正确的是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.账号的密码设置建议符合密码复杂度要求且尽量无规律，定期修改密码，有利于账号安全 </span><br><span class="line"></span><br><span class="line">B.为避免管理员账号权限过大，可基于主账号创建子用户，通过为子用户分配权限的方法来 控制</span><br><span class="line"></span><br><span class="line">C. Linux云服务器使用账号密码登录比密钥登录更安全, Windows服务器登录端口尽量使用 3389以避免无法登录系统的问题 </span><br><span class="line"></span><br><span class="line">D.要建立账号全生命周期管理的理念,已离职的运维人员，账号应当及时禁用或删除</span><br></pre></td></tr></table></figure><p>38.用户在使用弹性伸缩过程中扩增CVM实例失败可能的原因有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.启动配置失效 </span><br><span class="line"></span><br><span class="line">B.伸缩组异常 </span><br><span class="line"></span><br><span class="line">C.CVM购买配额不足 </span><br><span class="line"></span><br><span class="line">D.配置定义的资源售罄</span><br></pre></td></tr></table></figure><p>39.在运维Linux服务器的过程中，您通过以下命令启动了一项服务:systemctl restart named,但是报错无法绑定到53号端口，提示53号端口已经绑定，此时您可以通过以下哪些命令来查看是谁绑定了53号端口?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A. netstat </span><br><span class="line"></span><br><span class="line">B. ss </span><br><span class="line"></span><br><span class="line">C. top </span><br><span class="line"></span><br><span class="line">D. ps</span><br></pre></td></tr></table></figure><p>40.腾讯云上的云监控产品中提供了—条默认告警策略,以下关于默认告警策略的描述 中，正确的是哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.每个策略类型有且仅有一个默认策略 </span><br><span class="line"></span><br><span class="line">B．默认策略可以修改，不可删除 </span><br><span class="line"></span><br><span class="line">C.云监控会自动创建默认云服务器ping不可达的告警策略 </span><br><span class="line"></span><br><span class="line">D.云监控会自动创建默认云数据库磁盘率大于80%的告警策略</span><br></pre></td></tr></table></figure><p>41.经过一段市场调研和选型,您打算将本地的业务系统全部迁往腾讯云，您在本次迁 移项目中担任总l程师角色，将全权负责本次的云上架构规划和迁移的实施，针对以下情形,请提供具体建议和帮助。 本地有一个不到10GB的数据库服务器要上云，您打算使用腾讯云的MySQL数据库服务,并使用DTS来完成上云，如果您要使用DTS,那么以下哪些项是您在DTS配置的过程中必须完成的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.源数据库类型</span><br><span class="line"></span><br><span class="line">B．源数据库lP和端口 </span><br><span class="line"></span><br><span class="line">C.目标数据库实例 </span><br><span class="line"></span><br><span class="line">D.目标数据库密码</span><br></pre></td></tr></table></figure><p>42.在云上配置资源时，要注意减少过度配置问题，以下关于减少过度配置的描述 中，i正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.避免把本地数据中心“—步到位，预留资源&quot;的习惯带入云中 </span><br><span class="line"></span><br><span class="line">B.不确定程序/服务/应用具体需要多少资源的情况下，防止过度购买和支出 </span><br><span class="line"></span><br><span class="line">C.灵活使用弹单性伸缩等产品按需分配资源 </span><br><span class="line"></span><br><span class="line">D.尽量将多项服务部署到同—个CVM中，减少CVM数量</span><br></pre></td></tr></table></figure><p>43.腾讯云上提供了各式各样的安全产品来全方位保护用户安全，以下哪些项属于腾 讯云APP安全防护能力?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.嗅探攻击防护 </span><br><span class="line"></span><br><span class="line">B．中间人攻击防护 </span><br><span class="line"></span><br><span class="line">C. DDOS攻击防护 </span><br><span class="line"></span><br><span class="line">D.羊毛党攻击防护</span><br></pre></td></tr></table></figure><p>44.企业在做上云迁移时,有的适合选择一刀切的方式，保证一次迁移完毕,针对这种方 式，一般什么样的业务才比较适合?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.系统规模小 </span><br><span class="line"></span><br><span class="line">B．流量不大 </span><br><span class="line"></span><br><span class="line">C.业务简单 </span><br><span class="line"></span><br><span class="line">D.允许停服</span><br></pre></td></tr></table></figure><p>45.您是一位经验非常丰富的传统IlT运维人员,公司的业务近期由本地机房迁移到了腾 讯云上，公司的运维团队由于不熟悉云上的环境，出现了一些问题，针对以下问题，请您给出具体方案。您有一个部署了Discuz内容的服务器，突然间无法从外网访问CVM的公网IP了，您应该排查以下哪些项目?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.检查安全组设置 </span><br><span class="line"></span><br><span class="line">B．检查网络ACL设置 </span><br><span class="line"></span><br><span class="line">C.检查NAT网关设置 </span><br><span class="line"></span><br><span class="line">D.检查服务的运行状态</span><br></pre></td></tr></table></figure><p>46.您计比把本地机房中的电商业务以微服务的方式部署在腾讯云上。经过一段时间 的迁移之后，您本地的业务已经完全在腾讯云上运行了，现在您打算提升在腾讯云上的运维效率问题，以便于更快更好的完成工作，针对以下各种场景，请您给出具体且最合理的处理方式。 在使用Ansible工具自动化运维的过程中，可以从以下哪些项中获取远程服务器的各种变量信息?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A. setup模块 </span><br><span class="line"></span><br><span class="line">B. ansible_local </span><br><span class="line"></span><br><span class="line">C. command模块 </span><br><span class="line"></span><br><span class="line">D. system模块</span><br></pre></td></tr></table></figure><p>47.MSP产品整合了多种迁移工具，能够实现跨友商平台对象存储数据的迁移,那么在 迁移过程中，影响文件迁移时间的要素有哪些?</p><p>答案：ABCD</p><p>A、迁出源读取数据支持的并发量 B.MSP平台支持的迁移带宽 C.迁出源读取数据的传输速度 D.迁入目标位置的数据写入速度</p><p>48.腾讯云上提供了API的托管服务，并提供API的完整生命周期管理，请选出云API 网关包括以下哪些功能?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A.创建API </span><br><span class="line"></span><br><span class="line">B．发布API </span><br><span class="line"></span><br><span class="line">C.下线API </span><br><span class="line"></span><br><span class="line">D.维护API</span><br></pre></td></tr></table></figure><p>49.通过云API的方式调用云产品，在调用方式上都有清晰的请求结构，下列关于调用 云产品API时，请求结构的描述正确有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BD</span><br><span class="line"></span><br><span class="line">A.调用的请求地址域名作为API的接入点，描述了产品实际提供服务的地域 </span><br><span class="line"></span><br><span class="line">B．云API支持POST和GET两种http请求方法 </span><br><span class="line"></span><br><span class="line">C.腾讯云API的所有接口均通过高效的http通信协议进行 </span><br><span class="line"></span><br><span class="line">D.云API中的字符编码均采用UTF-8的方式</span><br></pre></td></tr></table></figure><p>50.Kubernetes是一个开源的容器集群管理系统，包含了多种类型的资源管理对象， 下列关于资源对象描述正确的有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A. pod是Kubernetes中被管理和调度的最小单元 </span><br><span class="line"></span><br><span class="line">B. replication controller是—种用于管理有状态应用的工作负载 </span><br><span class="line"></span><br><span class="line">C. service主要用于定义pod的逻辑集合和访问该集合的策略 </span><br><span class="line"></span><br><span class="line">D. label描述的是key/vaule的键值对，通常作为service和pod间关联的纽带</span><br></pre></td></tr></table></figure><p>51.腾讯云上提供了不同维度的监控解决方案，主要体现在以下哪些层面上?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.业务层 </span><br><span class="line"></span><br><span class="line">B．应用层 </span><br><span class="line"></span><br><span class="line">C.系统层 </span><br><span class="line"></span><br><span class="line">D．数据层</span><br></pre></td></tr></table></figure><p>52.TKE容器服务用户可以直接在控制台，通过配置日志收集规则进行集群内日志的 收集，并将收集到的日志发送至日志服务CLS的指定日志主题。基于日志收集功能，使用日志服务平台可进行集群服务日志的实时检索、消费、投递等功能。请问TKE容器服务支持以下哪几种日志采集类型?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.采集容器标准输出日志 </span><br><span class="line"></span><br><span class="line">B．采集容器内文件日志 </span><br><span class="line"></span><br><span class="line">C.采集节点内文件日志 </span><br><span class="line"></span><br><span class="line">D.采集云服务器日志</span><br></pre></td></tr></table></figure><p>53.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做—下对账， 用于分析在云上的消耗趋势,也好持续优化成本，在分析之前，数据的收集和整理是一个必须的过程,关于费用方面，以下几个问题需要您的协助。 如果一个用户开通按量付费产品，从产品开通到停用，账户余额需要经历以下哪些状态?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.充值 </span><br><span class="line"></span><br><span class="line">B．冻结 </span><br><span class="line"></span><br><span class="line">C.预扣款 </span><br><span class="line"></span><br><span class="line">D.解冻</span><br></pre></td></tr></table></figure><p>54.在腾讯云上运维业务系统时，可以通过以下哪些项来合理的做到成本控制?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.按实际需要的量购买 </span><br><span class="line"></span><br><span class="line">B．优化备份和快照策略,及时删除不需要的旧备份 </span><br><span class="line"></span><br><span class="line">C.分析本地硬件和云产品的差别，合理进行产品选型 </span><br><span class="line"></span><br><span class="line">D.尽量使用本地硬件资源，减少采购云产品</span><br></pre></td></tr></table></figure><p>55.目前您在腾讯云上管理了一个非常大的服务器集群，其中涉及到数据库、负载均 衡、服务器、CDN等产品，以下关于使用云监控可以为您带来的功能及优势的描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A.云监控提供自动、准确且几乎实时地采集基础监控指标的功能，在数据异常时，可以第一 时间告警给管理员 </span><br><span class="line"></span><br><span class="line">B．云监控可以通过邮件、短信、站内信、QQ、微信等多种渠道将告警发送给管理员 </span><br><span class="line"></span><br><span class="line">C.管理员可以创建各种视图用于判断业务情况 </span><br><span class="line"></span><br><span class="line">D.云监控可以对公网的质量进行监控，提供了优化服务质量的功能</span><br></pre></td></tr></table></figure><p>56.对象存储COS的成本来源有多个，下列哪些因素是影响COS产品计费的要素?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BD</span><br><span class="line"></span><br><span class="line">A.地域 </span><br><span class="line"></span><br><span class="line">B．存储类型 </span><br><span class="line"></span><br><span class="line">C.外网上行流量 </span><br><span class="line"></span><br><span class="line">D.跨地域复制的流量</span><br></pre></td></tr></table></figure><p>57.在腾讯云上您可以设计VPC网络用于您的业务，以下关于VPC的设计原则描述 中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.安全 </span><br><span class="line"></span><br><span class="line">B.灵活 </span><br><span class="line"></span><br><span class="line">C.可控 </span><br><span class="line"></span><br><span class="line">D.开放</span><br></pre></td></tr></table></figure><p>58.您在考虑全星迁移和平滑迁移两种方案，以下关于这两种迁移方案描述中，正确 的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.全星迁移的过程相对简单，流程也比较清晰 </span><br><span class="line"></span><br><span class="line">B．平滑迁移主要适用于系统规模大，业务复杂的场景 </span><br><span class="line"></span><br><span class="line">C.全量迁移的过程中无需停机 </span><br><span class="line"></span><br><span class="line">D.平滑迁移的过程中无需停机</span><br></pre></td></tr></table></figure><p>59.在设计云上VPC时，要充分考虑以下哪些因素?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.在同一个城市下的业务是否需要隔离 </span><br><span class="line"></span><br><span class="line">B.现在以及未来的IP地址需求量 </span><br><span class="line"></span><br><span class="line">C.是否有异地容灾的需求 </span><br><span class="line"></span><br><span class="line">D.是否有机器不能直接开通公网</span><br></pre></td></tr></table></figure><p>60.近期有一位对公司产生误解的IT员工离职了，并在离职前对数据库等关键数据执行 了删除操作.尽管很快就被发现并使用备份的数据完成了恢复,但是还是产生了较大的影响。您作为公司内的安全人员,您应该执行以下哪些项的措施才能避免以后再次发生此类事件?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.管理账号与运维账号分离，严格控制管理账号的使用 </span><br><span class="line"></span><br><span class="line">B.权限最小化授权原则，不授予过高的权限 </span><br><span class="line"></span><br><span class="line">C.员工离职时及时清除权限 </span><br><span class="line"></span><br><span class="line">D.积极开展信息安全教育</span><br></pre></td></tr></table></figure><p>61.腾讯云上提供了各式各样的安全产品来全方位保护用户安全，以下哪些项属于腾 讯云业务安全防护能力?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AD</span><br><span class="line"></span><br><span class="line">A.羊毛党攻击防护 </span><br><span class="line"></span><br><span class="line">B.病毒木马攻击防护 </span><br><span class="line"></span><br><span class="line">C.APP漏洞攻击防护 </span><br><span class="line"></span><br><span class="line">D.金融欺诈攻击防护</span><br></pre></td></tr></table></figure><p>62.您在本地机房中有大量的业务，您每天的工作安排得都非常满，但是还是无法预 料到所有问题，运维压力特别大，您计划把本地机房中所有的业务都迁移到腾讯云上，以减轻运维压力，预计在腾讯云上会维护大量的产品，其中包括30台Centos Linux集群，负载均衡，MySQL等，并且在迁移到云上之后，需要尽快开发3个APP对外提供服务。 您在云上部署业务之后，希望可以借助平台能力来实现自动化运维，日前您发现腾讯云上有一个产品“蓝鲸”比较适合您，也可以在以下哪些场景下来使用蓝鲸实现自动化管理?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.持续集成 </span><br><span class="line"></span><br><span class="line">B.持续部署 </span><br><span class="line"></span><br><span class="line">C.在业务系统遇到故障时，自动识别故障并恢复 </span><br><span class="line"></span><br><span class="line">D.大量脚本需要在服务器组上执行的复杂运维场景</span><br></pre></td></tr></table></figure><p>63.腾讯云TSF的应用根据应用托管方式，分为哪几种类型?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.虚拟机,应用 </span><br><span class="line"></span><br><span class="line">B．服务器应用 </span><br><span class="line"></span><br><span class="line">C容器应用 </span><br><span class="line"></span><br><span class="line">D.Serverless应用</span><br></pre></td></tr></table></figure><p>64.目前腾讯云在云计算市场已经占有一席之地，以下关于腾讯能够提供云服务能力 的原因描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.基础设施完备 </span><br><span class="line"></span><br><span class="line">B.管理经验充足 </span><br><span class="line"></span><br><span class="line">C.研发能力领先 </span><br><span class="line"></span><br><span class="line">D.议价能力强</span><br></pre></td></tr></table></figure><p>65.下列关于文件存储、块存储、对象存储的适用场景的描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.块存储通常是指提供数据块级别的存储，通常适用于硬盘存储场景 </span><br><span class="line"></span><br><span class="line">B.文件存储通常适用于直接连在网络上并提供资料存取服务的场景，例如NAS产品都是属于 文件存储 </span><br><span class="line"></span><br><span class="line">C.对象存储主要是一种能够存储海量数据的分布式存储服务，通常适用于大量数据存取，并 提供以对象为维度的访问场景 </span><br><span class="line"></span><br><span class="line">D.对象存储适用于无法通过网络进行访问的场景</span><br></pre></td></tr></table></figure><p>66.腾讯云上提供多个地域、可用区，并提供多种实例，下列关于地域、可用区、实 例之间的关系描述，正确的有哪项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BC</span><br><span class="line"></span><br><span class="line">A.地域是可用区下的—个物理位置 </span><br><span class="line"></span><br><span class="line">B．可用区是在同—地域内电力和网络互相独立的物理数据中心 </span><br><span class="line"></span><br><span class="line">C.地域包含多个可用区，每个可用区下包含多个实例 </span><br><span class="line"></span><br><span class="line">D.可用区包含多个地域，每个地域下包含多个实例</span><br></pre></td></tr></table></figure><p>67.以下关于企业使用云计算对企业的影响描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.相比传统企业运维，在固定资产折旧上，使用公有云可以降低投入成本 </span><br><span class="line"></span><br><span class="line">B.相比使用传统人工运维来说，使用云计算的自动化运维平台，整体上可以节约运营成本 </span><br><span class="line"></span><br><span class="line">C.相比企业IT技术人员各自维护本企业的机房资源来说，使用公有云可以减少宕机，提升业 务的容灾能力 </span><br><span class="line"></span><br><span class="line">D.针对传统企业在采购资源时，必须留出高峰期所使用的资源，而且IT技术人员往往很难全 方面的保障业务的SLA，而使用公有云将带来灵活性和方便性，在整体业务的持续性和高可用性上更好</span><br></pre></td></tr></table></figure><p>68.以下关于私有云和混合云的描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.私有云更侧重公有云上没有的服务或者不便提供的服务 </span><br><span class="line"></span><br><span class="line">B．混合云在架构上会比较复杂 </span><br><span class="line"></span><br><span class="line">C.在管理上，混合云的管理成本会比单纯私有云要低 </span><br><span class="line"></span><br><span class="line">D.在管理上，混合云的管理成本会比单纯私有云要高</span><br></pre></td></tr></table></figure><p>69.目前腾讯云CDN加速支持以下哪些端口号?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.80 </span><br><span class="line"></span><br><span class="line">B.443 </span><br><span class="line"></span><br><span class="line">C. 8000</span><br><span class="line"></span><br><span class="line">D.8080</span><br></pre></td></tr></table></figure><p>70.当网站接入CDN后打不开，可采用下列哪些排查方法?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.检查接入域名CDN状态是否为‘已关闭’ </span><br><span class="line"></span><br><span class="line">B．检查接入域名CNAME解析是否生效 </span><br><span class="line"></span><br><span class="line">C.检查源站是否能正常访问 </span><br><span class="line"></span><br><span class="line">D.检查DNS服务商处是否绑定CNAME</span><br></pre></td></tr></table></figure><p>71.负载均衡实例配置的公网域名为www.qcloudtest.com，当同一用户访问该域名时，哪种情况会将请求持续分配到同一台后端服务器上? </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AC</span><br><span class="line"></span><br><span class="line">A.开启会话保持功能 </span><br><span class="line"></span><br><span class="line">B.关闭会话保持功能，并选择加权轮询的调度方式 </span><br><span class="line"></span><br><span class="line">C.关闭会话保持功能，并选择ip_hash的调度方式 </span><br><span class="line"></span><br><span class="line">D.关闭会话保持功能，并选择加权最小连接数调度方式</span><br></pre></td></tr></table></figure><p>72.企业购买云服务器后，需要对其进行指标监控，在云监控(Cloud Monitor，CM) 中云服务器无监控数据的原因可能有哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.未安装监控agent </span><br><span class="line"></span><br><span class="line">B.用户通过控制台或者命令行操作云服务器 </span><br><span class="line"></span><br><span class="line">C.云服务器高负载 </span><br><span class="line"></span><br><span class="line">D.云服务器内部 DNS配置错误</span><br></pre></td></tr></table></figure><p>73.腾讯云上提供了天御防护服务，以下哪些项属于天御防刷服务的主要功能?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.验证码保护 </span><br><span class="line"></span><br><span class="line">B．登陆保护 </span><br><span class="line"></span><br><span class="line">C.对抗羊毛党 </span><br><span class="line"></span><br><span class="line">D.注册保护</span><br></pre></td></tr></table></figure><p>74.您在一家互联网公司工作,目前企业在其他公有云动厂商处已经部署了一套云上系 统，用到的云资源包括云服务器、云数据库、对象存储等。目前，企业打算将系统全部迁移至腾讯云，任务交由你主导完成。1.任务迁移至腾讯云后，系统将全部使用腾讯云产品，源数据端将停止使用:2、任务完成的同时需注重迁移效率和经济效益。 您需将原公有云厂商MySQL数据库上的业务数据迁移至腾讯云，后期将业务也会迁移到腾讯云。目前企业已在源数据和腾讯云数据库MySQL之间拉通了专线连接,请问以下哪些选项中的措施是正确且有效的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.该任务应选择DTS做全量数据迁移，全量数据迁移过程请避免DDL操作 </span><br><span class="line"></span><br><span class="line">B.任务执行的时间规划在业务低峰期(夜间)时进行迁移 </span><br><span class="line"></span><br><span class="line">C.在迁移前的准备工作中，首先在源端数据表中添加主键，并创建有权限的迁移账号 </span><br><span class="line"></span><br><span class="line">D.云数据库MySQL的存储空间须是源端数据库所占用存储空间的0.9倍以上</span><br></pre></td></tr></table></figure><p>75.下列关于CDB for MySQL功能的描述中，正确的有哪些项?</p><p>答案：ABCD</p><p>A. MySQL支持多可用区容灾 B.支持细粒度的权限控制 C.支持物理独享方案，带来金融级别的合规 D.支持包括数据库引擎在内的全面日常监控</p><p>76.以下哪些场景属于腾讯云安全产品-移动应用安全的使用场景?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.在应用开发中，需要集成安全键盘的SDK </span><br><span class="line"></span><br><span class="line">B.在开发完毕后需要检测是否有漏洞 </span><br><span class="line"></span><br><span class="line">C.在应用待上线时需要加固，防止被破解 </span><br><span class="line"></span><br><span class="line">D.在应用上线后，需要对应用正盗版分发情况全掌握</span><br></pre></td></tr></table></figure><p>77.您公司的业务整体迁移至腾讯云已经有几个月的时间了，近期您打算做下对账， 用于分析在云上的消耗趋势，也好持续的优化成本，在分析之前，数据的收集和整理是个必须的过程，关于费用方面，以下几个问题需要您的协助。 腾讯云提供的服务支持分为基础服务和旗舰服务，其中旗舰服务的内容包括以下哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.延期停服 </span><br><span class="line"></span><br><span class="line">B.专家护航 </span><br><span class="line"></span><br><span class="line">C.安全保障 </span><br><span class="line"></span><br><span class="line">D.服务快速响应</span><br></pre></td></tr></table></figure><p>78.腾讯云数据库SQL Server，采用高IO机型作为基础硬件，采用双机高可用架构, 并包含微软正版许可，收费模式为包年包月(预付费)，其中包含以下哪几项费用?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BD</span><br><span class="line"></span><br><span class="line">A. CPU费用 </span><br><span class="line"></span><br><span class="line">B．内存费用 </span><br><span class="line"></span><br><span class="line">C.  网络费用 </span><br><span class="line"></span><br><span class="line">D．存储费用</span><br></pre></td></tr></table></figure><p>79.为了充分保障用户的数据资产，腾讯云制定了完善的云硬盘CBS到期回收机制， 以下关于包年包月弹性云硬盘的到期处理机制描述正确的是哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.到期前七天，系统会开始给用户发送续费提醒通知 </span><br><span class="line"></span><br><span class="line">B.账户余额充足的情况下，若您已设置自动续费，云硬盘在到期当天会自动续费 </span><br><span class="line"></span><br><span class="line">C.若您的云硬盘在到期后7*24小时之内仍未进行续费，系统将对云硬盘作停服处理（云硬盘不可用，仅保留数据)，并强制解除与云服务器的关联关系(如有)，云硬盘进入回收站。您仍可以在回收站对云硬盘进行续费找回，但被续费找回的云硬盘续费周期的起始时间为上一个周期的到期日。 </span><br><span class="line"></span><br><span class="line">D.若您的云硬盘进入回收站后7 *24小时之内仍未进行续费找回，系统将开始释放资源，到 期云硬盘中的数据将被清除且不可找回。</span><br></pre></td></tr></table></figure><p>80.在把数据从本地机房迁往云服务平台上的过程中，要注意数据类型问题,请选择以 下哪些数据适合迁往对象存储产品中?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BCD</span><br><span class="line"></span><br><span class="line">A.数据库中的表 </span><br><span class="line"></span><br><span class="line">B.音乐文件</span><br><span class="line"></span><br><span class="line">C. CAD图纸 </span><br><span class="line"></span><br><span class="line">D.视烦文件</span><br></pre></td></tr></table></figure><p>81.在某些产品状态改变时，可以创建告警来及时通知您采取措施。告警在一定周期 内监控某些特定指标，并根据给定阈值每隔若干时间段发送告警。请问告警包含以下哪几个组成部分?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.告警触发条件(什么条件下发送告警) </span><br><span class="line"></span><br><span class="line">B.告警对象(哪个对象发出告警) </span><br><span class="line"></span><br><span class="line">C.告警接收组(谁接到告警) </span><br><span class="line"></span><br><span class="line">D.告警接收方式(怎么接收告警)</span><br></pre></td></tr></table></figure><p>82.—家公司目前有稳定的电商业务正在运转，目前希望通过LogListener客户端采集 日志信息，打算在一台CVM上安装并启动LogListener。请问，在安装与启动过程中，需要配置哪些参数的信息?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BCD</span><br><span class="line"></span><br><span class="line">A. topic </span><br><span class="line"></span><br><span class="line">B. Secretld </span><br><span class="line"></span><br><span class="line">C. secretKey </span><br><span class="line"></span><br><span class="line">D. region</span><br></pre></td></tr></table></figure><p>83.腾讯云上的云监控产品提供了Dashboard自定义控制面板服务，请准确选出此服务 的主要应用场景包括以下哪几项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.跨产品跨实例订阅关键指标监控图表，监控大盘盯屏展示。 </span><br><span class="line"></span><br><span class="line">B.大批量实例指标数据汇聚展示功能，大批量监控解决方案。 </span><br><span class="line"></span><br><span class="line">C.故障排障时对各实例进行关键指标数据对比。 </span><br><span class="line"></span><br><span class="line">D.灵活调节图表顺序、展示区间、刷新频率及粒度,满足个性化的图表需求。</span><br></pre></td></tr></table></figure><p>84.您在完成本地业务迁移至腾讯云上的步骤后，需要尽快完成各项服务验证内容， 迁移结束后您应该完成以下哪些服务内容的验证?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.系统验证:验证系统下各模块服务都已正常启动，且处于白动启动状态 </span><br><span class="line"></span><br><span class="line">B.业务验证:验证整个业务逻辑正常，所有业务的功能模块实际使用正常 </span><br><span class="line"></span><br><span class="line">C.流量验证:验证用户访问流量和数据读写流量都已正常的切换到腾讯云上 </span><br><span class="line"></span><br><span class="line">D.性能验证:验证在大量用户并发访问的实际情况下，所有服务正常，业务访问性能正常</span><br></pre></td></tr></table></figure><p>85.关于在腾讯云上购买CVM时所需支付的价格问题，以下哪项因素的变动，将会导 致购买CVM的实际交付的价格较官网价格计算器的价格发生变化?</p><p>答案：ABCD</p><p>A.机型 </p><p>B．磁盘 </p><p>C.带宽 </p><p>D.CPU核心数</p><p>86.您在腾讯云服务器上的网站无法被外网用户所访问到，您应该在腾讯云上做以下 哪些检查?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A.检查网站服务是否启动 </span><br><span class="line"></span><br><span class="line">B．检查安全组和网络ACL是香放行 </span><br><span class="line"></span><br><span class="line">C.检查CPU和内存利用率是否过高 </span><br><span class="line"></span><br><span class="line">D.检查网络带宽利用率是否过高</span><br></pre></td></tr></table></figure><p>87.腾讯云上的弹性伸缩产品的伸缩组在以下哪些情况下会失效?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.账户余额不足 </span><br><span class="line"></span><br><span class="line">B.资源售罄 </span><br><span class="line"></span><br><span class="line">C.CVM配额不足 </span><br><span class="line"></span><br><span class="line">D.CLB被删除</span><br></pre></td></tr></table></figure><p>88.云数据迁移CDM是腾讯云提供的数据迁移上云服务，下列关于CDM数据迁移场景 描述中，说法错误的选项是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：CD</span><br><span class="line"></span><br><span class="line">A.如果要迁移的数据量特别大，比如达到了TB级别，建议采用CDM的迁移方式 </span><br><span class="line"></span><br><span class="line">B.如果本地数据中心所在地域环境网络信号差，建议采用CDM的迁移方式 </span><br><span class="line"></span><br><span class="line">C.CDM数据迁移的具体做法是用户在线申请迁移任务，然后把备份的数据磁盘邮寄给腾讯云 指定的地址即可，后续迁移任务由腾讯云工程师来完成后，把磁盘寄回 </span><br><span class="line"></span><br><span class="line">D.不论业务是否支持停服迁移，均可采用CDM的方式做数据迁移</span><br></pre></td></tr></table></figure><p>89.腾讯云TSF的日志配置中支持以下选项中的哪些日志类型?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.自定义logback </span><br><span class="line"></span><br><span class="line">B.自定义log4j </span><br><span class="line"></span><br><span class="line">C.自定义log4j2 </span><br><span class="line"></span><br><span class="line">D. Spring boot</span><br></pre></td></tr></table></figure><p>90.以下关于TSF常见概念的解释中，哪些选项的描述是正确的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BCD</span><br><span class="line"></span><br><span class="line">A.应用就是服务 </span><br><span class="line"></span><br><span class="line">B.同—命名空间下，微服务可以直接相互调用 </span><br><span class="line"></span><br><span class="line">C.通过应用可以对用户的程序包以及应用配置进行管理 </span><br><span class="line"></span><br><span class="line">D.同一个部署组运行了相同的程序包、相同的配置、使用相同的启动参数</span><br></pre></td></tr></table></figure><p>91.在使用弹性伸缩产品过程中，伸缩组失效，下列描述中哪些是可能的原因?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.账户余额不足，无法支持资源的扩容 </span><br><span class="line"></span><br><span class="line">B. CVM关联的RDS产品被移除了 </span><br><span class="line"></span><br><span class="line">C.伸缩组所在地域下CVM资源库存不足 </span><br><span class="line"></span><br><span class="line">D.CVM关联的CLB产品被移除了</span><br></pre></td></tr></table></figure><p>92.云API提供了一种高效的云产品管理方式，下列选项中哪些是云API的使用方法?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.使用APIExplorer工具调用产品API </span><br><span class="line"></span><br><span class="line">B．使用SDK工具调用API </span><br><span class="line"></span><br><span class="line">C.使用腾讯云命令行工具TCCLI调用API </span><br><span class="line"></span><br><span class="line">D.使用云APl Inspector工具调用云API</span><br></pre></td></tr></table></figure><p>93.您在本地机房中的业务有80台MySQL数据库服务器，20台Redis数据库服务器， 500台虚拟机，10套硬件负载均衡，10TB非结构化数据，本地运维压力日益上升，经过几轮选型，您打算把本地的业务全部迁移至腾讯云上，来减轻基础架构的运维任务。 经过慎重考虑，您企业中业务逻辑较为复杂，您还是打算使用平滑迁移的方式进行迁移，以下关于平滑迁移的具体关键性步骤的描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A.资源环境部署:在云上申请需要的资源，本地完成系统调整和代码改造，根据云的特性对 应用系统架构做调整 </span><br><span class="line"></span><br><span class="line">B.环境测试和验证，验证完毕后，配置新机房DB的配置，开始数据同步并校验 </span><br><span class="line"></span><br><span class="line">C.大量数据同步结束后，完成业务流量切换，并禁用本地数据源写入 </span><br><span class="line"></span><br><span class="line">D.完成以上步骤则可完成业务平滑迁移</span><br></pre></td></tr></table></figure><p>94.在实现电商业务的微服务过程中，必然要面临着单体架构演进为模块化设计，面 对众多模块，我们通过以下哪些项来实现高峰期时模块的扩展性以及通过哪项配置来实现统—的访问入口?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.通过容器集群的弹性伸缩来保障模块的扩展性 </span><br><span class="line"></span><br><span class="line">B．通过SCF来保障模块的扩展性 </span><br><span class="line"></span><br><span class="line">C.通过NAT网关来提供统—的访问入口 </span><br><span class="line"></span><br><span class="line">D.通过负载均衡来提供统—的访问入口</span><br></pre></td></tr></table></figure><p>95.您是第一次使用腾讯云，在腾讯云上部署了一个小型的电商型网站，经过您的测 算，一般的业务平峰期只需要20台机器，高峰期需要增加25台，为了更好地提供用户体验，您在腾讯云上直接购买了30台包年包月机器用于确保高峰期一定可以流畅访问，为了更好的知道每个月的费用消耗情况，您在月底时都会开工单询问本月的消耗以及询问消费的趋势和明细，随着时间的推移，您感觉费用居高不下，急需要解决此问题。此案例中，存在以下哪些项的问题?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.过渡配置 </span><br><span class="line"></span><br><span class="line">B.供应商选择不合理 </span><br><span class="line"></span><br><span class="line">C.计费模式选择不合理 </span><br><span class="line"></span><br><span class="line">D.未能主动掌握费用及消耗情况</span><br></pre></td></tr></table></figure><p>96.经过慎重考虑，您企业中业务逻辑较为复杂的业务，您还是打算使用平滑迁移的 方式进行迁移，以下关于平滑迁移的具体关键性步骤的描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A.资源环境部署:在云上申请需要的资源，本地完成系统调整和代码改造，根据云的特性对 应用系统架构做调整 </span><br><span class="line"></span><br><span class="line">B.环境测试和验证，验证完毕后，完成新机房DB的配置，开始数据同步并校验 </span><br><span class="line"></span><br><span class="line">C.大量数据同步结束后，完成业务流量切换，并禁用本地数据源写入 </span><br><span class="line"></span><br><span class="line">D.完成以上步骤则可完成业务平滑迁移</span><br></pre></td></tr></table></figure><p>97.您正在配置网络ACL的规则，第—条规则是允许192.168.1.0/24访问TCP:80端 口，第二条规则是拒绝0.0.0.0/0访问TCP:80端口，以下描述中，正确的是哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AD</span><br><span class="line"></span><br><span class="line">A.第—条规则是允许，那效果就是允许192.168.1.0/24访问TCP:80端口 </span><br><span class="line"></span><br><span class="line">B.当允许和拒绝冲突时，拒绝优先，所以是不允许192.168.1.0/24访问TCP:80端口 </span><br><span class="line"></span><br><span class="line">C.最终的效果是除了192.168.1.0/24之外的所有人，都可以访问TCP:80端口 </span><br><span class="line"></span><br><span class="line">D.最终的效果是除了192.168.1.0/24之外的所有人，都不可以访问TCP:80端口</span><br></pre></td></tr></table></figure><p>98.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做—下对账， 用于分析在云上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整理是—个必须的过程，关于费用方面，以下几个问题需要您的协助。 按量计费的模式与包年包月模式相比，除了在使用方式上的区别之外，还有以下哪些区别?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.较大量瓷源临时增加时可能出现无资源可用情况 </span><br><span class="line"></span><br><span class="line">B．费用可能会大大超出预期 </span><br><span class="line"></span><br><span class="line">C.费用可能会大大低于预期 </span><br><span class="line"></span><br><span class="line">D.经常需要按星计费的情况下，还可以申请开通自定义计费，但是包年包月不行</span><br></pre></td></tr></table></figure><p>99.在海量数据需要进行监控时，需要一定的数据分析技巧才能得心应手，那么以下 那些描述属于海量监控数据分析的技巧?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ACD</span><br><span class="line"></span><br><span class="line">A.把指标分为两大类:低层次指标和高层次指标 </span><br><span class="line"></span><br><span class="line">B.把指标分为两大类:粗层次指标和细层次指标 </span><br><span class="line"></span><br><span class="line">C.遇到问题时，追溯根源，找到问题的原因是什么，从根本上处理问题 </span><br><span class="line"></span><br><span class="line">D.在监控中，加入舆情监控维度</span><br></pre></td></tr></table></figure><p>100.您公司在推动本地单体架构的电商业务系统迁移至腾讯云上，并以微服务的方式 部署到腾讯云上，您在其中负责提升整体业务的用户体验，并降低整体成本。目前公司的业务都是单体架构，您需要明确单体架构和微服务的主要区别来完成业务模型设计，以下关于其区别描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BCD</span><br><span class="line"></span><br><span class="line">A.微服务是一个大而全的“超级&quot;工程，通常所有功能是部署到同一个服务器上来承载压力 </span><br><span class="line"></span><br><span class="line">B．微服务的整体思想是解耦，将一个大型项目进行详细拆分,分布式进行部署 </span><br><span class="line"></span><br><span class="line">C.单体架构通常扩展性和吞吐量比较差，相比微服务架构来说，较难实现快速迭代 </span><br><span class="line"></span><br><span class="line">D.相对于单体架构—旦需要变更非常麻烦，使用微服务以后，日日可变更，甚至可以实现自 动化，日日变更不头疼</span><br></pre></td></tr></table></figure><p>101.您在腾讯云上构建了一个电商网站，涉及到10台服务器，30块高性能硬盘，对象 存储，CDN，负载均衡等产品，现在您决定对其进行整体的监控，可以通过以下哪些维度进行立体化监控?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.架构纵深维度:即从最基础的基础架构(机房、服务器、存储、网络等硬件)，到操作系统， 到应用，到业务数据，每个层级都需要监控 </span><br><span class="line"></span><br><span class="line">B．数据访问维度:即用户要访问到应用，需要先通过域名解析，然后经过CDN和缓存，在通过 负载均衡，最后找到服务器集群，每个环节都要进行监控 </span><br><span class="line"></span><br><span class="line">C.产品自身维度:腾讯云的每个产品都自带监控项，可以通过自带的监控项进行监控和告警 </span><br><span class="line"></span><br><span class="line">D.信息获取维度:要拿到监控信息，不一定要直接深度IT架构主动获取数据(即主动监控)，也 可以在不侵入IT架构的前提下，以普通用户的身份对业务系统进行访问(即被动监控，可以监控到网络环境等外部问题)，还可以基于舆情监控等实现旁路监控</span><br></pre></td></tr></table></figure><p>102.制作特定的asp、php、jsp、asa，cgi等网页文件，且网页中包括命令执行环境， 与网站服务器WEB目录下正常的网页文件混在一起,使用浏览器远程来访问这些后门，得到命令执行环境，实现对网站或WEB系统服务器的控制，或者利用密码字典的方式不断的尝试登录服务器，直到成功登录并实现对网站服务器的控制，这两种攻击手段的描述符合以下哪些项的特征?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB</span><br><span class="line"></span><br><span class="line">A.木马攻击 </span><br><span class="line"></span><br><span class="line">B．密码破解攻击 </span><br><span class="line"></span><br><span class="line">C.系统漏洞入侵 </span><br><span class="line"></span><br><span class="line">D.跨站攻击</span><br></pre></td></tr></table></figure><p>103.在云上运维，我们推荐使用网络访问控制手段来保障运维和业务的安全，我们可 以把业务分为以下哪些分类来制定网络访问控制规则?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.互联网应用组 </span><br><span class="line"></span><br><span class="line">B.运维管理组 </span><br><span class="line"></span><br><span class="line">C.内网应用组 </span><br><span class="line"></span><br><span class="line">D.服务器组</span><br></pre></td></tr></table></figure><p>104.目前您企业在腾讯云上的年消耗已经达到100万/年，业务系统非常多，云服务器 200台，负载均衡40个，域名30个并全部接入CDN,MySQL数据库30套，Redis数据库20套，对象存储存储桶若干，数据量每年都要正常3OTB，运维团队每天压力很大，成立了一个20人的小团队，专门忙于处理各项业务系统的告警信息，但是依旧表示人手不够，运维团队总是忙于处理系统发生事故之后的“抢救”事件，平时也没有很好的监控手段，目前急需全面的业务监控手段，将人员从”“救火”的状态解救出来。 由于涉及了大量的云产品和服务，您打算在腾讯云上启动云产品和业务的监控项目，需要对哪些对象进行监控?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.云服务器 </span><br><span class="line"></span><br><span class="line">B.负载均衡 </span><br><span class="line"></span><br><span class="line">C. MySQL </span><br><span class="line"></span><br><span class="line">D. Redis</span><br></pre></td></tr></table></figure><p>105.以下描述中，适合使用API网关的应用场景的选项有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.微服务开发 </span><br><span class="line"></span><br><span class="line">B. serverless开发 </span><br><span class="line"></span><br><span class="line">C.传统应用的API暴露 </span><br><span class="line"></span><br><span class="line">D.自动化运维</span><br></pre></td></tr></table></figure><p>106.下列关于KVM虚拟化和XEN虚拟化的区别描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BD</span><br><span class="line"></span><br><span class="line">A. Xen虚拟化技术相比腾讯云所使用的KVM虚拟化，有更强的性能表现 </span><br><span class="line"></span><br><span class="line">B.腾讯云所使用的KVM虚拟化技术相比Xen虚拟化，有更强的性能表现 </span><br><span class="line"></span><br><span class="line">C. Xen虚拟化技术必须每年付授权费 </span><br><span class="line"></span><br><span class="line">D.KVM的社区会比XEN更活跃</span><br></pre></td></tr></table></figure><p>107.在腾讯云监控平台为了避免用户错过告警可以设置告警重复通知策略，如果设置 了”周期指数递增”的重复策略，当某个统计周期为5分钟的告警触发后，那么用户将会在下列哪些数据段收到告警信息?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABD</span><br><span class="line"></span><br><span class="line">A.10分钟 </span><br><span class="line"></span><br><span class="line">B.20分钟 </span><br><span class="line"></span><br><span class="line">C.30分钟</span><br><span class="line"></span><br><span class="line">D.40分钟</span><br></pre></td></tr></table></figure><p>108.腾讯云上提供了非常丰富的账单服务，其中关于一个完整的账单模型构建是从以 下哪些维度进行的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.资金管理 </span><br><span class="line"></span><br><span class="line">B．瓷源管理 </span><br><span class="line"></span><br><span class="line">C.账单API </span><br><span class="line"></span><br><span class="line">D.审计</span><br></pre></td></tr></table></figure><p>109.您在腾讯云上购买了一个域名，一台CVM，做了一个纯静态的网站，当您将域名 解析到CVM的外网IP之后，发现无法正常通过域名打开网站，可能是以下哪些原因?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.服务没有启动，及时启动服务 </span><br><span class="line"></span><br><span class="line">B.域名没有实名认证，尽快完成实名认证 </span><br><span class="line"></span><br><span class="line">C.域名没有备案，尽快完成备案 </span><br><span class="line"></span><br><span class="line">D.网络付费模式不是包年包月，尽快调整为包年包月</span><br></pre></td></tr></table></figure><p>110.您在部署好弹性伸缩的论坛网站之后，发现只能对一个子网内的论坛访问，造成 这种现象的原因，可能是以下哪些原因所导致的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AB </span><br><span class="line"></span><br><span class="line">A.子网的掩码设置错误 </span><br><span class="line"></span><br><span class="line">B．网络ACL设置错误 </span><br><span class="line"></span><br><span class="line">C.弹性伸缩的伸缩组失效 </span><br><span class="line"></span><br><span class="line">D.服务的配置文件设置错误，导致新机器没有适配服务</span><br></pre></td></tr></table></figure><p>111.当您需要用云API来查询实例机型列表时，以下哪些参数是您所必须提供的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BC</span><br><span class="line"></span><br><span class="line">A. API版本 </span><br><span class="line"></span><br><span class="line">B.可用区名称 </span><br><span class="line"></span><br><span class="line">C.机型类型 </span><br><span class="line"></span><br><span class="line">D.主机名</span><br></pre></td></tr></table></figure><p>112.您维护了一家以互联网P2P为业务的网站，您发现每当企业做红包活动时，会有一 批人过来参加活动，并获得活动奖金，但是活动结束后却鲜有人成为最终客户的，而且您也苦恼于平台的逾期率过高，有些借贷人并没有使用真实的身份借贷或者借款不还，导致坏账产生，以上描述证明您可能遭遇了以下哪些项的攻击?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：BC</span><br><span class="line"></span><br><span class="line">A.木马攻击 </span><br><span class="line"></span><br><span class="line">B.羊毛党攻击 </span><br><span class="line"></span><br><span class="line">C.金融欺诈攻击 </span><br><span class="line"></span><br><span class="line">D．密码破解攻击</span><br></pre></td></tr></table></figure><p>113.腾讯云上提供了各式各样的安全产品来全方位保护用户安全，以下哪些项属于T- Sec天御风控平台的安全防护能力?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：AD</span><br><span class="line"></span><br><span class="line">A.交易风控 </span><br><span class="line"></span><br><span class="line">B.病毒木马攻击防护 </span><br><span class="line"></span><br><span class="line">C.APP漏洞攻击防护 </span><br><span class="line"></span><br><span class="line">D.金融欺诈借贷防护</span><br></pre></td></tr></table></figure><p>114.专线接入和VPN连接拥有类似的应用场景，下列关于两者对比的描述中，哪些选 项是错误的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：CD</span><br><span class="line"></span><br><span class="line">A. VPN连接相比专线接入易被互联网干扰，稳定性要差 </span><br><span class="line"></span><br><span class="line">B．专线接入相比VPN连接的安全性更高 </span><br><span class="line"></span><br><span class="line">C. VPN网关支持网络地址转换，以便解决网络接入时IP地址冲突问题 </span><br><span class="line"></span><br><span class="line">D.专线接入相比VPN连接的方式价格更低</span><br></pre></td></tr></table></figure><p>115.经过一段市场调研和选型，您打算将本地的业务系统全部迁往腾讯云，您在本次 迁移项目中担任总工程师角色，将全权负责本次的云上架构规划和迁移的实施，针对以下情形，请提供具体建议和帮助。 针对本地大量非结构化数据，可以选择使用CDM迁移上云会更有优势，以下关于CDM数据迁移产品的功能描述中，正确的是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.高效传输 </span><br><span class="line"></span><br><span class="line">B.安全保护 </span><br><span class="line"></span><br><span class="line">C．状态跟踪 </span><br><span class="line"></span><br><span class="line">D.全程免费</span><br></pre></td></tr></table></figure><p>116.云产品资源使用的统计和分析是运维工作的重要组成部分，下列关于获取云产品 数据报表方式的描述，正确的是哪些?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.通过云审计获取产品监控数据 </span><br><span class="line"></span><br><span class="line">B．通过云监控控制台获取数据报表 </span><br><span class="line"></span><br><span class="line">C.通过云产品控制台获取数据报表 </span><br><span class="line"></span><br><span class="line">D.通过API的方式获取所有产品监控数据</span><br></pre></td></tr></table></figure><p>117.新创建的一台Linux系统CVM云服务器实例，使用Xshell和WebShell登录方式均无 法登录，但使用VNC可以正常登录，请判断可能是下列哪些原因引起的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.该实例关联的安全组规则中未开放22号端口 </span><br><span class="line"></span><br><span class="line">B. Linux服务器系统层次的软件防火墙拒绝了SSH协议入站访问 </span><br><span class="line"></span><br><span class="line">C. Linux服务器中SSH进程侦听的是非22号端口 </span><br><span class="line"></span><br><span class="line">D.客户端本地远程连接的软件版本过低</span><br></pre></td></tr></table></figure><p>118.以下属于腾讯微服务平台TSF所适用的应用场景有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.构建分布式服务系统 </span><br><span class="line"></span><br><span class="line">B．应用发布和管理 </span><br><span class="line"></span><br><span class="line">C.数据化运营 </span><br><span class="line"></span><br><span class="line">D.提升业务的合规性，例如符合金融的监管要求等</span><br></pre></td></tr></table></figure><p>119.目前大众点评、哗哩哗哩、快手等企业已经将业务迁移至腾讯云，并且运行良 好。以下关于这些企业选择腾讯云的原因描述中，正确的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.使用灵活方便:更高的可伸缩性，更广的地域覆盖 </span><br><span class="line"></span><br><span class="line">B.降低运营成本:减少故障率、提升工作效率、提高SLA、减少桌面运维成本，借助腾讯云的 海量运营经验来实现企业目标、降低整体运营成本 </span><br><span class="line"></span><br><span class="line">C.提升业务水平:强大的业务架构分布和容灾能力，减少宕机，数据自动备份,业务连续性更高 </span><br><span class="line"></span><br><span class="line">D.降低投入成本:更低的IT资源建设成本、更低的运维成本，更强的自动化能力</span><br></pre></td></tr></table></figure><p>120.在腾讯云中，监控数据的报表可以通过多种途径获得，下列途径中，属于获取数 据报表方式的有哪些项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABC</span><br><span class="line"></span><br><span class="line">A.通过云产品监控控制台获取数据报表 </span><br><span class="line"></span><br><span class="line">B．通过云监控控制台获取 </span><br><span class="line"></span><br><span class="line">C.通过API获取 </span><br><span class="line"></span><br><span class="line">D.通过瓷源账单获取</span><br></pre></td></tr></table></figure><p>121.您在部署好弹性伸缩的论坛网站之后，发现只能对一个子网内的论坛服务器访 问，对另一个子网内的服务访问时发生异常。造成这种现象，可能是以下哪些原因所导致的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：ABCD</span><br><span class="line"></span><br><span class="line">A.子网的掩码设置错误 </span><br><span class="line"></span><br><span class="line">B．网络ACL设置错误 </span><br><span class="line"></span><br><span class="line">C.弹性伸缩的伸缩组的实例创建策略有误 </span><br><span class="line"></span><br><span class="line">D.服务的配置文件是有状态的，导致服务在新机器上无法正常运行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 考试认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云TCP运维题库-单选题</title>
      <link href="/2024/10/09/%E8%85%BE%E8%AE%AF%E4%BA%91TCP%E8%BF%90%E7%BB%B4%E9%A2%98%E5%BA%93-%E5%8D%95%E9%80%89%E9%A2%98/"/>
      <url>/2024/10/09/%E8%85%BE%E8%AE%AF%E4%BA%91TCP%E8%BF%90%E7%BB%B4%E9%A2%98%E5%BA%93-%E5%8D%95%E9%80%89%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>1.您在腾讯云上部署了一个电商网站，为了支持网站运行，您在云上部署了10台服务 器、30块高性能硬盘，对象存储、CDN、 负载均衡等产品，为了提升业务持续的在 线能力，您希望在业务有任何的异动时，可以第一时间得知并尽快修复， 以下哪项 描述是您作为腾讯云用户需要关注的指标及其意义?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：D</span><br><span class="line"></span><br><span class="line">A.您应该及时监控腾讯云机房的空调温湿度指标，以便于及时维修，保证机房质量 </span><br><span class="line">B.您应该及时关注服务器所使用的电源是否为双路电源接入，以便于其中一个服务器电源出 问题时，剩下的一个还能持续保证服务器运行 </span><br><span class="line">C.您应该及时监控磁盘阵列中硬盘的速率,以便于保证磁盘阵列柜的整体性能 </span><br><span class="line">D.您应该及时监控云服务器的内存和CPU的使用率以便于在业务压力上升时，可以第一时间 得知占用量并作出调整</span><br></pre></td></tr></table></figure><p>2.经过一时间的上云迁移之后，该公司本地的业务已经完全在腾低云上运行了,现 在您作为新入行的信息安全岗位人员，需要全面的保障公司的业务在云上安全稳 定的运行。目前企业遇到了以下各种问题，请根据题目分别解答。 您在云上运维时，服务器开了20MB带宽，但是遭到了80MB的DDOS攻击，此时 公司前辈劝您不要增加服务器带宽来承接所有的流量，而应该寻求腾讯云的帮助， 这可能是以下哪个原因?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：D</span><br><span class="line"></span><br><span class="line">A. DDOS的攻击成本较低，而服务器带宽成木较高，不划算 </span><br><span class="line">B.腾讯云上无法提供80MB带宽，无法承接这么大的DDOS攻击 </span><br><span class="line">C.将CVM的带宽加大也不能解决DDOS击，DDOS攻击只能被动等待结束 </span><br><span class="line">D.寻求腾讯云的支持，可以针对攻击方，直来把他们的IP拉黑，成本较低</span><br></pre></td></tr></table></figure><p>3.经过一时间的.上云迁移之后，该公司本地的业务已经完全在腾低云上运行了,现 在您作为新入行的信息安全岗位人员，需要全面的保障公司的业务在云上安全稳 定的运行。目前企业遇到了以下各种问题，请根据题目分别解答。 您作为安全人员，接到DBA的报告说，近期正在持续不断的遭到撞库,户们已 经产生了巨大的损失,撞库具体是指什么意思?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.指公司的仓库正在面临风险 </span><br><span class="line">B.可能是指其他地方泄露了用户的账号密码，有人在用同样的账号密码尝试匹配您公司的数 据库内容 </span><br><span class="line">C.可能是指数据库服务器遇到了漏洞问题， 需要打补丁 </span><br><span class="line">D.可能是指数据库正在被人非法下载，核心资产遭到了泄露</span><br></pre></td></tr></table></figure><p>4.下列关于云审计产品跟踪集日志存储的描述中，正确的有哪项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.跟踪集需要把数据放入到COS存储中，此存储桶可以是新建存储桶，也可以是现有存储 桶，COS中跟踪集产生的数据部分不收费 </span><br><span class="line">B.跟踪集需要把数据放入到COS存储中，COS中跟踪集产生的数据部分按照COS标准进行收 费 </span><br><span class="line">C.跟踪集中的数据可以单独存储(如指定文件存储)，而非必须存储到COS中 </span><br><span class="line">D.跟踪集中的数据由CL S负责存储，CLS支持日志存储功能</span><br></pre></td></tr></table></figure><p>5.您希望能及时掌握公司主顶域名在全国的解析情况，一旦域名被劫持，要及时收 要告警进行处理，您应该在云拨测中选择哪项DNS解析记录?</p><p>答案：A</p><p>A. A<br>B. MX<br>C. NS<br>D. TXT</p><p>6.在Kubenetes的结构中，负责资源调度的是以下的哪个组件?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：D</span><br><span class="line"></span><br><span class="line">A. Pod </span><br><span class="line"></span><br><span class="line">B. Service </span><br><span class="line"></span><br><span class="line">C. Node </span><br><span class="line"></span><br><span class="line">D. Scheduler</span><br></pre></td></tr></table></figure><p>7.在日常工作中，IT系统住往由多位系统管理负责运维，当我们使用同-一个管理员 账号时，可能会造成权限过高，操作失误的风险，并且有管理员离职时，容易带 更高的风险，您应该采取以下哪项操作来规避以上风险?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.为每一位管理员都分配一个超级管理员账号 </span><br><span class="line">B.为每一 位管理员都分配一 个账号，并给予岗位所需的最小权限 </span><br><span class="line">C.为多个管理员分配统一的管理员账号，在管理员离职时，禁用旧账号，并统一再次分配新 账号 </span><br><span class="line">D.管理员账号统- -由部]经理输入，当管理员需要进行服务器管理时，请求经理输入口令</span><br></pre></td></tr></table></figure><p>8.腾讯云上提供了各式各样的安全产品来全方位保护用户安全，以下哪项描述不属 于腾讯云主机安全防护能力?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：D</span><br><span class="line"></span><br><span class="line">A.马攻击防护 </span><br><span class="line"></span><br><span class="line">B.密码破解攻击防护 </span><br><span class="line"></span><br><span class="line">C.系统漏洞防护 </span><br><span class="line"></span><br><span class="line">D.羊毛党攻击防护</span><br></pre></td></tr></table></figure><p>9.自动化运维工具Ansible想要去管理其他的服务器，必须通过以下哪项服务进行?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：A</span><br><span class="line"></span><br><span class="line">A.SSH </span><br><span class="line"></span><br><span class="line">B. Telnet </span><br><span class="line"></span><br><span class="line">C. ICMP </span><br><span class="line"></span><br><span class="line">D. SMTP</span><br></pre></td></tr></table></figure><p>10.在进行微服务设计时，需要遵守一定的设计原则， 例如容器中建议把有状态的业 务服务改变为无状态的计算类服务，下列设计中， 哪一项的描述最符合微服务无 状态设计的描述?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.在购买CVM时，同时选购系统盘和数据盘，将业务部署在系统盘中，生产的数据放在数据盘 中 </span><br><span class="line"></span><br><span class="line">B.在CVM中只部署应用程序，本地内存中建立数据缓存，Session缓存 </span><br><span class="line"></span><br><span class="line">C.在容器中部署网站程序软件时，在配置文件指定后端的CFS存储和云数据库，以便业务高 峰期可以快速拓展服务器数量来承载压力 </span><br><span class="line"></span><br><span class="line">D.在CVM部署NFS服务，并在CVM中挂载CFS卷，业务高峰时，可以快速弹性伸缩服务器来 达到业务能力增长</span><br></pre></td></tr></table></figure><p>11.以下关于蓝鲸作业平台的架构原理与功能描述错误的是哪项?</p><p>答案：D</p><p>A.蓝鲸的作业平台是通过Agent来最终实现脚本的执行和结果的反馈 B.作业平台主要的功能有:脚本执行、文件分发、常规作业执行、账户管理等 C.作业平台的架构包括运维I具、ESB服务总线以及提供作业相关API的具体功能构成，所 有配置通过Agent执行和反馈 D.作业平台只提供脚本编辑和执行功能</p><p>12.下列选项中，关于TSF产品功能描述错误的是哪一项?</p><p>答案：B</p><p>A. TSF支持服务健康检查如果服务不可用，则注册中心自动剔除不可用实例 B. TSF支持服务鉴权的功能,但仅支持白名单鉴权 C.基于TSF框架下的应用部署支持虚拟机、容器、Serverless三种部署方式 D. TSF支持可视化服务依赖拓扑的查看，可以针对性的进行服务优化</p><p>13.您计划把本地机房中的电商业务以微服务的方式部署在腾讯云上。经过-段时间 的迁移之后，您本地的业务已经完全在腾讯云上运行了。现在您打算提升在腾讯 云上的运维效率，以便于更快更好的完成工作。针对以下各种场景，请您给出最 合理的处理方式。 您在腾讯云上的CVM中部署蓝鲸的社区版时，使用了一个无法在互联网中解析的 域名用于测试蓝鲸功能，在部署结束后,您如何使用本地的Windows 10来打开蓝 鲸的网页?</p><p>答案：B</p><p>A.直接打开Windows浏览器，输入所需的域名即可 B.在Windows的Hosts文件中加入所需的条目 C.将CVM的带宽加大 D.由于所使用的域名在公网中没有解析,所以无法使用Windows10打开所需的网页</p><p>14.您在腾讯云上使用了大量的云产品来保障您的业务，但是您发现使用Web UI的控 制台进行配置时，需要不断的点选同样的按钮。重复工作，效率特别低，通常要完成 -个大型业务部署，需要点很多按钮，并且有时候浏览器还有所限制，那么应该 使用以下哪种方式来使用云产品可以最快速的解决您的困扰?</p><p>答案：C</p><p>A.使用Ansible工具 B.使用Sallstack工具 C.使用云API D.请求工单支持</p><p>15.您公司的业务整体迁移至腾讯云已经有几个月的时间了，近期您打算做下对账, 于分析在云上的消耗趋势,也好持续的优化成本，在分析之前，数据的收集和 整理是个必须的过程，关于费用方面，以下几个问题需要您的协助。 以下关于按量计费的服务使用流程中，描述正确的是哪项?</p><p>答案：A</p><p>A.1.账号充值，2、开通服务，3、余额冻结，4、停服后解冻 B.1、停服后充值，2、生成账单，3、欠费处理，4、 开通服务 C. 1、选择具体的资源，2.支付订单，3.生成账单, 4、到期处理，5、续费 D. 1、选择具体的资源，2、生成账单，3.支付订单，4、到期处理，5.续费</p><p>16.您公司的业务整体迁移至腾讯云已经有几个月的时间了,近期您打算做一下对 账，于分析在云上的消耗趋势，也好持续的优化成本，在分析之前，数据的收 集和整理是个必须的过程，关于费用方面， 以以几个问题需要您的协助。 以下关于包年包月计费模式的服务使用流程中，描述正确的是哪项?</p><p>答案：C</p><p>A. 1.开通服务, 2.生成账单，3.欠费处理, 4、停服后充值 B. 1、停服后充值，2、生成账单，3.欠费处理，4、开通服务 C. 1、选择具体的资源，2.支付订单，3.生成账单, 4、 到期处理, 5、续费 D. 1、选择具体的资源，2、生成账单，3、 支付订单，4、余额冻结，5、停服后解冻</p><p>17.您公司在推动本地单体架构的电商业务系统迁移至腾讯云上，并以微服务的方式部 署到腾讯云上，您在其中负责提升整体业务的用户体验，并降低整体成本。 您在测试环境中尝试拆分业务时，遭到了开发人员的集体反对,因为您拆分后，API 接口太分散，并且容器的生命周期是很短的，开发人员在访问API时，产生了很大的不 便，此时您应该如何解决此问题?</p><p>答案：B</p><p>A.直接在容器上面加上一个负载均衡，实现一个统一的访问入口即可 B.使用API网关实现-个统一的访问入口即可 C.使用NAT网关的DNAT功能，实现一个统一 的访问入口即可 D.将API接口信息实时更新到数据库表中，开发人员只需要读取数据库即可</p><p>18.经过一段市场调研和选型您打算将本地的业务系统全部迁往腾讯云，您在本次迁 移项目中担任总工程师角色将全权负责本次的云上架构规划和迁移的实施，针对 以下情形，请提供具体建议和帮助。 您在迁移的过程中打算将一部分机密数据仍然放在本地机房 ，其他的业务放在腾 讯云上，中间使用专线通信，但是本地机房和云上的网络范围都用了的 192.168.1.0/24网段，此时您应该如何保证云上和云下网络之间进行高质量通信?</p><p>答案：A</p><p>A.改用VPN的方式 B.直接通过公网进行通信 C.使用NAT型号的专线网关 D.网络重叠的情况下，无法使用专线通信</p><p>19.您在改善公司整体运维效率的过程中，发现腾讯云上的全部产品都提供了完善的API 接口，打算尝试通过API接口来完成一些运维任务，请您认真考虑以下问题。 您在腾讯云上成功执行API命令之后，返回的结果默认是以下哪项格式?</p><p>答案：C</p><p>A. array B. text C. JSON . D. Table</p><p>20.一家公司使用腾讯云TKE容器服务部署服务，你作为这家公司的运维人员，希望通 过docker制作镜像并发布服务，请问需要经过怎样的操作步骤?</p><p>答案：C</p><p>A.1、 编写应用程序、并测试可成功运行 2、创建Docker镜像 3、将镜像推送到qcloud镜像仓库 4.编写Dockerfile文件 5、在容器服务控制台通过镜像创建服务 B. 1.编写Dockerfle文件 2、编写应用程序、并测试可成功运行 3、创建Docker镜像 4、将镜像推送到qcloud镜像仓库 5、在容器服务控制台通过镜像创建服务 C. 1.编写应用程序、并测试可成功运行 2、编写Dockerfile文件 3、创建Docker镜像 4、将镜像推送到qcloud镜像仓库 5、在容器服务控制台通过镜像创建服务 D.1.编写应用程序、并测试可成功运行 2.创建Docker镜像 3.在容器服务控制台通过镜像创建服务 4编写Dockerile文件 5.将镜像推送到qcloud镜像仓库</p><p>21.在某天的凌晨时段,在短时间内某个远维管理账号发生大量的登录服务器失败的 事件。并且在之后连续几天的凌晨时间段，该运维管理账号不断重复错误登录。 基于此审计信息，运维人员快速判断该运维管理账号的用户名已经泄露，并遭受 密码暴力破解攻击，第一时间将该账号重新命名,并将连续尝试错误登录的外网 IP加入黑名单中，阻断其访问企图。以下关于腾讯云审计功能的描述，正确的是 哪项?</p><p>答案：D</p><p>A.当您的跟踪集为关闭状态，操作日志会存储到对应的存储桶 B.提供从日志采集、日志存储到日志内容搜索、 统计分析到可视化展示等功能 C.当您的跟踪集为正常状态时，跟踪集会将您账户下的操作日志记录，存储到跟踪集配置的 云硬盘中 D.提供腾讯云账号活动的事件历史记录，这些活动包括通过腾讯云管理控制台、API服务、 命 令行工具和其他腾讯云服务执行的操作</p><p>22以下关于蓝鲸集成平台的架构原理与功能描述错误的是哪项7 ,</p><p>答案：B</p><p>A.集成平台让用户可以快速又轻松的创建、部署和管理应用 B.集成平台提供了-站式的laaS标准化运维 C.集成平台不仅将应用服务的运行和开发环境作为一种服务提供给开发者用户，更为开发者 用户提供了 高效便捷的开发服务 D.集成平台为一个应用从创建到部署，再到后续的维护管理提供了完善的自助化和自动化服 务</p><p>23.在云上运维时，由于业务需要，业务部门申请了虚拟机，但在不再需要该虚拟机 时，不会主动回收资源，随着时间的推移,会带来大量的资源限制浪费，为了保 持成本的可追溯性，要采取必要的措施，以下哪项描述不属于此情况要采取的必 要性措?</p><p>答案：D</p><p>A.管控资源生命周期 B.将资源与业务对应起来 C.确定成本的流向，有针对性优化 D.每月1日将所有虚拟机关机，让业务部门来确认哪些是需要开机的，完成开机，无人认领的 资源尽快销毁以节约成本</p><p>24.您在腾讯云上维护了大量的云产品，急需要个既可以涵盖脚本执行、文件拉取/分 发等基础操作，又满足各种复杂运维场景键式作业，实现真 正的Web自动化运维 具，您可以选择以下哪款腾讯云产品?</p><p>答案：A</p><p>A.蓝鲸 B.容器服务 C.无服务器云函数 D.云API</p><p>25.腾讯云中的API网关支持的后端类型非常丰富,以下哪项描述不属于目前腾讯云 API网关支持的后端类型?</p><p>答案：B</p><p>A.公网URL/IP B. NFS C. Mock D. SCF</p><p>26.您在调研期间听说Ansible可以用于DevOps运维,打算测试一下在Ansible中, 包 含执行流程和步骤的文件被称之为以下哪项文件?</p><p>答案：A</p><p>A. Playbook B. Inventory c. Varablee D. Hosts .</p><p>27.目前您运维了-套业务系统,假定该系统整体压力在0 20%为低负载、20% -80% 为中负载、80% 100%为负载，那么下列关于负载统计分析的意义描述中，正确 的有哪项?</p><p>答案：A</p><p>A统计系统的负载，可以更好的判断系统的压力与健康度,以便于提供优质的服务 B.负载统计的分析意义在于出具报表 C.负载统计分析可以让管理员更好的了解系统的构成 D.负载统计主要是为了和过去进行对比，分析压力是否高或者低</p><p>28.您发现在外网无法telnet网站服务器公网IP的80和443端口，但是在服务器上 netstat却显示80和443都在侦听中，您应该采取以下哪项操作才能解决此问题?</p><p>答案：A</p><p>A.开通安全组中的TCP 80、443端口 B.确认负载均衡是否在侦听80和443 C.确认系统盘是否为云硬盘 D.确认网络付费模式是否为按带宽付费</p><p>29.在腾讯云TSF配置中心，控制台支持以下哪种格式的配置文件?</p><p>答案：C</p><p>A. XML格式 B. JSON格式 C. YAML格式 D. Properties格式</p><p>30.腾讯云的计算服务提供多种多样的云服务器镜像，那么下列关于镜像的描述正确 的有哪项?</p><p>答案：B</p><p>A.镜像是指网络端口镜像技术 B.腾讯云镜像提供启动云服务器实例所需的所有信息 C.镜像是指数据集群技术中的数据库镜像 D.镜像是指云服务器的快照</p><p>31.您在一家互联网公司工作目前企业在其他公有云厂商处已经部署了一套云上系 统，用到的云资源包括云服务器、云数据库、对象存储等。目前，企业打算将系 统全部迁移至腾讯云，任务交由你主导完成。1 任务迁移至腾讯云后，系统将全部 使用腾讯云产品，源数据端将停止使用; 2、任务 完成的同时需注重迁移效率和经 济效益。 您需将原公有云厂商对象存储上的海数据迁移至腾讯云，目前企业已在源数据 和腾讯云COS之间拉通了专线连接，请问以下哪种方案为最佳方案?</p><p>答案：A</p><p>A.采用专线迁移.使用半托管模式迁移，且临时服务器部署在迁移源侧 B.采用专线迁移使用全托管模式迁移，且临时服务器部署在迁移源侧 C.采用专线迁移:使用半托管模式迁移，且临时服务器使用腾讯云CVM D.采用专线迁移:使用全托管迁移模式，且无需使用临时服务器</p><p>32.当前您所管理的企业IT环境涉及200个业务系统，有的业务系统是企业自主开发, 有的业务系统是商业产品，现在您决定对这些业务系统进行整体监控，下列描述 中不属于业务系统监控痛点的是哪项?</p><p>答案：A</p><p>A.监控对象多，结构复杂，容易有有点 B.不同应用结构不同，添加监控困难 C. -处故障引|发多个层级报警,故障难定位 D.针对企业自主研发的业务系统，难以确定监控指标</p><p>33.您在运维的过程中，将弹性伸缩配置为当CPU利用率在一分钟之 内超过80%此情 况出现一次就立刻自动部署2台机器，并且冷却时间设置为1分钟，但是您发现一 次业务高峰期时，服务器CPU压力达到了99%，且此情况持续了一个小时，业务 服务器并没有如预期的弹性伸缩，这可能是以下哪项原因导致的?</p><p>答案：C</p><p>A.业务的压力还没有触及弹性伸缩的阈值 B.弹性伸缩的冷却时间还没有到 C.弹性伸缩组失效 D.负载均衡压力过高</p><p>34.运维工作中可以使用一些自动化运维I具来提高工作效率，以下哪项工具是通过 SSH进行跨主机管理的，并且客户端无需安装agent软件?</p><p>答案：A</p><p>A. Ansible B. Puppet C. Satstack D. Chef</p><p>35.小明的主管要求将其负责的所有业务都迁移到腾讯云上，于业务种类繁多，并且 是第一-次接触公有云，小明也不知道应该在上云之前完全哪些规划以及动作,请 您帮助小明判断以下哪项迁移逻辑是正确的?</p><p>答案：C</p><p>A.应该先把前端的应用迁移上云，然后再迁移后端的数据 B.为了减少在迁移过程中的复杂度,应该将本地的Windows系统整改为Linux C.数据层的迁移顺序要优先于应用迁移 D.流量切换与服务验证必须是在全部系统迁移结束之后才能开始</p><p>36.腾讯云上提供多个地域和可区，其中上海- -区和广 州一区的云资源可以通过以 下哪种方式进行内网通信的?</p><p>答案：B</p><p>A.默认即可通过内网连接,无需额外配置 B.对等连接 C. VPN连接 D. NAT网关</p><p>37.根据数据组织方式和数据库整体架构，可以对数据库进行分类，以下关于数据库 分类的描述中，正确的有哪项?</p><p>答案：D</p><p>A.根据数据组织方式，可以把数据库分为集中式数据库和分布式数据库 B.根据数据库架构进行分类，可以分为关系型数据库和非关系型数据库 C.根据数据组织方式来划分，可以把数据库分为关系型数据库和分布式数据库 D.从数据库架构的维度来划分，可以把数据库区分为集中式数据库和分布式数据库</p><p>38.腾讯云上提供了TData-体机产品，下列关于企业使用TData- 体机所带来优势的 描述中，正确的有哪项?</p><p>答案：A</p><p>A.通过TData产品，可以支持Oracle B.可以将DB2部署到TData-体机中 C.使用TData的成本会比单独使用CDB For MySQL要更低 D.由于TData是一 体机，所以可靠性会更低，无法满足可靠性和性能的要求</p><p>39.腾讯云的归档存储提供了非常详尽的计费组成说明，下列关于归档存储计费组成 部分的描述中，正确的组成部分有哪项?</p><p>答案：D</p><p>A.数据写入用时费用 B.包年包月的存储空间费用 C. DDOS防护费用 D.数据读取费用</p><p>40.腾讯云在全国各地部署了非常多的高质星CDN缓存服务器来服务用户，下列关于 CDN缓存服务器作用的描述中，正确的有哪项?</p><p>答案：B</p><p>A. CDN缓存服务器的作用是提高运营商之间的转发延迟 B. CDN缓存服务器的作用是降低物理距离远带来的延迟 C. CDN缓存服务器的作用是提升源站本身的带宽 D. CDN缓存服务器将带来传输的不稳定性</p><p>41.在Dockerfile中,以下哪条命令能用于指定容器启动时需要执行的命令?</p><p>答案：C</p><p>A. RUN B. SHELL C. CMD D. EXEC</p><p>42.以下关于使用腾讯云对象存储来做海数据归档解决方案的优势描述中，正确的 有哪项?</p><p>答案：A</p><p>A.理论上无限大的存储空间 B.自带数据分析系统 C.提高数据加工能力 D.提高数据的耐久度</p><p>43.您的论坛在运行- -段时间后， 数据库压力比较高,打算部署个只读实例来做业务上 的读写分离，解决数据库读压力过大的问题，但是您发现新建只读实例的按钮是 灰色的，无法添加只读实例,这可能是以下哪项情况阻碍了您添加只读实例?</p><p>答案：B</p><p>A.前端服务器数量太多 B. 数据库的主实例配过低 C.账户余额不足 D.数据库的安全组没有放通TCP 3306端口</p><p>44.您在本地机房中有大量的业务,您每天的工作安排得都非常满，但是还是无法预 料到所有问题，运维压力特别大,您计划把本地机房中所有的业务都迁移到腾讯 云上,以减轻运维压力，预计在腾讯云上会维护大量的产品，其中包括30台 Centos Linux集群，负载均衡，MySQL等,并且在迁移到云上之后，需要尽快开 发3个APP对外提供服务。 您在腾讯云上可以通过蓝鲸来完成您的3款APP开发，基于蓝鲸开发APP具备以下 哪项优势?</p><p>答案：C</p><p>A.用户只需要完成所有代码开发，无需关注后端服务器组建的运行情况 B.用户只需使用平台支持的语言编写核心代码并设置代码运行的条件，即可在腾讯云基础设 施上弹性、安全地运行代码，无需购买服务器，节约成本 C.蓝鲸平台提供完善的前后台开发框架、服务总线(ESB)、 调度引擎、公共组件等模块， 帮 助用户快速、低成本、兔运维地构建支撑I具和运营系统 D.蓝鲸平台提供了各式各样的SDK,用户无需写代码就可以根据SDK快速创建API</p><p>45.一家企业的主营产品为相亲网站，目前需要借助云拨测CAT及时了解服务质量提 前避免不佳的用户体验。请问在创建时，应该选择以下哪种拨测协议?</p><p>答案：A</p><p>A. HTTP/HTTPS B. ping C. pop3 D. smtp</p><p>46.在微服务的设计原则中，提到微服务要做无状态化处理。关于“无状态服务”的说 法，以下哪一个选项的解释是正确的?</p><p>答案：A</p><p>A.状态是指需存储在本地的数据(如Session缓存)，无状态服务是指在微服务架构里将状态存 储与逻辑计算分离 B.状态是指微服务的运行状态信息，无状态服务 是指在微服务架构里将状态存储与逻辑计算 分离 C.状态是指需存储在本地的数据(如Session缓存)，无状态服务是指在微服务架构里不允许 存在状态 D.状态是指微服务的运行状态信息，无状态服务是指在微服务架构里不允许存在状态</p><p>47.在CPU监控指标中，经常需要选用CPU平均负载作为监控指标，请问对于CPU平均 负载的解释，以下哪一个选项的描述是正确的?</p><p>答案：A</p><p>A.表示单位分钟内正在使用和等待使用CPU的平均任务数 B.表示单位分钟内正在使用CPU的平均任务数 C.表示单位分钟内等待使用CPU的平均任务数 D.表示单位时间实时占用CPU百分比的平均数</p><p>48.您正在腾讯云上规划私有网络以及子网，您需要确定网络掩码，目前您已经确定 此业务最大不会超过80台机器，那么此时您应该在子网上使用下列哪项网络掩码 来达到最优状态?</p><p>答案：C</p><p>A.8位子网掩码 B.16位子网掩码 C.24位子网掩码 D.32位子网掩码</p><p>49.您在本地机房中的业务有80台MySQL数据库服务器，20台Redis数据库服务器 , 500台虚拟机，10套硬件负载均衡，10TB非结构化数据，本地运维压力日益上 升,经过几轮选型，您打算把本地的业务全部迁移至腾讯云上,来减轻基础架构 的运维任务。 针对您企业中较为复杂的大型业务,您可以采用平滑迁移的方式进行大规模迁 移，以下关于平滑迁移的优点描述中，错误的有哪项?</p><p>答案：B</p><p>A. 对业务影响小 B. 持续时间较短 C. 迁移粒度把控较全量迁移更细 D. 迁移过程灵活</p><p>50.腾讯云中有很多CDN的边缘节点对外提供服务，下列关于CDN的边缘节点描述 中，正确的有哪项?</p><p>答案：A</p><p>A.“边缘节点”是腾讯云CDN用于缓存客户源站内容以便快速响应不同地域用户请求的网络节 点。</p><p>B.“边缘节点”是部署在中国边缘地带的腾讯云CDN网络节点。 C. “边缘节点”是质量较差的腾讯云CDN网络节点。 D.“边缘节点”是指当前负载较高， 临时被降低权重的腾讯云CDN节点。</p><p>51.您在本地数据中心中有一台物理服务器， 上面运行的业务没人对它有所了解， 您. 应该如何将这台物理服务器上的内容尽快上云?</p><p>答案：D</p><p>A.直接将物理机物流运送至腾讯云继续运行 B.重新在腾讯云上部署一 套新的应用 C.将应用打包到容器中，并在云上运行 D.把物理服务器上的系统状态和数据镜像到-个虚拟磁盘文件中，上传到云上</p><p>52.您在本地机房中的业务有80台MySQl数据库服务器, 20台Redis数据库服务器, 500台虚拟机，10套硬件负载均衡，10TB非结构化数据， 本地运维压力日益上 升，经过几轮选型，您打算把本地的业务全部迁移至腾讯云上，来减轻基础架构 的运维任务。针对迁移需求，在迁移之前，您需要先对已有业务架构和逻辑先完成梳理，然后 来决定是全迁移还是平滑迁移,以免造成不良影响和拖慢迁移进程，以下关于 在迁移方式的问题上，影响选择迁移方式的因素,不包括哪项?</p><p>答案：D</p><p>A.系统因素:系统的架构特点，业务流量特点，数据特点，网络特点等 B.技术因素:技术团队能力，研发资源投入规模，腾讯云产品的性能、功能满足程度 C.业务因素关键业务与非关键业务,关键业务中断成本,业务部门人力投入规模 D.规则因素:要求迁移完成后，在云上业务试运行期间,不能有故障出现</p><p>53.在云计算整个架构中，包含非常多的关键技术，以吓关于云计算中关键技术的描 述中，错误的有哪项?</p><p>答案：D</p><p>A.虚拟化技术 B.分布式数据存储 C.云计算管理平台 D.供应商管理技术</p><p>54.腾讯云在私有网络中同时提供了多种产品，以下哪个网络产品是免费的?</p><p>答案：B</p><p>A. NAT网关 B.弹性网卡 C.外网类型的负载均衡 D. VPN连接</p><p>55.您在腾讯云上的CVM中部署了一个MySQL 数据库,并在服务器上用命令行测试可以 登录MySQL创建数据库但是您发现外网的MySQL客户端无法连接MySQL服务器， 您应该怎么处理此事件?</p><p>答案：B</p><p>A.开通安全组中的UDP 3306端口 B.开通安全组中的TCP 3306端口 C.提升CVM的外网带宽 D.提升CVM的硬件配置</p><p>56.您在本地机房中的业务有80台MySQL数据库服务器，20台Redis数据库服务器 , 500台虚拟机，10套硬件负载均衡， 10TB非结构化数据， 本地运维压力日益上 升，经过几轮选型，您打算把本地的业务全部迁移至腾讯云上,来减轻基础架构 的运维任务。 针对您业务中的一些独位存在的业务模块，可以采取全量迁移的方式上云,以吓 关于全量迁移的缺点描述中，错误的有哪项?</p><p>答案：D</p><p>A.需要停服 B.回滚问题多 C.停服时间不确定 D.对业务系统要求低</p><p>57.您是第- -次使用腾讯云，在腾讯云上部署了一个小型的电商型网站,经过您的测 算，一般的业务平峰期只需要20台机器，高峰期需要增加25台，为了更好地提供 户体验，您在腾讯云上直接购买了30台包年包月机器用于确保高峰期-定可以 流畅访问，为了更好的知道每个月的费用消耗情况，您在月底时都会开工单询问 本月的消耗以及询问消费的趋势和明细，随着时间的推移，您感觉费用居高不 下，急需要解决此问题。 您可以通过以下哪个选项来得知您每个月的资源消耗金额明细?</p><p>答案：B</p><p>A.订单管理 B.资源账单 C.发票管理 D.合同管理</p><p>58.腾讯云的云服务器产品具有非常强的安全可靠特性，以下描述中，不属于安全可 靠特性的有哪项?</p><p>答案：A</p><p>A.公网IP速度快 B.云服务器99. 95%的可用性 C.腾讯云丰富的云安全产品 D.数据三副本存储</p><p>59.您是第一次使用腾讯云，在腾讯云上部署了一个小型的电商型网站，经过您的测 算，一般的业务平峰期只需要20台机器，高峰期需要增加25台，为了更好地提供 用户体验，您在腾讯云上直接购买了30台包年包月机器用于确保高峰期一定可以 流畅访问，为了更好的知道每个月的费用消耗情况，您在月底时都会开工单询问 本月的消耗以及询问消费的趋势和明细，随着时间的推移，您感觉费用居高不 下，急需要解决此问题。 针对此案例中的错误部分，特做出以下的整改措施，以下哪项整改措施是错误的?</p><p>答案：B</p><p>A.高峰期用弹性伸缩产品来应对临时突发流量 B.将CVM的计费模式分为包年包月和按量计费两种模式，高峰期的CVM用包年包月，平峰的 用按量计费 C.充分了解各项明细的查询方法 D.减少过度配置</p><p>60.您在腾讯云上有一批web服务器，用户通过负载均衡的每个请求所占用的后端时间 基本相同，那么您应该使负载均衡的哪一种流量 分发策略?</p><p>答案：A</p><p>A.加权轮询算法 B.加权最小连接数算法 C.源地址散列调度算法 D.负载均衡不关心每个请求所占用的时间</p><p>61.前期您在腾讯云上的基础网络内部署了5台CVM,后期为了更好的安全性和隔离 性,您所有的业务都部署在VPC中，针对您早期部署在基础网络中的5台CVM,应 该通过以下哪项功能与VPC中的业务进行内网通信?</p><p>答案：D</p><p>A.公网网关 B. NAT网关 C. VPN连接 D.基础网络互通</p><p>62.您是第一-次使用腾讯云，在腾讯云上部署了一个小型的电商型网站，经过您的测 算，一般的业务平峰期只需要20台机器， 高峰期需要增加25台， 为了更好地提供 户体验，您在腾讯云上直接购买了30台包年包月机器用于确保高峰期-可以 流畅访问，为了更好的知道每个月的费用消耗情况，您在月底时都会开I单询问 本月的消耗以及询问消费的趋势和明细，随着时间的推移,您感觉费用居高不 下，急需要解决此问题。 在此案例中，您应该使用以下哪项计费模式来用于您平峰时的CVM?</p><p>答案：C</p><p>A.竞价实例的计费方式 B.按量计费 C.包年包月 D.按周计费</p><p>63.在腾讯云上同时提供很多的网络产品与功能，其中包括私有网络和子网，下列关 于私有网络和子网的关系描述中，正确的有哪项?</p><p>答案：B</p><p>A.一个子网内可以包括多个私有网络，并实现内网互通 B.一个私有网络内可以包含多个子网，并实现内网互通 C.私有网络和子网属于同-功能产品，可以互相代替使用 D.私有网络和子网之间无任何关系</p><p>64.您在本地有3台物理服务器，于担心物理机的安全性和可靠性，所以希望能把物 理机上的业务整体上云，但是您又不太懂物理机上的业务,无法重新在云上部 署,此时您应该使用以下哪项操作来完成此目标?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.将硬盘中的数据复制-份到腾讯云的对象存储中; 2、在云上购买CVM将数据拉取到CVM </span><br><span class="line"></span><br><span class="line">B.通过P2V工具将物理机转换为虚拟机; 2、将虚拟机制作成符合规范的镜像; 3、将镜像上 传至腾讯云上; 4、使用该镜像创建 CVM </span><br><span class="line"></span><br><span class="line">C.将本地物理机中的数据存入CDM(腾讯云离线数据迁移设备)中; 2、将设备邮寄回腾讯; 3、购买CVM,将数据拷贝到CVM中 </span><br><span class="line"></span><br><span class="line">D.将物理机邮寄到腾讯云机房; 2. 联系腾讯云完成物理机上架并调试; 3、完成上云</span><br></pre></td></tr></table></figure><p>65.您是一位经验非常丰富的传统IT运维人员，公司的业务近期由本地机房迁移到了腾 讯云上，公司的运维团队由于不熟悉云上的环境，出现了-些问题，针对以下问 题，请您给出具体方案。 您在部署服务器时，没有选择安装云监控的组件，还可以通过以下哪项指标来监 控CPU的整体负载情况?</p><p>答案：C</p><p>A. CPU利用率 B. Dashboard C.基础CPU使用率 D. CPU平均负载</p><p>66.您维护的系统中，当前模块有5台设备,单机负载50%，目标负载80%,业务需 要上涨到原来的4倍，下列关于需要扩容的设备量描述中,正确的是哪项?</p><p>答案：C</p><p>A.需要扩展3台 B.需要扩展5台 C.需要扩展8台 D.需要扩展12台</p><p>67.您是一-位经验非常丰富的传统IT运维人员，公司的业务近期由本地机房迁移到了腾 讯云上，公司的运维团队由于不熟悉云上的环境，出现了一些问题，针对以下问题, 请您给出具体方案。 您的运维同事向您反应了-个问题，公司的一台服务器是用于抢购业务，但是他们 发现，每当抢购到来他们试图SSH登陆服务器时，都无法登陆，抢购潮过去，就 可以登陆，不知道什么问题，您觉得可能是以下哪项问题?</p><p>答案：B</p><p>A.安全组端口设置不正确 B.服务器资源紧张 C.网站配置文件错误 D.可能中了病毒</p><p>68.您的社区在腾讯云上部署完成之后，您需要对外开通访问通道，为了防止不必要 的端口和协议对外开放造成安全问题，您应该使用以下哪项方式配置安全组和 ACL?</p><p>答案：C</p><p>A.安全组配置为开放入站的TCP 80、443端口， 出站保持默认，网络ACL 配置为开放入站的 TCP 80、443端口，出站保持默认 B.安全组配置为开放入站的TCP80、443、 3306端口， 出站保持默认，网络ACL配置为开放 入站的TCP 80、443、 3306端口，出站保持默认 C.安全组配置为开放入站的80、443端口，出站保持默认，网络ACL配置为开放入站的80、 443端口，出站配置为开放TCP 80、443端口 D.安全组配置为开放入站的80、443端口， 出站保持默认，网络ACL配置保持默认</p><p>69.您是一位经验非常丰富的传统IT运维人员，公司的业务近期由本地机房迁移到了腾 讯云上，公司的运维团队由于不熟悉云上的环境，出现了-些问题，针对以下问 题，请您给出具体方案。 您有一个ERP服务器需要下线您用密码的方式登陆这个服务器然后把上面的内容 换成了OA服务为了方便，您在腾讯云上给这台服务器关联了一个SSH密钥，但是 很快您其他同事纷纷向您报告无法使用密码登陆这台服务器了，这可能是什么原 因?</p><p>答案：B</p><p>A.他们的登陆依赖于ERP配置文件 B.关联了SSH密钥后，会自动关闭密码认证 C.偶尔的网络波动 D.安全组故障</p><p>70.我们可以将本地的业务直接迁移到腾讯云容器服务中继续运行，以下关于此迁移 流程的描述中，正确的顺序是哪些?</p><p>答案：D</p><p>A.1、创建容器集群;2、根据业务具体情况制作镜像;3、配置服务的基本信息:例如数据卷、镜 像选择,4、配置负载均衡 B. 1、创建容器集群;2、配置服务的基本信息:例如数据卷、镜像选择,3、根据业务具体情况制 作镜像;4、配置负载均衡 C. 1、创建容器集群;2、配置负载均衡;3、配置服务的基本信息:例如数据卷、 镜像选择;4、根 据业务具体情况制作镜像 D.1、创建容器集群;2、配置服务的基本信息例如数据卷、镜像选择服务市场中的镜像;3、配 置负载均衡</p><p>71.您在一家互联网公司工作，目前企业在其他公有云厂商处已经部署了一套云 上系 统，用到的云资源包括云服务器、云数据库、对象存储等。目前，企业打算将系 统全部迁移至腾讯云，任务交由你主导完成。1.任务迁移至腾讯云后，系统将全部使 用腾讯云产品，源数据端将停止使用; 2.任务完成的同时需注重迁移效率和经济效 益。 对于此次上云,你可以考虑采用以下哪一种流程进行上云迁移?</p><p>答案：D</p><p>A.1.网络规划 2、应用迁移 3、流量切换与服务验证 4、数据迁移 B. 1、网络规划 2、应用迁移 3、数据迁移 4、流量切换与服务验证 C.1、流量切换 与服务验证 2.应用迁移 3.网络规划 4、数据迁移 D. 1.网络规划 2.数据迁移 3.应用迁移 4、流量切换与服务验证</p><p>72.您公司在推动本地单体架构的电商业务系统迁移至腾讯云上,并以微服务的方式 部署到腾讯云上，您在其中负责提升整体业务的用户体验，并降低整体成本。经 过和开发人员协商，开发人员提供了代码，您将其部署到了SCF无服务器云函数 上并通过点击‘测试按钮验证运行良好，但是经过- -段时间后您发现需要SCF中 的代码时，代码好像没有运行，这可能因为以下哪个原因?</p><p>答案：C</p><p>A.没有配置触发器 B.代码格式或者语法错误 C.消息队列中的消息延迟参数设置过长 D. API网关中的API执行失败</p><p>73.下列哪项不属于海量监控数据的关键点或痛点?</p><p>答案：D</p><p>A.夏盖率、状态反馈、指标度量 B.时效性、准确性、触及率 C. RCA、 事件管理、报表/考核 D.系统的版本、数据类型</p><p>74.您在改善公司整体运维效率的过程中，发现腾讯云上的全部产品都提供了完善的 API接口，打算尝试通过API接口来完成一些运维任务，请您认真考虑以下问题。 通过API 3.0产品可以帮您动态生产代码，并粗提供了在线调用、签名串生成等各 种服务,当您对动态生成的代码满意,点击发送请求按钮时，以下哪种说法正 确?</p><p>答案：B</p><p>A.系统会以模拟的方式执行一次代码，并输出结果 B.系统会以POST的请求方法执行操作,并输出结果 C.系统会以GET的请求方法执行操作，并输出结果 D.系统会以POST的请求方法执行操作，但不会输出结果</p><p>75.您在改善公司整体运维效率的过程中，发现腾讯云上的全部产品都提供了完善的 AP接口，打算尝试通过API接口来完成一些运维任务,请您认真考虑以下问题。 您在腾讯云上成功执行API命令之后，返回的结果默认是以下哪项格式?</p><p>答案：C</p><p>A. array . B. text C. JSON D. Table</p><p>76.您在改善公司整体运维效率的过程中,发现腾讯云上的全部产品都提供了完善的 API接口，打算尝试通过API接口来完成一些运维任务， 请您认真考虑以下问题.您 在使用API时发现有些参数不太熟悉，您可以通过以下哪项产品来更好的辅助您熟 悉API ?</p><p>答案：D</p><p>A. API网关 B. SCF函数 C.命令行工具 D. API 3.0 Explorer</p><p>77.天御业务安全防护系统提供了抵御羊毛谠功能，那么羊毛谠具体是指以下哪类群 体?</p><p>答案：D</p><p>A.频繁在电商网站下单的人 B.频繁在电商网站退货的人 C.经常恶意投诉的人 D.经常以低成本或零成本套取商家利益的人</p><p>78.在腾讯云中的结算周期为小时结、日结、月结、以上关于每个月最后一个小时的 资源使用的结算的描述，正确的是哪项?</p><p>答案：B</p><p>A.小时结是指每60分钟- -次的自动结算所以不会产生账单 B.小时结资源的月度账单为.上月最后- -小时至本月 倒数第二小时使用的费用 C.小时结的账单将会被冻结一到两个结算周期所以会体现在2个月 后的资源明细中 D.小时结的费用需要管理员人工进行支付</p><p>79.您打算把本地的业务系统以微服务的方式拆分成模块在腾讯云上线，业务高峰期 时，模块必须可以在秒级别的时间内完成扩容，您应该使用腾讯云上哪款中间件 产品?</p><p>答案：A</p><p>A.容器服务 B.无服务器云函数 C. API网关 D.消息队列</p><p>80.目前您打算将本地机房中的网站集群迁移至腾讯云上,以下哪项描述是您执行迁 移的正确流程?</p><p>答案：A</p><p>A. 1、网络规划;2、数据迁移;3、应用迁移;4、流量切换与服务验证 B.1.数据迁移;2、网络规划;3、应用迁移;4、 流量切换与服务验证 C. 1.网络规划;2、应用迁移;3、 数据迁移;4、流量切换与服务验证 D. 1. 应用迁移;2、 网络规划:3、 数据迁移;4、流量切换与服务验证</p><p>81.经过一段市场调研和选型，您打算将本地的业务系统全部迁往腾讯云，您在本次迁移 项目中担任总工程师角色，将全权负责本次的云上架构规划和迁移的实施，针对 以下情形，请提供具体建议和帮助。 您打算使用容器化改造的方式把本地某一务上云,在这个过程中，您选择使用腾 讯云的TKE产品来完成容器集群，TKE集群中的服务内容- -般是由以下哪项来决 定的?</p><p>答案：A</p><p>A.镜像 B.模板 C.对象存储 D.文件存储</p><p>82.您打算在腾讯云上和本地机房形成一个混合云的直播平台,直播业务对延迟和抖 动要求都非常高，您应该采取以下哪种方式来连接本地机房和腾讯云?</p><p>答案：A</p><p>A.专线 B. VPN C.默认公网通信 D.对等连接</p><p>83.您打算在腾讯云的上海地域构建-个高可用的网站，需要实现上海- -区发生故 障，二区还能继续对外提供服务，那么以下哪种子网划分方案是最优的?</p><p>答案：C</p><p>A.在上海-区和上海二区各创建一个VPC, 在两个VPC中创建同一个子网用于服务器 B.上海一-区和上海1二区共用同一个VPC，在VPC中建立分别两个子网分别绑定两个可用区用 于服务器 C.在上海- -区和二区分别创建一 个VPC,并在每个VPC中分别创建一 个子网用于服务器 D.在上海的两个可用区默认无法通信，必须在不同的可用区分别创建一个VPC, 使用对等连 接打通每个可用区的子网</p><p>84.经过一段市场调研和选型,您打算将本地的业务系统全部迁往腾讯云，您在本次迁 移项目中担任总工程师角色将全权负责本次的云上架构规划和迁移的实施，针对 以下情形，请提供具体建议和帮助。 您下一步打算迁移CRM系统到腾讯云上原CRM在本地部署时数据库和CRM软件 是在一起的您打算在云上使用腾讯云的数据库服务来完成数据库承载，CVM中重 新部署CRM系统并使用后端数据库服务，以下哪种说法是正确的?</p><p>答案：B</p><p>A.应该先在CVM中完成CRM部署,然后再考虑迁移数据库上云 B.应该先考虑把数据库迁移上云，然后再考虑重新部署CRM的事 C.无所谓谁先谁后，可以根据实际情况自行调整先迁移谁 D.应该在CVM中，同时部署CRM和数据库服务，先完成运行，然后再迁移CVM中的数据库到腾 讯云的数据库服务上</p><p>85.您企业中有30多个系统管理员，分别负责业务的不同模块，经常需要分别为这些 管理员分配不同的权限，比较麻烦,您可以采取以下哪些操作，实现权限的快速 赋予和区别?</p><p>答案：C</p><p>A.为每一-位管理员都分配一 个超级管理员账号，这样可以省却不断分配权限的问题 B.管理员账号统- -由部门经理输入， 当管理员需要进行服务器管理时，请求经理输入口令 C.将管理员进行分类，把同一类型的管理员加入组中，将权限分配到组，收回权限只需要将 人从组中移除即可 D.将权限的赋予和收回工作由专人负责</p><p>86.您前期将非重要业务上云后，对腾讯云有了了解，也熟悉了云上运维的方式，现 在打算把系统的灾备,非核心系统上云，成立企业云创新中心，建立运营和安全 规范，结合以上信息,您目前处于企业上云的四个阶段的哪个阶段?</p><p>答案：B</p><p>A.尝试 B.扩展 C.迁移 D.优化</p><p>87.您在腾讯云服务器云函数控制台中，构建了-个云函数,并且泻了正确的代 码，您希望在投入生产环境之前确保函数功能正常，您应该点击以下哪项按钮?</p><p>答案：A</p><p>A.测试 B.运行 C.沙箱 D.日志</p><p>88.您接到了领导的任务如下: 1、学习微服务和单体架构的特点与关键性技术2、评 估将公司自行开发的业务系统在腾讯云上实施微服务化的难度3、将公司的业务整 体以微服务化的方式上坛。您在和前辈沟通时, 前辈告诉您需要搭建微服务的各 种支撑服务，例如服务注册、服务发现等,您觉得太困难，此时您可以通过以下 哪项操作来完成前辈说的项目?</p><p>答案：A</p><p>A.使用TSF B.使用TKE C.使用SCF D.使用消息队列</p><p>89.以下关于蓝鲸的APP开发流程描述正确的是哪项?</p><p>答案：A</p><p>A. 1、创建本地项目文件夹;2、拷贝项目模板到项目文件夹;3、通过SVN客户端签入项目:4、 本地项目开发;5、完成测试:6、应用上线 B.1.创建本地项目文件夹;2、通过SVN客户 端签入项目;3、本地项目开发:4、完成测试;5、 应用上线 C. 1、创建本地项目文件夹;2、本地项目开发,3、通过SVN客户端签入项目;4、拷贝项目模板 到项目文件夹;5、完成测试;6、应用上线 D. 1、创建本地项目文件夹;2、本地项目开发,3、完成测试;4、拷贝项目模板到项目文件 夹;5、通过SVN客户端签入项目;6、应用上线</p><p>90.您打算将本地的核心业务系统ERP迁移到腾讯云上运行，ERP所使用的CVM应该 采取以下哪项付费方式?</p><p>答案：C</p><p>A.竟价实例的计费方式 B.按量计费 C.包年包月 D.按周计费</p><p>91.某集团公司，旗下运营有地产、金融、旅游、零售等多个业务板块，为适应新时 代数字化转型的浪潮集团决定除金融业务外，其他业务全面上云，现选取物业管 理业务优先上云作为试点。上云前调研结果如下: 1、物业管理业务,客户主要集 中在北京、.上海、 广州、成都四个城市及辐射的周边地区,集团在该四个城市均 建有本地化的数据中心机房，以存放业务数据;2、-些高级VIP客户信息比较敏 感，经讨论决定，敏感数据暂不上云，但云端产生的普通用户信息及相关数据, 需要在本地机房有备份,3、要求在上云迁移过程中，业务不能中断。针对以上场 景，请回答如下问题: 根据场景描述，下列关于物业管理系统,访问流量切换描述正确的是哪一项?</p><p>答案：B</p><p>A.云上环境配置完成后，直接将流量全量切换到腾讯云即可，业务不中断 B.在迁移过程中，往往要求业务层云主机能访问本地机房数据，从而实现不中断的流量切换 C.通过修改内网DNS,指向腾讯云负载均衡产品，即可执行流量切换 D.流量切换完成后，数据的写功能通常在云端完成，而读功能仍在本地机房完成，实现读写 分离</p><p>92.您是一位经验非常丰富的传统|IT运维人员，公司的业务近期由本地机房迁移到了腾 讯云上，公司的运维团队由于不熟悉云上的环境，出现了-些问题，针对以下问 题，请您给出具体方案。 当前您发现公司的某个网址打开速度非常缓慢，查看监控发现网络带宽利用率处 于正常水平，您怀疑可能是服务器性能不足，您在服务器内部可以用以下哪个命 令来查看CPU忙闲程度以及平均负载?</p><p>答案：C</p><p>A. netstat B. ss C. top D. pstree .</p><p>93.某集团公司，旗下运营有地产、金融旅游、零售等多个业务板块,为适应新时 代数字化转型的浪潮集团决定除金融业务外,其他业务全面上云，现选取物业管 理业务优先上云作为试点。上云前调研结果如下: 1、物业管理业务,客户主要集 中在北京、上海、 广州、成都四个城市及辐射的周边地区，集团在该四 个城市均 建有本地化的数据中心机房，以存放业务数据;2、-些高级VP客户信 息比较敏 感，经讨论决定，敏感数据暂不上云，但云端产生的普通用户信息及相关数据, 需要在本地机房有备份;3、要求在上云迁移过程中，业务不能中断。针对以上场. 景，请回答如下问题: 要实现本地数据到云上的迁移,云上产生的动态数据在本地的容灾备份，下列方 案描述错误的是哪项?</p><p>答案：B</p><p>A.使用COS Migration工具将本地非结构化数据文件迁移到云端COS中 B.使用云存储网关CSG实现云上和云下数据库数据的迁移和云上数据到云下的备份 C.使用CDM迁移设备将本地数据中心数据迁移到云端，CDM是一种离线迁移工具 D.使用DTS工具实现本地数据库数据到云端的迁移，开启数据同步后可实现云.上数据到本地 数据中心的实时同步实现容灾的能力</p><p>94.随着互联网金融发展，对商业银行IT能力及需求快速交付提出了更高的要求,某知 名商业银行为了赢得市场先机,对公司IT部提出了更高的要求凡互联网类业务 应用的开发或迭代，周期应由月为单位,缩短为以周或天为单位顺应行业趋势, 网银和在线商城等应用软件架构全面微服务化;要加大秒杀、抢红包等活动力度;并 改善过往抢红包等活动中经常发生系统崩溃的用户体验。IT部门 经过严格的梳理和 慎重技术选型后决定，采购腾讯云TSF、API网关、 TKE、 CMQ消息队列等多个产 品来达成目标。请根据以上描述,完成下列问题。 现要基于TSF产品，以容器的方式部署微服务应用，以下是操作步骤: a.创建容器集群; b.导入云主机; C.创建部署组; d.创建镜像和推送镜像到仓库; e.创建容器应用; f.部署应用; 以下哪-项的排序是正确的?</p><p>答案：B</p><p>A. abcdef B. abedcf C. bacefd D. baedcf</p><p>95.腾讯云上提供按量计费模式的云服务器，下列关于按计费的描述，正确的有哪 项?</p><p>答案：B</p><p>A.按量计费的云服务器主要适用于需要长久运行的企业核心业务或测试环境 B.按量计费的云服务器主要适用于不需要长久运行的企业业务或测试环境 C.在同等时间下，按量计费模式的支出和包年包月的支出，在总金额上是一致的 D.按量计费的云服务器在到期后会进入回收站，等待7天，如没有续费，将会被清除数据</p><p>96.您公司在推动本地单体架构的电商业务系统迁移至腾讯云上,并以微服务的方式 部署到腾讯云.上，您在其中负责提升整体业务的用户体验。您打算在业务规则中 规定,如果用户2天内不付款，则订单自动关闭，节约资源和提升用户体验,这个 规则您可以通过以下哪种最优方式实现?</p><p>答案：B</p><p>A使用SCF无服务器函数来实现 B.使用消息队列中的DelaySeconds实现 C.使用API网关来实现 D.使用MySQL表来实现</p><p>97.下列关于腾讯云上大禹产品在遇到网络攻击时进行的流量清洗的方法描述中,正 确的有哪项?</p><p>答案：B</p><p>A.将流量分类，只把恶意流量导入到清洗集群上进行清洗 B.检测到攻击后，用BGP牵引的方式，把所有流量引导至清洗集群进行清洗 C.大禹产品需要管理员手工开启流量清洗 D.如果需要开启大禹的攻击清洗功能，需要开工单申请</p><p>98.目前您打算将腾讯云上的涉密业务和本地数据中心的业务进行整合,形成一个整 体，可以接受5分钟以上的延迟，失败可以接受重连，针对以上的业务需求，您可 以选择腾讯云上的哪种网络产品来实现低成本的连接?</p><p>答案：C</p><p>A.公网接入 B.私有网络 C. VPN连接 D.专线接入</p><p>99.经过一段市场调研和选型， 您打算将本地的业务系统全部迁往腾讯云，您在本次 迁移项目中担任总工程师角色，将全权负责本次的云上架构规划和迁移的实施。 在针对超过TB,甚至达到PB级别的非结构化数据,我们应该使用以下哪款产品可 以完成数据快速上云?</p><p>答案：A</p><p>A. CDM B. COS . C. DTS D. CDB</p><p>100.经过一段市场调研和选型，您打算将本地的业务系统全部迁往腾讯云，您在本次 迁移项目中担任总工程师角色，将全权负责本次的云上架构规划和迁移的实施, 前期您打算将公司的测试环境和开发环境先行迁移，用于测试业务的适应性，您 需要确保这两个环境之间100%的实现内网隔离。并在需要时可以建立通信,您需 要借助哪个产品实现?</p><p>答案：A</p><p>A.私有网络 B.可用区 C.公网 D. NAT网关</p><p>101.在腾讯云上,同时提供系统盘和数据盘供用户选择，下列关于两者的描述中，正确的有哪项?</p><p>答案：D</p><p>A.系统盘是通过快照生成的一块云硬盘，用于存储CVM的操作系统 B.数据盘是用来存储包括操作系统在内的用户数据 C.数据盘可以通过镜像快速创建获得 D.系统盘用来存储控制、调度云服务器运行的系统集合，使用镜像来操作。</p><p>102.您在腾讯云上部署了一个CVM服务器, 并在其上部署了您公司的网站系统，为为 更加安全，您在对应的安全组和网络ACL中同时放行了入站方向HTTP协议的80端 口，但是您发现通过CVM的公网IP无法访问到网站，您应该采取以下哪项正确的 操作来解决此问题?</p><p>答案：A</p><p>A.在网络ACL中，开通出方向TCP协议的AL端口 B.使用云拨测，从外部探测业务的问题根源 C.在安全组中，开通出方向http协议的80端口 D.重启服务器</p><p>103.腾讯云上提供多个地域和可用区,中处于同一私有网络下的_上海-区和上海三 区的云资源，是通过以下哪种方式进行通信的?</p><p>答案：A</p><p>A.内网 B.对等连接 C. VPN连接 D. NAT网关</p><p>104.您在改善公司整体运维效率的过程中发现腾讯云上的全部产品都提供了完善的API 接口,打算尝试通过API接口来完成一些运维。 您在使用API之前，必须提供以下 哪项内容，才可以使用具体的API接口?</p><p>答案：A</p><p>A. Secretld、 SecretKey B. Fitters C. Offset D. Instancelds</p><p>105.您计划把本地机房中的电商业务以微服务的方式部署在腾讯云上。经过一段时间 的迁移之后，您本地的业务已经完全在腾讯云上运行了，现在您打算提升在腾讯 云上的运维效率问题，以便于更快更好的完成工作，针对以下各种场景,请您给 出犋体且最合理的处理方式。 您在调研期间听说Ansible可以用于DevOps运维，打算测试一下， 在Ansible中, 包含执行流程和步骤的文件被称之为以下哪项文件?</p><p>答案：A</p><p>A. Playbook B. Inventory C. Variable D. Hosts</p><p>106.经过一段时间的上云迁移之后，您公司本地的业务已经完全在腾讯云上运行了, 现在您作为新入行的信息安全岗位人员，需要全面的保障公司的业务在云上安全 稳定的运行。目前企业遇到了以下各种问题，请根据题目分别解答。 您近期深受DDoS攻击之害，您去请教那些前辈DDoS攻击的原理，他们都回答说 不知道,他们只知道DDoS是网络攻击，以下关于DDoS攻击原理的描述中,正确 的是哪项?</p><p>答案：C</p><p>A. DDoS攻击是指破坏企业网络通道的一种手段，例如切割光缆等 B. DDoS攻击是一个配置 和带宽都非常强大机器发起的网络攻击 C.通过分布在各地的大量终端，同时向目标发送恶意报包 D. DDoS攻击是指先上传一个恶意的文件， 然后等待对方执行，执行后就拥有了对方服务器 的完全控制权限</p><p>107.某集团公司，旗下运营有地产、金融、旅游、零售等多个业务板块，为适应新时 代数字化转型的浪潮，集团决定除金融业务外，其他业务全面上云，现选取物业管 理业务优先上云作为试点。上云前调研结果如下:1、 物业管理业务,客户主要集中 在北京、.上海、广州、成都四个城市及辐射的周边地区，集团在该四个城市均建 有本地化的数据中心机房，以存放业务数据;2、- -些高级VIP客户信息比较敏感, 经讨论决定，敏感数据暂不上云，但云端产生的普通用户信息及相关数据，需要 在本地机房有备份;3、要求在上云迁移过程中，业务不能中断。针对以上场景,请 回答如下问题: 要将物业管理业务迁移到云端，可能需要如下操作步骤 a.业务系统数据调研 b.必要数据的迁移上云 C.云端网络方案设计 d用户访问流量切换和调试 e.应用在云端部署 下列关于操作步骤描述顺序正确的是哪一项?</p><p>答案：C</p><p>A. abcde B. acdbe C. acbed D. abced .</p><p>108.您计划北把本地机房中的电商业务以微服务的方式部署在腾讯云上。经过-段时 间的迁移之后，您本地的业务已经完全在腾讯云上运行了，现在您打算提升在腾 讯云上的运维效率问题，以便于更快更好的完成工作，针对以下各种场景,请您 给出具体且最合理的处理方式。 腾讯云的蓝鲸自动化运维平台可以同时管理上百台服务器，管理节点是通过以下 哪项来完成对资源管控的?</p><p>答案：D</p><p>A. SSH B. Telnet . C. sockets D. Agent</p><p>109.腾讯云上提供对等连接功能来连接腾讯云上的不同地域之间的业务，下列关于对 等连接的收费方式描述中，正确的有哪项?</p><p>答案：B</p><p>A.上海- -区和上海二区之间的对等连接的计费方式可以为:日峰值计费或月95峰值计费 B.上海和广州之间的计费方式可以是日8峰值计费或月95峰值计费模式 C.目前腾讯云上的对等连接产品是免费使用的 D.腾讯云上的对等连接是用于不同的地域之间，所以无法提供同地域之间的连接</p><p>110.您计划把本地机房中的电商业务以微服务的方式部署在腾讯云上。经过-段时间 的迁移之后，您本地的业务已经完全在腾讯云上运行了，现在您打算提升在腾讯 云上的运维效率问题，以便于更快更好的完成工作,针对以下各种场景,请您给 出具体且最合理的处理方式。 在测试时，您发现有非常多的自动化运维工具，在众多自动化运维工具中,以下 哪项工具不是专门用于配置管理方向的?</p><p>答案：C</p><p>A. Chef B. puppet C. Kickstart D. Cfengine</p><p>111.假设您所使用的腾讯云CDN按照流量阶梯计费，假设CDN流量阶梯为: 0-2TB 的. 价格为0.21元每GB，2-10TB的价格为0 .20元每GB，您当月消耗了3TB,所以，您 本月应支付的账单金额是多少元? (计 算中1T=1000G)</p><p>答案：A</p><p>A. 620元 B.675.84元 C.630元 D.600元</p><p>112.腾讯云上提供各式各样的存储服务,根据使用场景对存储分类的话,包括以下哪 项?</p><p>答案：C</p><p>A.普通硬盘. B. SSD硬盘 C.数据盘 D.云硬盘</p><p>113.您在云上安全运维的过程中，突然发现您混合云的本地机房侧遭受了巨大的DDOS 攻击流量此时您应该如何快速解决此问题?</p><p>答案：C</p><p>A.暂时切断本地机房和云上的路由避免云上的业务受到波及 B.在云上购买DDOS高防包并完成配置 C.在云上购买DDOS高防IP并完成配置 D.腾讯云免费提供了2GB的DDOS防护直接启用即可完成本地机房的防护</p><p>114.腾讯云上提供负载均衡产品来解决海量流量访问造成压力的问题，那么作为负载 均衡服务，其是否优秀，可以有很多指标来评判，其中以下哪项维度不属于性能 测试指标?</p><p>答案：C</p><p>A.最大并发连接数 B.每秒新建连接数 C.负载均衡背后的服务器规模 D.每秒请求数</p><p>115.目前您企业中的业务都部署在Linux服务器上,大约有200台,每天需要大量的IT 人员频繁的去巡检机房，维护服务器，您希望可以释放这部分人工维护精力到其 他业务上，您可以通过使用以下哪项云服务层次来满足您的需求?</p><p>答案：C</p><p>A. IAAS B. SAAS C. PAAS D. DAAS .</p><p>116.下列关于企业使用云计算带来的使用灵活方便优势的描述中，描述正确的有哪项?</p><p>答案：A</p><p>A.企业使用云计算后可以灵活扩展和释放闲置IT资源 B.企业使用云计算后可以完全杜绝宕机事件 C. 企业使用云计算后可以将包年包月的CVM根据需要， 无限次的升降配置来满足不同的业务 压力 D.企业使用云计算后灵活度和方便程度与本地数据中心无异</p><p>117.腾讯云上提供了命令行工具来调用API接口，以下哪项命令是在第一-次使用命令行 工具时必须使用的?</p><p>答案：A</p><p>A. tccli configure B. tccli init C. tccli setup D. tcl start</p><p>118.您正在给一家大型企业规划腾讯云 上的架构，目前这家企业在云上的业务的困惑 主要是磁盘总是响应太慢，不能满足需要，您应该在腾讯云上购买哪款机型?</p><p>答案：C</p><p>A.标准型 B.计算型 C.高I0型 D.内存型</p><p>119.以下关于数据状态的描述中，可能属于冷数据的描述是哪项?</p><p>答案：B</p><p>A.一周内产生的数据</p><p>B.三年前产生，并且不经常访问的数据 C.经常访问的数据 D. 存放在低温度空调机房中的数据</p><p>120.您在腾讯云上购买了-台CVM并部署了相应的业务,现在需要监控一下云服务器 的硬件资源使用率?</p><p>答案：B</p><p>A.提交工单申请 B.直接使用无需申请开通 C.由于保护用户数据需要自行安装监控实现 D. 需要使用主账号才能申请子账号不可以申请</p><p>121.腾讯云上对外提供了弹性公网IP服务,下列对于弹性公网IP付费模式描述中,正确 的有哪项?</p><p>答案：B</p><p>A.弹性公网IP在任何情况下是免费的 B.弹性公网IP在绑定资源后是免费的 C.弹性公网IP在不绑定到资源上时，是免费的 D.弹性IP只能按照包年包月的方式付费</p><p>122.您正在将本地的业务在腾讯云上重新部署，但是您发现部署在CVM中的网站，无 法从外网用域名打开 以吓哪项描述是正确的问题排查基本顺序?</p><p>答案：A</p><p>A.1、检查域名解析情况，2、检查安全组和网络ACL配置, 3、 检查网站服务的启动情况， 4、检查服务器的负载情况 B. 1.检查本地网络是否正常，2、检查服务器负载情况，3、检查网站程序启动情况，4、提 供工单询问 C. 1、咨询工单人员具体情况，2、检查服务器负载，3、检查带宽占用率，4、检查域名解析 D.1.检查域名解析, 2、检查服务器负载，3、检查安全组和网络ACL, 4、 工单支持</p><p>123.针对迁移需求，在迁移之前,您需要先对已有业务架构和逻辑完成梳理，然后来 决定是全量迁移还是平滑迁移,以免造成不良影响和拖慢迁移进程，以下关于在 迁移方式的问题上，影响选择迁移方式的因素,不包括哪项?</p><p>答案：D</p><p>A.系统因素:系统的架构特点，业务流量特点，数据特点，网络特点等 B.技术因素:技术团队能力，研发资源投入规模，腾讯云产品的性能、功能满足程度 C.业务因素关键业务与非关键业务，关键业务中断成本，业务部门人力投入规模 D.规则因素要求迁移完成后，在云.上业务试运行期间，不能有故障出现</p><p>124.目前您的监控系统显示外网带宽被占满了，网站服务器的CPU、内存资源也已经 耗尽，您判断可能是遭受到了DDOS攻击，腾讯云上提供了多款网络安全产品，以 下哪项不属于腾讯云网络安全产品?</p><p>答案：D</p><p>A. DDos基础防护 B. DDos高防包 C. DDos高防IP D.网页防篡改功能</p><p>125.当前您所管理的企业IT环境涉及200个业务系统，有的业务系统是企业自主开发, 有的业务系统是商业产品，现在您决定对这些业务系统进行整体监控，下列描述 中怀属于业务系统监控合理需求的是哪项?</p><p>答案：B</p><p>A.自动接入各种业务系统 B.分时段告警功能，夜间的故障集中在上班时间推送告警 C.自定义恰当的告警策略，防止告警过多 D.多维度、多层级、立体化进行监控</p><p>126.您在CVM中部署完论坛程序之后,发现无法连接云数据库MySQL,提示连接超 时，您应该采取以下哪项方式进行处理?</p><p>答案：B</p><p>A.检查CVM和数据库是否在同一个子网 B.检查CVM和数据库是否在同一个私有网络 C.检查论坛服务是否启动 D.检查数据库服务是否启动</p><p>127.假设您所使用的腾讯云CDN按照流星阶梯累进计费, CDN流量阶梯为:0-2TB的 价格为0.34元每GB, 2-10TB 的价格为0.32元每GB，您当月消耗了3TB,那么 下列关于您应付账单的金额描述中，正确的有哪项?</p><p>答案：A</p><p>A. 1000元 B.1024元 C.2048元 D.协商约定</p><p>128.您计划在腾讯云上部署台CVM用于开展一 年- -次的活动， 本次活动预计会持续 10-13天左右，此CVM应该采用以下哪项计费方式会比较划算?</p><p>答案：B</p><p>A.竞价实例的计费方式 B.按量计费 C.包年包月 D.按周计费</p><p>129.您在腾讯云上运维了一个MySQL 云服务,您发现近期数据库的查询操作耗时特别 长，平均每个查询时间达到了10秒，您可以监控数据库的哪项指标来及时排查此 问题?</p><p>答案：C</p><p>A.监控磁盘|O等待数量，以便于确定磁盘性能是否足够 B. 监控磁盘的利用率，以便于及时掌握磁盘的容量占用情况 C.监控慢查询数量，以便于及时掌握每次查询的耗时情况 D.监控连接利用率,以便于及时得知当前数据库的连接建立情况</p><p>130.小班在2018.5.17购买了3个月的云服务器，假设月单价为30元，共花费90元,下 列关于此次云服务器的消耗明细和收支明细的描述中，正确的是哪项?</p><p>答案：C</p><p>A.在5月当月的收支明细中，云服务A有一笔30元的扣费记录 B.在5月当月的消耗明细中，云服务A有一笔30元的扣费记录 C.在5月当月的收支明细中，云服务器有一笔90元的扣费记录;在消耗明细中，云服务器 的消耗金额为:日单价x5月使用天数=30/30x15=15元 D.在6月当月的收支明细中，云服务器有一笔 90元的扣费记录;在消耗明细中，云服务器 的消耗金额为:日单价x5月使用天数=30/30*15=15元</p><p>131.公有云场景下运维最大的变化就是运维通道不在内网，而是完全通过互联网直接 访问公有云.上的各种运维管理接口。很容易被嗅探或中间人劫持攻击，造成运维 管理账号泄露，您应该怎样用低成本的方式解决此类运维风险?</p><p>答案：C</p><p>A.将业务放入到不同的VPC中，即使有风险，损失也会小很多 B.使用专线连接云端，来保证运维的安全 C.将业务放入到不同的子网中，并同时配置合适的安全组和网络ACL D.在夜间进行运维，可减少网络攻击和嗅探</p><p>132.在企业中，您负责Linux的网站服务 器运维，针对您的网站操作系统、网站应用程 序( Apache)、安全、以及网站的性能等监控对象，关于各监控指标抽述正确的是 哪项?</p><p>答案：D</p><p>A.针对操作系统，只需要关注CPU、内存、硬盘的使用率即可 B.网站的应用程序仅需要监控进程的状态是否处于运行中 C.网站的安全指标是由检测木马和检测病毒两方面构成 D. 网站的性能包括:网页的性能、HTTP建立的时间、DNS响应、以及页面的响应时间</p><p>133.您打算将本地的所有业务都迁移至腾讯云上运行，其中涉及到大量的业务系统和 数据类型，您需要在迁移时尽量把影响降到最低，所以您打算采取平滑迁移的方 式，以下关于平滑迁移的流量切换流程描述,正确的是哪项?</p><p>答案：A</p><p>A.1.部署云上环境，通过专线连通腾讯云和旧机房，业务层CVM后端指向旧机房数据; 2、切换流量到腾讯云，由腾讯云对外提供服务; 3、禁用旧数据源写功能; 4、完成剩余 数据同步 B. 1、部署云上环境，通过专线连通腾讯云和旧机房， 业务层CVM后端指向腾讯云上的环 境;2、切换流量到腾讯云，由腾讯云对外提供服务; 3、禁用旧数据源写功能; 4、完成 剩余数据同步 C. 1.禁用旧数据源写功能; 2、 部署云上环境; 3、切换流星到腾讯云，由腾讯云对外提供 服务; 4、完成剩余数据同步 D. 1.部署云上环境，通过专线连通腾讯云和旧机房，业务层CVM后端指向旧机房数据; 2、完成剩余数据同步; 3、禁用旧数据源写功能; 4、 切换流量到腾讯云，由腾讯云对外 提供服务</p><p>134.腾讯云的费用中心里，包含一些虚拟子账号，以下关于这些虚拟子账号在扣费时 的顺序问题，描述正确的扣费顺序是哪项?</p><p>答案：C</p><p>A.现金账户、平台赠送账户、收益转入账户 B.现金账户、收益转入账户、平台赠送账户 C.平台赠送账户、收益转入账户、现金账户 D.现金账户、代金券、赠送账号</p><p>135.您计比把本地机房中的电商业务以微服务的方式部署在腾讯云上。经过一段时间 的迁移之后，您本地的业务已经完全在腾讯云上运行了，现在您打算提升在腾讯 云上的运维效率问题，以便于更快更好的完成工作，针对以下各种场景，请您给 出具体且最合理的处理方式。您发现腾讯云也有一开源的自动化运维解决方案 蓝鲸您可以通过以下哪个命令来 完成最小化安装来体验蓝鲸的基本功能?</p><p>答案：B</p><p>A. install minibk B. yum install minibk C. apt install minibk D. source minibk.sh</p><p>136.消息队列CKafka是基于开源Kafika提供的高吞吐性能、可扩展性的消息队列服 务，基于VPC网络接入模式,在创建实例和Topic的操作中，下列描述错误的是哪 -项?</p><p>答案：D</p><p>A. Topic名称一旦创建不支持修改 B.创建Topic时， 白名单一且开启，不支持修改 C. Partition副本数不支持单副本模式 D. Ckafka实例中消息保留的时长最短为1天</p><p>137.目前腾讯云已经推出了资源账单2.0功能，如果您希望得知近- 年来,您在腾讯 云上整体的总费用支出趋势，您应该使用以下哪项图表?</p><p>答案：A</p><p>A.柱形图 B.明细图 C.地域汇总图 D.饼图</p><p>138.您管理的业务系统中，当前模块有10台设备，单机负载40%，目标负载80%，业 需要上涨到原来的3倍,以下关于扩容的设备量描述中，正确的是哪项?</p><p>答案：C</p><p>A.1台 B. 3台 C.5台 D. 7台</p><p>139.您打算在腾讯云上的北京- -区同时运行开发环境、测试环境、现网环境，但是又 不想这些环境互相冲突,需要完全隔离，以下哪项VPC网络搭建方案是正确的?</p><p>答案：A</p><p>A.将这些环境放入同一个VPC,但是用网络ACL来限制通讯 B.将这些环境放入同一个VPC,但是用安全组来限制通讯 C.将三个环境放入同-一个VPC,然后使用访问管理功能来限制网络访问 D.将这些环境放入不同的VPC</p><p>140.腾讯云中的无服务器云函数提供了众多的触发方式，以下描述中，不属于腾讯云 提供的触发方式有哪项?D</p><p>答案：</p><p>A.定时触发 B. COS触发 C. CMQ主题订阅触发 D.告警触发</p><p>141.如果您是第一次使用腾讯云的云产品API,您希望可以通过工具来进行在线调用云 服务器来创建CVM,应该使用以下哪项步骤?</p><p>答案：C</p><p>A.打开API3.0 Explorer产品的控制台; 2、选择云服务器选项; 3、选择实例相关接口，输 入实例参数; 4、点击在线调用按钮，点击发送请求 B.打开API3.0 Explorer产品的控制台; 2、选择云服务器选项; 3、选择地域相关接口，输 入实例参数; 4、点击在线调用按钮，点击发送请求 C.打开API3.0 Explorer产品的控制台; 2、 选择云服务器选项; 3、选择实例相关接口，输 入个人密钥，输入实例参数; 4、点击在线调用按钮，点击发送请求 D.打开API3.0 Explorer产品的控制台; 2、 选择云服务器选项; 3、输入实例参数:4、点击在 线调用按钮，点击发送请求</p><p>142.您经常收到用户的投诉,抱怨打开您公司网站很慢，但是您在家测试到公司网站 打开测试速度却很正常，您应该使用腾讯云的哪项产品来判断问题所在?</p><p>答案：C</p><p>A.云监控 B.弹性伸缩 C.云拔测 D.自定义监控</p><p>143.某母婴连锁品牌，为了更好的服务好互联网用户,把在线购物平台和内部的两个 应用系统迁移到了腾讯云上，如图所示。但由于对云产品了解不深，上云初期在线 平台经常遇到异地登录告警、用户打开网站慢甚至打不开、户反馈收到官网发 的异常链接短信、活动优惠券被盗刷，更为严重的是，发生了客户数据信息泄密的 事件,运维部门压力非常大经排查甄别,发现运维部门在账号权限管理、云产品安 全管理上存在极大的漏洞,请根据以上描述，回答如下问题: 根据场景中的现有问题，提供以下解决方案，中合理的是哪一项?</p><p>答案：A</p><p>A.关于网站打开速度慢或打不开建议通过云监控查看网站并发访问流量特征如果流量过高且 与实际情况不符，可能原因是网站被DDoS’了,建议开通DDoS高防包或高防IP来解决 B.发生以官网名义发送异常信息给客户，可能的原因是网站被SQL注入攻击了,建议开通web 应用防火墙服务来进行防护 C.异地登录告警是正常提示，不需要过多关注 D.优惠券被盗刷的问题可以通过开通T-sec主机安全铲品来防护</p><p>144.以下关于日志服务中，日志集、日志主题的概念以及操作步骤描述中，正确的是 哪项?</p><p>答案：A</p><p>A.日志集(Logset)是日志服务的项目管理单元，创建一个日志主题时， 需要指定到-个日志 集 B.日志集是日志服务的采集Agent,如果要配置日志集，必须创建机器组，开启索引后可以 加快日志的检索 C.日志集是日志主题中的一个子概念,应该先创建日志主题，再创建日志集 D.配置日志服务时，必须开启索引，不然无法配置日志集和日志主题</p><p>145.某母婴连锁品牌，为了更好的服务好互联网用户，把在线购物平台和内部的两个 应用系统迁移到了腾讯云上,如图所示。但由于对云产品了解不深，上云初期在线 ， 平台经常遇到异地登录告警、用户打开网站慢甚至打不开、户反馈收到官网发 的异常链接短信、活动优惠券被盗刷，更为严重的是，发生了客户数据信息泄密的 事件,运维部门压力非常大，经排查甄别，发现运维部门在账号权限管理、云产品安 全管理上存在极大的漏洞,请根据以上描述，回答如下问题: 案例中的数据泄密是数据安全管理不到位的体现，腾讯云提供了多种数据安全产 品，下列关于数据安全防泄密描述错误的是哪一项?</p><p>答案：C</p><p>A.数据安全中心可基于AI实现异常访问行为识别预警,防止数据泄密 B.堡垒机支持针对账号与岗位进行细颗粒度的权限划分，确保运维人员无法越权操作 C.通过在企业的本地机房安装云动加密机实现对云数据库数据的加密存储 D.可通过敏感数据处理对数据库中敏感数据进行在线屏蔽、变形、字符替换等脱敏操作, 达 到企业数据保密的效果</p><p>146.您在腾讯云上可以通过蓝鲸来完成您的APP开发基于蓝鲸开发APP具备以下哪项 优势?</p><p>答案：C</p><p>A.用户只需要完成所有代码开发,无需关注后端服务器组件的运行情况 B.用户只需使用平台支持的语言编写核心代码并设置代码运行的条件即可在腾讯云基础设施 上弹性、安全地运行代码，无需购买服务器，节约成本 C.蓝鲸平台提供了完善的前后台开发框架、服务总线(ESB)、调度引擎、公共组件等模块, 帮助用户快速、低成本、兔运维地构建支撑I具和运营系统 D.蓝鲸平台提供了各式各样的SDK,用户无需写代码就可以根据SDK快速创建APP</p><p>147.有一种监控的特点是:无需提前进行信息埋点，可以在不接触业务本身的情况下对 业务进行监控,还可以跟第三方的数据对比,比较典型的是舆情监控。那么这种监 控手段属于以下哪一种?</p><p>答案：C</p><p>A.主动监控 B.被动监控 C.旁路监控. D.整体监控</p><p>148.下列关于私有网络、子网和路由表的说法中，错误的是哪项?</p><p>答案：A</p><p>A.私有网络只能含有一个子网 B.用户可以同时创建多个子网 C.每个子网都需要管理路由表 D.路由表用于控制私有网络内子网的出流量走向</p><p>149.您打算把您公司的一个纯静态网站迁移到腾讯云上采取以下哪项迁移技术来实现 网站的迁移可以最高效且节约成本?</p><p>答案：D</p><p>A.在腾讯云上手工重新部署 B.使用主机克隆技术，把主机克隆至腾讯云上 C.使用应用程序容器技术完成迁移 D.上传至COS存储桶</p><p>150.云计算以多种形式对外提供服务比如提供给消费者的服务是运行在云计算基础设 施上的应用程序,消费者可以在各种设备上通过瘦客户端界面访问，如浏览器(例如 基于Web的邮件)，不需 要管理或控制任何云计算基础设施，包括网络、服务器、指 作系统、存储甚至独立的应用等等仅需要对应用进行有限的、特殊的配置。这种 服务形式被称作_</p><p>答案：C</p><p>A. PaaS(平台即服务) B. DaaS(数据存储即服务) C. SaaS(软件即服务) D. laaS(基础设施即服务)</p><p>151.在某天的凌晨时段,在短时间内某个运维管理账号发生大量的登录服务器失败的 事件。并且在之后连续几天的凌晨时间段，该运维管理账号不断重复错误登录。 基于此审计信息，运维人员快速判断该运维管理账号的用户名已经泄露，并遭受 密码暴力破解攻击，第一时间将该账号重新命名，并将连续尝试错误登录的外网 IP加入名单中，阻断其访问企图,此事件中的审计信息由腾讯云审计Cloud Audi提供，以下关于腾讯云审计功能的描述，正确的是哪项?</p><p>答案：C</p><p>A.操作记录功能，记录最近7天用户在腾讯云账号下的操作，例如操作事件时间、用户名、事 件名称、资源类型、 资源名称等 B.提供从日志采集、日志存储到日志内容搜索、 统计分析等 C.支持交互式探索联动分析，用户可通过笔刷和缩放等功能，聚焦目标数据,探索更多价值 和有效信息 D.与企业内部系统集成，统-系统入口。 避免运营分析需切换多系统的不便，利于综合管控</p><p>152.经过一段市场调研和选型,您打算将本地的业务系统全部迁往腾讯云，您在本次迁 移项目中担任总工程师角色，将全权负责本次的云上架构规划和迁移的实施，针对 以下情形，请提供具体建议和帮助。 您打算把数据库中的200TB迁移上云，您使用以下哪项操作可以快速上云并使用 数据库服务?</p><p>答案：B</p><p>A.直接使用DTS来自动化完成数据库上云</p><p>B.应该将数据库在本地完成导出，然后通过CDM完成离线迁移，最后在云上完成数据库的导入 操作 C.直接将数据库服务器制作成镜像然后上传自定义镜像到腾讯云上，最后完成CVM购买 D.将数据库和表上传到COS中，然后由COS进行数据库的导入操作</p><p>153.您希望在腾讯云上能实现以下功能:分布式服务发布与注册、服务调用、服务鉴 权、服务降级、服务限流、配置管理、调用链跟踪，此时您应该选择腾讯云上的 哪项产品?</p><p>答案：B</p><p>A.分布式存储CFS B.腾讯微服务平台TSF C.容器服务 D.分布式开发框架</p><p>154.您打算部署积读MySQL 数据库用于提高读写能力，但是您发现添加只读实例 的按钮无法点击，可能是以下哪种原因造成的?</p><p>答案：D</p><p>A您没有添加只读实例的权限 B. 当前地域没有开通此项功能 C.当前可用区没有开通此项功能 D. MySQL实例规格不满足添加只读实例的前提条件</p><p>155.某用户希望后续客户端的请求可以分配到同一服务器上,为为满足特定应用程序 服务器的需求，保证客户端的会话具有持续性。在此场景下，可以采用何种负载 均衡算法?</p><p>答案：D</p><p>A.加权轮询算法 B.加权最小连续数算法 C.加权最大连续数算法 D.源地址散列调度算法</p><p>156.客户小王在2018年3月1日使用后付费按小时结算的云服务器1小时，费用为4 元，其有4张代金券均满足条件可抵用:代金券A:面额10元，余额10元, 2018年3月9日到期(本次可抵扣4元)代金券B:面额10元，余额8元, 2018年3月9日到期(本次可抵扣4元)代金券C:面额20元，余额5元, 2018年3月9日到期(本次可抵扣4元)代金券D:面额20元,余额2元， 2018年3月9日到期(本次可抵扣2元)本次扣费时系统会选用哪张代金券?</p><p>答案：C</p><p>A. A B. B C. C D. D</p><p>157.Spring Cloud微服务架构中，经常使用的开发语言是以下哪项?</p><p>答案：A</p><p>A. Java B. Python C. Go D. NET</p><p>158.近期您经常发现云服务器的配发生改变且账号上也多了-些资源导致金额少了 很多此时您可以通过腾讯云上的哪项产品来追溯这些事件?</p><p>答案：B</p><p>A.云监控 B.云审计 C.云拨测 D.自定义监控</p><p>159.您在本地机房中有大量的业务，您每天的工作安排得都非常满，但是还是无法预 料到所有问题，运维压力特别大，您计划把本地机房中所有的业务都迁移到腾讯 云上，以减轻运维压力,预计在腾讯云上会维护大量的产品，其中包括30台 Centos Linux集群，负载均衡，MySQL等，且在迁移到云上之后，需要尽快开 发3个APP对外提供服务。 以下关于蓝鲸APP开发与传统APP开发模式的区别描述中，错误的是哪项?</p><p>答案：D</p><p>A.您使用蓝鲸平台的开发过程中，默认使用python进行开发，相对于其它开发语言， python比较简单，而且广泛应用于运维相关的开发 B.基于蓝鲸开发APP, 主要是开发一 些运维工具， 轻应用。程序较小，难度也比较小 C.基于蓝鲸，我们不用从零开始，而主要把精力聚焦在应用的业务开发，大大降低了开发的 难度，提高效率 D.传统开发模式由于所有资源都由自身提供，所以可靠性和稳定性会更好</p><p>160.对象访问权限和存储桶的访问权限相比，哪个优先级高?</p><p>答案：A</p><p>A.对象访问权限优先级更高 B.存储桶访问权限优先级更高 C.对象和存储桶访问权限优先级- _样 D.两者访问权限优先级没有关系</p><p>161.用户在腾讯云的某个私有网络上部署了一台Linux云主机, 为云主机配置了公网IP 并正常开启。此时，户希望通过另一台Linux主机使用SSH协议登录这台腾讯云 主机，在配置对应的安全组和ACL时，需要确保哪一个端口是放通的?</p><p>答案：A</p><p>A.22 B.53 C. 80 D.3389</p><p>162.下列关于告警策略触发的伸缩组说法中，错误的是哪项?</p><p>答案：A</p><p>A.告警策略触发: - -且指标到达设定阈值将直接触发。 B.告警触发伸缩组伸缩的时候执行动作是:发送通知+增加减少指定数量的云服务器。 C.建议为每个伸缩组各创建两个策略分别用于扩展和伸缩。 D.如果业务访问不存在周期性变化，使用告警策略触发能够更好的适应业务的变化。</p><p>163.以下关于CDN热备源站和HTTPS回源描述中，正确的是?</p><p>答案：A</p><p>A.热备源站暂时不支持HTTPS回源，配置了热备源站的域名在配置证书时，一定不要选择 HTTPS回源 B.不管是不是热备源，都可以选择HTTPS回源，没有任何问题 C. CDN为了加速客户端的访问，不支持HTTPS类型 D. CDN中只支持一个源站， 没有热备源的概念</p><p>164.以下关于Docker的描述中，正确的是哪些?</p><p>答案：B</p><p>A. Docker是一个开源的应 用编程框架开发者可以借助Docker开发并打包他们的应用 B. Docker是一个开源的应 用容器弓|擎开发者可以打包他们的应用及依赖到一个可移植的容器 中，发布到流行的Linux和Windows机器上 C. Docker是一 个开源的容器集群管理系统， 可以实现容器集群的自动化部署、自动扩缩容、 维护等功能 D. Docker是一个虚拟机管理平台 ，可以更高效的管理和运行虚拟机</p><p>165.您在腾讯云上有一包年包月的CVM,随着户数的越来越多, CVM的内存率 直线上升，已经达到了90%,压力非常高，您应该使用以下哪项方式解决此困境?</p><p>答案：A</p><p>A.结合弹性伸缩来应对不同峰值的压力 B.重新启动服务器，可以释放内存占用 C.优化网页性能，降低内存占用率 D.提高网络带宽</p><p>166.小明负责在公司机房中运维-套网站， 总是到遭到500M-1000M的DDOS攻击，此 时决定将网站部署到腾讯云上，请问小明应该怎么做才能做好此种强度的防护?</p><p>答案：C</p><p>A.购买BGP高防包 B. 购买BGP高防IP C.无需任何动作即可防护 D.购买WAF增值包</p><p>167.您在腾讯云中运行了-一个网站，前端使用CVM运行网站内容，后端使用云数据库 MySQL来提供结构化数据存取,服务器和数据库位于同一个子网中，以下哪项安 全组的配置是错误的?</p><p>答案：D</p><p>TCP80端口 B.安全组开通了TCP443端口 C.安全组开通了TCP的80和443两个端口 D.安全组开通了TCP的80、443 和3306三个端口</p><p>168.您需要将本地的ERP系统迁移至腾讯云上，核心数据库放在本地机房,您第-步 需要在云上完成网络规划，以下关于网络迁移的步骤，正确的顺序是哪项?</p><p>答案：A</p><p>A.1. VPC网络搭建; 2、规划互联网访问; 3、混合云网络措建; 4、 云上网络互通 B.1.规划互联网访问; 2、VPC网络搭建; 3、混合云网络措建; 4、云上网络互通 C.1、混合云网络措建; 2、规划互联网访问; 3、VPC网络搭建; 4、 云上网络互通 D. 1、VPC网络搭建; 2、云上网络互通; 3、混合云网络措建; 4、 规划互联网访问</p><p>169.您经常会发现已上线的APP存在例如隐私泄露、业务逻辑缺陷等高危或者低危漏 洞,您可以使用以下哪款产品来实现在APP上线之前就可以解决此类漏洞?</p><p>答案：A</p><p>A. T-Sec移动应用安全 B. T-Sec天御业务安全 C. T-Sec主机安全 D. T-Sec密钥管理系统</p><p>170.您购买了专用宿主机用于承载您的业务,购买后发现无法直接使用，可能是以下 哪种原因造成的?</p><p>答案：C</p><p>A.专用宿主机购买后需要联系客服进行初始化 B. 专用宿主机购买后24小时后才可以使用 C. 需要在专用宿主机上创建专用子机后才可真正使用 D.专用宿主机需要先挂载云硬盘才可以启动装系统</p><p>171.目前腾讯云中，SQL SERVER产品关于sa账号权限描述正确的是哪项?</p><p>答案：D</p><p>A.在云中，sa账号被限制成普通账号权限 B. sa账号无法执行删除数据库操作 C. sa权限和本地权限无变化 D.腾讯云中不提供sa账号</p><p>172.下列关于弹性伸缩组的说法中,错误的是哪项?</p><p>答案：D</p><p>A.可以限定下限以保证伸缩组的性能。 B.可以限定上限以限制伸缩组资源使用。 C.可以定时或根据告警触发伸缩。 D.伸缩组中实例数量不能在线调整,需要停止业务后才能修改伸缩组中实例。</p><p>173.在腾讯云中，要将- -个已绑定云服务器的弹性公网IP绑定到另一台云服务器上, 需要如何进行操作?</p><p>答案：C</p><p>A.进入弹性公网IP管理页面，将弹性公网IP绑定到指定的云服务器上 B.进入云服务器管理界面，找到绑定了弹性公网IP的网卡，将网卡连接到指定的云服务器上 C.进入弹性公网IP管理页面，先将该弹性公网IP解绑,再绑定到另一台指定的云服务器 上 D.为目标云服务器申请一张弹性网卡， 将弹性网卡绑定到弹性公网IP上，再将弹性网卡挂载 到另一台云服务器上</p><p>174.针对您30台Linux服务器的集群，上云后变成大 星CVM,会加剧您的运维压力，您. 可以使用以下哪种工具来提升您的运维效率?</p><p>答案：B</p><p>A. SCO B. Ansible C. CDN D. TBDS</p><p>175.您本地机房的云上部署，需要购买大云资源，通过Web控制台购买会有大量重 复的操作，并且不同的产品购买和配置需要耗时很久，不便于自动化和重用,您 可以用以下哪种方式进行购买和配置资源来提升效率和自动化能力?</p><p>答案：A</p><p>A.云API B.申请工单人员完成购买和配置 C. Ansible D. SDK</p><p>176.腾讯云COS中存储的基本单元是什么?</p><p>答案：A</p><p>A.对象 B.桶 C.文件 D.唯-地址</p><p>177.配置网络ACL的时候，需要允许所有源IP对云服务器所有端口进行访问，同时拒 绝源IP为192.168.200.11/24的机器HTTP访问80端口，应该如何设置?</p><p>答案：B</p><p>A.协议类型端口源IP策略ALL ALL 0.0.0.0/0允许HTTP 80 192 168 200.11/24拒绝 B. 协议类型端口源IP策略HTTP 80 192.168.200.11/24拒绝ALL ALL 0.0.0.0/0允许 C.协议类型端口源IP策略HTTP 80 192 168 200.0/24允许HTTP 80 192.168 200.11/24拒 绝ALL ALL 0.0.0.0/0允许 D.协议类型端口源IP策略ALL ALL 0.0.0.0/0允许HTTP 80 192.168.200.0/24允许HTTP 80 192.168.200.11/24拒绝</p><p>178.负载均衡实例有应用型负载均衡和传统型负载均衡，关于这两种负载均衡实例的 说法，正确的是()?</p><p>答案：B</p><p>A.应用型负载均衡在同一个负载均衡实例中， 一个前端端门可以对应多种协议。 B.应用型负载均衡在同- -个负载均衡实例中，-个前端端口可以对应多个后端端口。 C.传统型负载均衡在同一个负载均衡实例中，-个前端端口可以对应多种协议。 D.传统型负载均衡在同一个负载均衡实例中，一个前端端口可以对应多个后端端口。</p><p>179.您企业在腾讯云中有很多资源，您希望开发人员只拥有其所在的开发环境相关的 云资源的读写权限，测试人员只拥有其所在的测试环境相关云资源的读写权限， 以上需求通过腾讯云哪项服务可以做到?</p><p>答案：A</p><p>A. CAM B.网络ACL C.安全组 D. CVM管理</p><p>180.存储桶默认提供两种访问权限:公有读私有写和私有读写，下列属于私有读写权 限特点的是哪项?</p><p>答案：D</p><p>A.任何人对于存储桶都能读 B.任何人都对存储桶都能写 C.任何人都能对存储桶读写 D.存储桶创建者可以读写</p><p>181.在腾讯云中创建和配置路由表时，下列说法错误的是哪项?</p><p>答案：D</p><p>A.每个路由表只能关联到同-私有网络中的多个子网，每个子网有且只能关联-个路由表。 B.有默认路由和自定义路由两种类型的路由规则。 C.创建了VPC后，系统会创建一个默认路由表， 所有新建的子网都会关联到默认路由表。 D.路由规则需要定义四个参数:分别是目标端、下一 -跳参数、下一跳类型、下一 跳ID。</p><p>182.您接到了领导的任务如下:1、学习微服务和单体架构的特点与关键性技术;2、评估 将公司自行开发的业务系统在腾讯云上实施微服务化的难度;3、将公司的业务整体 以微服务化的方式上云。根据以上背景，分别解答下列问题: 您在测试环境尝试改造系统时发现，每次都需要从公网传输镜像，您想到可能会 造成安全问题，而且速度也太慢，此时您可以进行以下哪项操作来避免?</p><p>答案：A</p><p>A.在公司自行部客Docker私有仓库 B.使用SSL证书加密连接 C.将Docker镜像做的更小 D.将业务功能拆分的更细致</p><p>183.某游戏公司为应对用户的高并发增长压力，现对业务系统全面上云。调研分析发 现，公司的用户主要集中在北京、成都、南京、深圳及周边地区,数据中心机房: 在深圳，所有设备内网都在10 0.0.0/8网段,另外产品研发中心提出公司的预生产 环境必须要与开发和测试环境隔离。下列关于 云上网络架构设计描述错误的是哪 项?</p><p>答案：C</p><p>A.考虑到用户的多地域分布特征，至少要在北京、成都、南京、深圳创建独立的VPC网络 B.由于预生产环境要求与开发和测试环境隔离，因此需要为预生产环境设计独立的VPC网络 C.本地数据中心网络在10.0.0.0/8,考虑到本地数据中心和云端网络的通信问题，建议上云前 云上VPC网段选择时，也选用10.0.0.0/8 D.基于游戏业务对数据和应用可用性要求高的特点，建议在设计VPC网络时，每个VPC中的 交换机选择在不同的可用区部署</p><p>184.随着时间的推移,运维经历了很多的变化，以下关于运维发展阶段的顺序,描述 正确的是哪项?</p><p>答案：A</p><p>A.1、全人工运维;2、工具化运维;3、平台运维;4、自动化运维 B. 1、全人工运维，2、工具化运维;3、自动化运维,4、平台运维 C. 1、全人工运维,2、 平台运维;3、 I具化运维;4、 自动化运维 D. 1、全人工运维,2、 自动化运维;3、 平台运维;4、工具化运维</p><p>185.在腾讯云上应该尽量用更少的存储成本来达成业务目标，以下关于减少存储成本 的描述中，错误的是哪项?</p><p>答案：C</p><p>A.冷热数据分离 B.减少过多快照 C.用云硬盘代替其他存储 D.优化备份策略</p><p>186.您接到了领导的任务如下:1、学习微服务和单体架构的特点与关键性技术;2、评估 将公司自行开发的业务系统在腾讯云上实施微服务化的难度,3、将公司的业务整体 以微服务化的方式上云。根据以上背景,分别解答下列问题: 您在拆分功能时发现其中有-项订单功能，这项功能是有状态的服务,此时您应 该怎么办? .</p><p>答案：C</p><p>A.由于微服务讲究无状态化，所以遇到有状态化的服务就只能保持单体状态 B.舍弃此功能，并重新开发一 个无状态化的类似服务 C.对其稍加改造,将订单这个状态存入到Redis中即可 D.对其稍加改造,将订单这个状态存入到容器中的内存即可</p><p>187.目前腾讯云中的SQL SERVER数据库默认采用以下哪种数据库高可用肪案?</p><p>答案：C</p><p>A. SQL群集 B. Windows群集 C. SQL镜像 D. SQL Always On</p><p>188.以下哪项是用户在腾讯云中通过自定义配置创建实例的正确顺序?</p><p>答案：B</p><p>A.选择地域和机型-&gt;选择存储与网络~&gt;选择镜像~&gt;设置信息(主机名、登录方式、安全组 等) /-&gt;完成支付 B.选择地域和机型-&gt;选择镜像-&gt;选择存储与网络-&gt;设置信息(主机名、登录方式、安全组 等) -&gt;完成支付 C.选择地域和机型-&gt;选择镜像-&gt;设置信息(主机名、 登录方式、安全组等) -&gt;选择存储于网 络-&gt;完成支付 D.选择镜像-&gt;选择地域和机型-&gt;选择存储与网络-&gt;设置信息(主机名、登录方式、安全组 等) -&gt;完成支付</p><p>189.假设用户购买的负载均衡产品为域名www example com配置了IP白名单，白名单 内容如下: 1.1.1.1 2.2.2.0/24 3.3.0.0/16那么下列客户中会返回403页面的是哪 项?</p><p>答案：D</p><p>A.1.1.1.1 B. 2.2.2.2 C.3.3.3.3 D.2.2.3.2</p><p>190.某用户首次在腾讯云官网上使用现金购买了1台CVM,使用现金和代金券共同支付 购买了另外2台CVM云服务器，该3台云服务器均为包年包月，第3天发现同事已开 通了重复的资源，该客户要在第3天内把3台CVM进行销毁退款，如下退款方案描 述中正确的是哪一项?</p><p>答案：D</p><p>A.该客户可以为3台CVM申请5天内免费无理由退款，包括代金券 B.该客户可为3台CVM基于实际付款金额扣除资源已消费金额后退还到账户余额，且代金券 可全额退还 C.因购买的是包年包月实例将扣除3台CVM云服务器- 个月的费用后，退还到账户余额，但 代金券不予退还 D.该客户可为现金购买的1台CVM申请全额无理由退款至账户余额，另外两台可自助申请退 款至腾讯云账户，退款金额为实际支付金额扣除资源已消费金额后的剩余部分，但代金券 不予退还</p><p>191.运维自动化越来越多的成为企业运维管理的选择，下列关于行业内自动化运维I 具功能或特征描述错误的是哪一项?</p><p>答案：B</p><p>A. Ansible是基于Python语言开发，无agent的部署模式 B. SaltStack是基于java语言开发，基于agent的通信模式 C. Puppet是一个跨Linux、 Windows、 Unix平台的集 中化配置管理系统，采用的是C/S星状结 D.蓝鲸智云是一套基于PaaS平台的技术解决方案，帮助业务的产品和技术人员快速构建低成 本、免运维的支撑I具和运营系统</p><p>192.您希望获得过去一段时间内DDoS的流量峰值 、CC攻击请求数、WAF拦截等信 息，您可以通过腾讯云哪项服务完成以上需求?</p><p>答案：D</p><p>A.通过云监控查看详情 B.通过主机安全页面查看 C.通过天御业务安全防护查看 D.通过DDoS防护网络安全页面查看</p><p>193.以下哪项操作不属于腾讯云容器服务的管理方式?</p><p>答案：D</p><p>A.控制台 B. kubectl C. API D. RDP</p><p>194.目前您入职了-家全国化的企业，企业的主要信息化机房分布在成都、广州、北 京等地，现如今您打算对各项业务进行监控，以便于在出现故障时可以及时恢 复，下列关于各项监控中所应该关注的指标以及其意义，描述错误的是哪项?</p><p>答案：D</p><p>A.及时关注服务的运行状态，例如Apache、 Nginx等 是否处于运行中，以便于及时了解服务 的可用性 B.应该及时关注应用程序日志，以便于及时了解程序的错误信息，用于 及时诊断和排查 C.仅仅保证服务器和应用本身运行正常是不够的，还需要对不同机房、地域之间的网络状态 进行监控，以便于尽快发现异常网络状况 D.对性能的指标监控不包括页面响应时间，页面响应时间取决于客户端网络情况，不掌握在 管理员手中</p><p>195.您打算在腾讯云上部署5台网站服务器，但是又担心网站服务器在更新补丁等主动 连接互联网时会被攻击，此时您应该采取以下哪种互联网访问方式?</p><p>答案：B</p><p>A.采取弹性公网IP地址 B. 采取NAT网关方式 C.采取默认服务器自带的公网IP地址 D.采取对等连接进行互联网访问</p><p>196.您计划把本地机房中的电商业务以微服务的方式部署在腾讯云上，并提供统-的 访问入口，在高并发高流量时业务要賂良好的扩展性和压力承载能能力，不能 于压力高导致消息丢失,业务的可用性和可靠性要达到非常高的水平,不允许 由于某个可呕故障导致业务中断,在业务出现故障时，要把及时的判断故障原 因以便于及时恢复业务上线。 如何避免单个可用区故障导致业务发生中断?</p><p>答案：A</p><p>A.将多个可用区的CVM添加到容器集群中 B.将多个地域的CVM添加到容器集群中 C.使用高版本的Kubernetes可以避免此故障 D.使用云监控进行监控，-旦业务中断，立即执行访问入口切换到本地机房的操作</p><p>197.您计划把本地机房中的电商业务以微服务的方式部署在腾讯云上，并提供统-的 访问入口，在高并发高流量时业务要賂良好的扩展性和压力承载能能力，不能 由于压力高导致消息丢失，业务的可用性和可靠性要达到非常高的水平,不允许 由于某个可用区故障导致业务中断,在业务出现故障时，要把及时的判断故障原 因以便于及时恢复业务.上线。</p><p>日志采集服务当前不支持直接采集容器内文件系统的日志文件，那么我们想要采 集容器内的日志文件时，应该执行以下哪项操作?</p><p>答案：C</p><p>A.1.添加数据卷;2、挂在数据卷到日志文件处;3、创建日志收集器;4、 配置日志消费端 B. 1、创建日志收集器;2、配置日志消费端;3、添加数据卷,4、挂载数据卷到日志文件处 C.1.开启腾讯云CLS日志服务;2、配置日志服务采集容器内日志 D.1、在CVM. 上部署zabbix;2、配置Zabbix对容器的日志进行监控</p><p>198.您在一家互联网公司工作目前企业在其他公有厂商处已经部署了一套云 上系 统，用到的云资源包括云服务器、云数据库、对象存储等。目前，企业打算将系 统全部迁移至腾讯云，任务交由你主导完成。1.任务迁移至 腾讯云后，系统将全部 使用腾讯云产品，源数据端将停止使用;2任务完成的同时需注重迁移效率和经济 效益。 在迁移启动阶段的准备工作中，需要考虑腾讯云上资源的批量创建，需要经历以 下哪些步骤?</p><p>答案：A</p><p>A. 1.使用资源扫描工具扫描资源; 2、根据选型对照表调整映射规格; 3、生成TIC模板; 4、将模板传入资源编排TIC服务进行创建; B.1. 在数据源服务商处索要产品ist; 2、调用腾讯云API的资源创建接口，开发程序并导入产品ist; 3.运行创建资源的程序 C.1.根据数据源侧资源编写资源列表, 2、在资源创建I具中上传资源列表，并生成TIC模板 3将模板传入资源编排TIC服务进行创建; D.1、在云服务器安装创建工具，并创建任务文件 ,添加扫描源Secretld、SecretKey. Regions 等配置; 2.在资源创建I具启动资源创建创建工I具会自动完成资源创建;</p><p>199.您在腾讯云中新部署了一批CVM,不希望这批CVM直接面临公网，但是又希望它 们可以和互联网连接，您应该采用哪种方案处理此问题?</p><p>答案：D</p><p>A.尝试使用VPN访问CVM B.为这批CVM开通云与公司之间的专线链路 C.购买BGP高防包保护安全 D.购买NAT网关用于访问Internet</p><p>200.用户A在COS.上传了图片资源1.jpg,得到可访问链接tp://test- 1250000000 cosgz .myqcloud com/1 jpg，并且在他自己的网页ttp://a .com/a.html 嵌入了该图片，能正常访问。用户B在a.com上看到了图片，也在他自己的网页 htp://b. com/b html嵌入了1.jpg的链接, B的网页也能正常显示图片。以上案例 中，A的图片资源1.jpg就被B盗链了。此时A在不知情的情况下，COS.上的资源 持续被B网页正常使用，A负担了额外的流量费用,造成了费用损失。下列哪项 设置可以实现防盗链安全防护?</p><p>答案：B</p><p>A.同时开启白名单和黑名单设置 B.配置黑名单模式，域名设置填入. b.com并保存生效 C.配置黑名单模式，域名设置填入.a.com并保存生效 D. 配置白名单模式，域名设置填入a.com/* jpg并保存生效</p><p>201.目前您入职了-家全国性的企业，企业的主要信息化机房分布在成都、广州、北 京等地，现如今您打算对各项业务进行监控，以便于在出现故障时可以及时恢 复，下列关于各项监控中所应该关注的报标以及其意义，描述错误的是哪项?</p><p>答案：D</p><p>A.及时关注服务的运行状态，例如Apache、Nginx等 是否处于运行中，以便于及时了解服务 的可用性 B.应该及时关注应用程序日志，以便于及时了解程序的错误信息，用于及时诊断和排查 C.仅仅保证服务器和应用本身运行正常是不够的，还需要对不同机房、地域之间的网络状态 进行监控，以便于尽快发现异常网络状况 D.对性能的指标监控不包括页面响应时间、页面响应时间取决于客户端网络情况，不掌握在 管理员手中</p><p>202.针对您业务中的一些独立存在的业务模块，可以采取全迁移的方式上云，以下 关于全量迁移的缺点描述中 错误的有哪项?</p><p>答案：D</p><p>A.需要停服 B.回滚问题多 C.停服时间不确定. D.对业务系统要求低</p><p>203.腾讯云的产品已经全栈提供了API的使用方式，以下哪项不属于腾讯云支持的使用 方式?</p><p>答案：D</p><p>A.使用云API直接请求通过浏览器或cur命令直接访问API接口的网站，可直接调用云API接 门 B.使用SDK调用API:通过编程语言调用云API的SDK开发包，调用SDK包中的函数可方便的 调用云API接口 C.使用命令行工具CLI调用API:直接在操作系统中，以命令的方式进行操作 D.使用SSH工具，通过SSH工具，直接SSH到具体产品的后台进行操作</p><p>204.客户A在腾讯云购买了跨地域对等连接产品，选择按月95峰值计费模式。计费从 2018年9月1日开始，签订合同价格以阶梯定价为准 (0，10]Mbps: 500元/ Mbps 1月; (10，20]Mbps. 400元/ Mbps 1月; (20，50]Mbps. 300元/ Mbps /月)。 假设客户9月份有15天未产生流量，当月统计带宽消耗峰值为50Mbps, Max95带 宽为20Mbps，请问该客户9月该付费多少?</p><p>答案：A</p><p>A.4000元 B. 7500元 C.8000元 D. 15000元</p><p>205.您在购买Linux CVM时的登录仿式选项中选择了关联密钥的方式，服务器创建好之 后您发现不知道密码多少，也无法使用密码登录，应该使用以下哪项操作登录服 务器?</p><p>答案：A</p><p>A.使用SSH密钥登录服务器 B.提交工单询问处理方法 C.重新购买一台测试 D.将CVM的系统盘调整为云硬盘即可</p><p>206.我们在运维中经常听说遭遇到XSS攻击，以下关于XSS攻击原理的描述中，正确. 的是哪项?</p><p>答案：A</p><p>A.1.攻击者在存在XSS漏洞的网页中注入恶意脚本代码:2、受害人访问该网页;,3、恶意脚本 执行从而达到劫持用户会话，危害网站或者将用户重定向到恶意网站的目的 B.1.攻击者访问有sql注入漏洞的网站，寻找注入点:2、 攻击者构造注入语句，注入语句和 程序中的sq语句结合生成新的sq|语句;3、新的sqi语句被提交到数据库中进行处理;4、数据 库执行了新的sqi语句，引发sq|注入攻击 C.1.攻击者寻找有漏洞的主机;2、.上传木马文件; 3、远程访问木马文件，以获得服务器管理 员权限 D.1.攻击者向受害人发送保护病毒的邮件;2、受害者打开邮件并执行并执行病毒文件;3、受 害人额系统遭到入侵</p><p>207.当您打算在腾讯云上运维业务时,以下关于充分了解计费方式可以带来的好处描 述中,错误的是哪项?</p><p>答案：D</p><p>A.合理的组合使用可以节约成本 B.避免不合理的使用云产品造成浪费 C.了解费用的去向和组成部分 D.提升服务器性能</p><p>208.您公司在推动本地单体架构的电商业务系统迁移至腾讯云上，并以微服务的方式 部署到腾讯云上，您在其中负责提升整体业务的用户体验,并降低整体成本。 业务运行在本地时，经常在高峰期时大量的请求导致仓储系统崩溃,造成前端业 务逻辑中的减库存动作失败，无法下单，此时您可以使用以下哪项产品缓解此现 象?</p><p>答案：C</p><p>A. CDN B.无服务器云函数 C.消息队列 D. API网关</p><p>209.目前您企业在腾讯云上的年消耗已经达到100万/年，业务系统非常多,云服务器 200台，负载均衡40个，域名30个并全部接入CDN，MySQL数据库30套，Redis 数据库20套，对象存储存储桶若干，数据量每年都要正常30TB,运维团队每天压 力很大，成立了一个20人的小团队，专门忙于处理各项业务系统的告警信息，但 是依旧表示人手不够，运维团队总是忙于处理系统发生事故之后的“抢救”事件，平 时也没有很好的监控手段，目前急需全面的业务监控手段，将人员从“救火”的状态 解救出来。 由于云服务器的中压型，您需要多台服务器的CPU利用率近乎于实时的动态图表 进行集中展示，以便于及时了解服务器的运行情况，您应该使用以下哪种展示方 式?</p><p>答案：A</p><p>A.使用云监控中的Dashboard B.是用云拨测的站点拨测 C.使用具体产品上的监控按钮 D.只能自己开发报表进行实现</p><p>210.您公司的业务整体迁移至腾讯云已经几个月的时间了，近期您打算做一下对账, 用于分析在云.上的消耗趋势，也好持续优化成本，在分析之前，数据的收集和整 理是一个必须的过程，关于费用方面，以下几个问题需要您的协助。 您打算在腾讯云上部署一个网站用于临时问卷调查,此次问卷调查可能会最长持 续10天，请问这台服务器使用以下哪项付费模式会比较划算?</p><p>答案：B</p><p>A.包年包月 B.按量计费 C.竞价实例 D.自定义计费.</p><p>211.目前您企业在腾讯云上的年消耗已经达到100万/年，业务系统非常多，云服务器 200台，负载均衡40个， 域名30个并全部接入CDN，MySQL 数据库30套, Redis 数据库20套，对象存储存储桶若干,数据每年都要正常30TB,运维团队每天压 力很大成立了一个20人的小团队，专门忙于处理各项业务系统的告警信息，但是 依旧表示人手不够，运维团队总是忙于处理系统发生事故之后的“抢救”事件，平时 也没有很好的监控手段，目前急需全面的业务监控手段，将人员从“救火”的状态解 救出来。 目前逐渐在网络中看到有些人对公司的在线产品进行吐槽，目前急需一种合适的 监控手段对用户的感受进行监控，您可以选择哪种监控手段来达成此目标?</p><p>答案：C</p><p>A.主动监控 B.被动监控 C.舆情监控 D.自定义监控</p><p>212.您计划把本地机房中的电商业务以微服务的方式部署在腾讯云上，并提供统-一的 访问入口，在高并发高流量时业务要具备良好的扩展性和压力承载能能力，不能 于压力高导致消息丢失,业务的可用性和可靠性要达到非常高的水平,不允许 由于某个可用区故障导致业务中断，在业务出现故障时,要把及时的判断故障原 因以便于及时恢复业务上线。 腾讯云上的微服务解决方案包含很多产品,其中SCF属于腾讯云微服务方案中的 哪项分类?</p><p>答案：B</p><p>A.微服务 B.微计算 C.微积分 D.机器学习</p><p>213.目前您企业在腾讯云上的年消耗已经达到100万/年，业务系统非常多,云服务器 200台，负载均衡40个，域名30个并全部接入CDN, MySQL数据库30套，Redis 数据库20套，对象存储存储桶若干，数据量每年都要正常30TB,运维团队每天压 力很大，成立了一个20人的小团队，专门忙于处理各项业务系统的告警信息，但 是依旧表示人手不够，运维团队总是忙于处理系统发生事故之后的“抢救”事件，平 时也没有很好的监控手段，目前急需全面的业务监控手段,将人员从“救火”的状态 解救出来。 目前急需对云服务器中Apache服务的运行状态进行集中监控,如果服务停止就立 刻报警，那么应该使用什么样的产品，可以将所有服务器上的服务信息自动集中 起来以便于分析?</p><p>答案：A</p><p>A.日志服务 B.对象存储 C.文件存储 D.调用链跟踪</p><p>214.如何检测弹性缓存Redis的连通性?</p><p>答案：D</p><p>A.从外网ping B.从外网teInet C.从内网ping D.从内网telnet</p><p>215.以下关于私有网络IP地址容量的说法，正确的是哪项?</p><p>答案：B</p><p>A.私有网络创建之后支持通过控制台更改其大小 B.私有网络创建之后不支持更改其大小 C.私有网络大小调整需要提供工单 D.私有网络默认提供无限大容量</p><p>216.下列关于辅助网卡的描述中，正确的是哪项?</p><p>答案：B</p><p>A.创建云主机时联动创建的网卡 B.用户自行创建的网卡 C.辅助网卡不支持绑定 D.辅助网卡不支持解绑</p><p>217.关于弹性伸缩配置正确的流程是? a创建启动配置b新建伸缩组C创建定时任务 d.创建告警触发策略</p><p>答案：A</p><p>A. a-D-C-d B. b-a-c-d C. a-c-b-d D. b-a-d-c</p><p>218.您在腾讯云上维护了300台CVM,日常运维任务中,斥了大量重复性的任务,有 时候故障发生很久之后，才能完成排错，您可以通过以下哪项腾讯云产品来减轻 您的运维压力?</p><p>答案：A</p><p>A.蓝鲸 B. 无服务器云函数 C.消息队列 D.容器服务</p><p>219.随着时间的推移,您发现CVM的带宽利用率总是处于95%的占用率,为了容纳更 多的用户访问，您应该做以下哪项操作?</p><p>答案：A</p><p>A.点击服务器右侧的”更多”按钮，选择网络配置，将网络调整为更高- 级的档位 B.点击服务器右侧的”更多”按钮，选择调整配置 C.使用IP直通车服务 D.使用负载均衡产品</p><p>220.云硬盘采用几个副本来保证数据的可靠性?</p><p>答案：C</p><p>A.云硬盘采用1个高性能的副本来保证数据的可靠性 B.云硬盘采用2个高性能的副本来保证数据的可靠性 C.云硬盘采用3个高性能的副本来保证数据的可靠性 D.云硬盘采用4个高性能的副本来保证数据的可靠性</p><p>221.小明为了尽快适应公司的微服务架构的部署方式，在自己的测试环境中也部署了 同一套业务用来熟悉，他发现在容器中可以执行一些Linux命令, 但是执行top命令 之后，却只有简单的-两个进程,以下哪项的描述符合这种现象的原因?</p><p>答案：B</p><p>A.测试环境中的数据不足，导致其他进程无法启动 B. 容器本身只运行了- -个模块，且容器具有复用底层资源的特性，所有在容器中只会出现模 块使用的进程，其他的进程不会出现在容器中 C.测试环境中的内存资源不够，硬分配更多的资源进来，就会出现更多的进程 D.应该在busybox中执行top命令，而不是业务的模块容器中</p><p>222.您在腾讯云上购买了一台CVM,并部署了相应的业务,现在需要监控一下服务器 运行期间的CPU利用率,如何申请开通对云服务器的监控?</p><p>答案：B</p><p>A.提交工单申请 B.直接使用，无需申请开通 C.由于保护用户数据，需要自行安装监控实现 D.需要使用主账号才能申请，子账号不可以申请</p><p>223.腾讯云上为客户提供了无服务器云函数功能，以下关于无服务器云函数的描述 中，错误的有哪项?</p><p>答案：A</p><p>A.无服务器云函数是属于CVM的一个功能 B.无服务器云函数无需自购云服务即可使用 C.无服务器云函数产品中,我们只需使用平台支持的语言编写核心代码并设置代码运行的条 件即可 D. SCF在未执行时不产生任何费用，所以对一些无需常驻的业务进程来说，开销将大幅降低</p><p>224.您打算把本地的MySQL服务器上的100GB数据库迁移至腾讯云.上以减轻运维压 力，但是又不太熟悉MySQl 的迁移步骤，您应该使用以下哪项方案可以更轻松的 完成MySQL数据库迁移?</p><p>答案：C</p><p>A.离线迁移(CDM) B.在本地导出数据，在云上执行导入 C.使用腾讯云的DTS服务迁移 D.专线网络迁移</p><p>225.您在改善公司整体运维效率的过程中，发现腾讯云上的全部产品都提供了完善的 API接口，打算尝试通过API接口来完成一些运维任务， 请您认真考虑以下问题。 您发现您也可以通过使用命令行工具来完成产品的配置，使用体验和Linux命令行 类似，使用之前必须先完成配置，您可以通过以下哪项方式进行使用前的配置?</p><p>答案：A</p><p>A. tccli configure B. tccli config C. tencent configure D. qcloud config</p><p>226.您在改善公司整体运维效率的过程中，发现腾讯云上的全部产品都提供了完善的 API接口，打算尝试通过API接口来完成一些运维任务， 请您认真考虑以下问题。 您在电商618节日期间，大量创建所需服务,活动结束时需枇量删除服务。该 操/作过程固定且重复性极高,您应该用以下哪种方式可以更高效并且低成本的做 到此需求?</p><p>答案：A</p><p>A.使用API B.使用网页控制台 C.使用人力外包 D.使用按键精灵</p><p>227.以下哪项描述不属于业务运维模型的业务活动(DMOA)的范围?</p><p>答案：D</p><p>A.部署 B.监控 C.操作 D.更新</p><p>228.经过一-段市场调研和选型, 您打算将本地的业务系统全部迁往腾讯云，您在本次 迁移项目中担任总工程师角色，将全权负责本次的云上架构规划和迁移的实施, 针对以下情形，请提供具体建议和帮助。 您打算在云上规划一个26位掩码的IPV4网络用于某业务迁移,关于这个网络中, 可用于主机地址分配范围描述的公式中，以下正确的是哪项?</p><p>答案：C</p><p>A.2^32 B.2^26 C.2^(32-26)减去2 D.2^(32-26)减去3</p><p>229.您3月28号在腾讯云的费用中心查看账单时看到了最新的月结账单，那么这个月结 账单是以下哪项月份资源所产生的账单?</p><p>答案：B</p><p>A.1月 B.2月 C.3月 D. 4月</p><p>230.您目前在腾讯云上运维了200台云服务器，每次业务出现问题后，您都得登录200 台服务器查看日志，确认问题出在什么地方，您可以使用腾讯云的哪项产品改善 您查询日志的效率?</p><p>答案：A</p><p>A.日志服务,提供从采集、存储、 分析等- -站式服务 B.对象存储服务,提供海量的日志存储空间 C.归档存储,提供低成本的海量日志存储服务 D.云监控服务,提供及时的业务质量通知服务</p><p>231.您企业在腾讯云中有很多资源,您希望开发人员只拥有其所在的开发环境相关的 云资源的读写权限，测试人员只拥有其所在的测试环境相关云资源的读写权限， 以上需求通过腾讯云哪项服务可以做到?</p><p>答案：A</p><p>A. CAM B. 网络ACL C.安全组 D. CVM管理</p><p>232.以下关于TSF中集群、命令空间、部署组、应用的关系描述中,错误的有哪项?</p><p>答案：C</p><p>A.集群中包括命名空间，命名空间中包括部署组，部署组包括应用 B.如果不同的集群关联相同的命名空间，还可以实现跨集群的服务访问 C.集群、命名空间、部署组、应用之间没有任何关系 D.集群中包括且只能包括一个命名空间，命名空间中包括部署组，部署组包括应用</p><p>233.在社区上线之后，将会由20位管理员-起来运维,他们之间的账号以及权限设 计，应该遵从以下哪项原则?</p><p>答案：A</p><p>A.每个人建立自己的账号,并仅分配符台岗位需要的最小权限 B.所有的管理员应使用统一-的超级管理 员进行运维，避免浪费时间在权限不足的问题上 C.每个人建立自己的账号，当需要服务器维护时，由专岗进行管理员密码授权 D.将管理员的账号密码设置为永不过期，避免出现无法登录关键服务器的问题</p><p>234.在某些情况下，弹性伸缩产品的伸缩组会失效,一旦伸缩组失效,将会导致众多 影响，以下哪项描述不可能是伸缩组失效导致的?</p><p>答案：D</p><p>A.不会在业务高峰期时增加机器 B.不会在业务低谷时减少机器 C.伸缩组下再主动向负载均衡注册新的机器 D.包年包月的机器被剔除</p><p>235.以吓关于监控业务系统指标描述中，不属于云拨测使用场景的是哪项?</p><p>答案：D</p><p>A.监控全国各地用户访问业务的延时情况 B.监控业务在全国各地的可用性情况 C.监控用户在访问业务时的整体响应时间 D.监控网络带宽的利用率</p><p>236.如果您打算在腾讯云上使用容器服务,那么以下哪些操作步骤是正确的?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：A</span><br><span class="line"></span><br><span class="line">A.1.购买CVM; 2、创建集群;3、添加节点,4、创建服务 </span><br><span class="line"></span><br><span class="line">B. 1、购买专用宿主机;2、创建集群;3、添加节点;4、创建服务 </span><br><span class="line"></span><br><span class="line">C. 1、购买CVM;2创建集群; 3、配置消息队列:4、 创建服务 </span><br><span class="line"></span><br><span class="line">D. 1、购买CVM:2、 创建集群;3、添加节点;4、在CVM中部署服务</span><br></pre></td></tr></table></figure><p>237.您在腾讯云上有一台CVM已经连续运行了2年, 随着用户数量的增加，您发现服务 器_上的业务出现了卡顿情况，经过排查,您发现是硬盘的性能在高峰期无法提供 相匹配的能力，您应该监控硬盘的哪项指标?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.磁盘的总容量 </span><br><span class="line"></span><br><span class="line">B.磁盘利用率 </span><br><span class="line"></span><br><span class="line">C. I/O总数量 </span><br><span class="line"></span><br><span class="line">D. I/O排队的数量</span><br></pre></td></tr></table></figure><p>238.您在腾讯云上的业务近期正好在经历业务的高峰期么服务器的CPU利用率非常不 稳定，常常升高至95%，造成用户体验下降,您急需要在高峰期来临时得知CPU 利用率的突发情况，您应该使用云监控中的哪项告警服务来得知此消息?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.事件告警. </span><br><span class="line"></span><br><span class="line">B.阈值告警 </span><br><span class="line"></span><br><span class="line">C.故障告警 </span><br><span class="line"></span><br><span class="line">D.逻辑告警</span><br></pre></td></tr></table></figure><p>239.腾讯云上的哪款产品可以提供以下功能用户不再需要对OS入侵、登陆风险、文件 系统安全和端口监听做复杂的配置和管理，-切交由平台处理，驴只需填写最 重要的“核心代码”。其余无需负责，且能够实现低成本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">答案：B</span><br><span class="line"></span><br><span class="line">A.容器服务 </span><br><span class="line"></span><br><span class="line">B.无服务器云函数 </span><br><span class="line"></span><br><span class="line">C. API网关 </span><br><span class="line"></span><br><span class="line">D.消息队列</span><br></pre></td></tr></table></figure><p>240.您在腾讯云上部署了一个基于微服务的电商网站，分成了20个子业务, 50个容器 组，您希望使用API网关来实现API网关来实现API的统一管理， -下关于API网关 的创建和配置流程的描述中，正确的是哪项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：A</span><br><span class="line"></span><br><span class="line">A.1、创建服务;2、新建API;3、 配置前端;4、配置后端 </span><br><span class="line">B. 1、 新建AP!:2、 创建服务;3、配置前端;4、配置后端 </span><br><span class="line">C. 1、 配置前端;2、配置后端;3、创建服务;4、新建API </span><br><span class="line">D. 1.创建服务;2、 配置前端;3、新建APl;4、 配置后端</span><br></pre></td></tr></table></figure><p>241.腾讯云安全整体解决方案中，不包括以下哪项安全范围?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：A</span><br><span class="line"></span><br><span class="line">A.用户自有物理设备安全 </span><br><span class="line">B.主机安全 </span><br><span class="line">C.网络安全 </span><br><span class="line">D.业务安全</span><br></pre></td></tr></table></figure><p>242.您打算使用蓝鲸平台做自动化运维,但是您的服务器和Agent不属于同一个局域网，此时您应该选项以下哪I项Agent模式?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：A</span><br><span class="line"></span><br><span class="line">A.代理模式 </span><br><span class="line">B.直连模式 </span><br><span class="line">C.直通模式 </span><br><span class="line">D.旁路模式</span><br></pre></td></tr></table></figure><p>243.有一种监控的特点是: 上线前按照运维监控的需求,提前做好很多埋点，且是应 用胜动_上报自身的运行情况，那么这种监控手段属于以下哪一种?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：A</span><br><span class="line"></span><br><span class="line">A.主动监控 </span><br><span class="line">B.被动监控 </span><br><span class="line">C.旁路监控 </span><br><span class="line">D.整体监控</span><br></pre></td></tr></table></figure><p>244.API 3.0 Explorer提供了在线调用、签名验证、代码生成等调试功能，中代码生成 的功能支持多种类型的语言，下列哪项不是代码生成支持的语言?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">答案：C</span><br><span class="line"></span><br><span class="line">A. GO </span><br><span class="line">B. Java </span><br><span class="line">C. Ruby </span><br><span class="line">D. C++</span><br></pre></td></tr></table></figure><p>245.将本地业务迁移到腾讯云后，需要把流量入口切换到腾讯云，在切换之前要做 到新老系统无缝切换，就必须保证数据的正确性和一致性,以下关于数据一致性 测试方法的描述中，错误的是哪项?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">答案：C</span><br><span class="line"></span><br><span class="line">A.可以通过文本统计工具或者数据库连接I具将迁移前的数据库表名、字段、数据等进行统 计，然后将迁移后的新数据库表名、字段、数量等进行统计，然后进行比较 </span><br><span class="line">B.通过MD5生成工具，对新老数据文本进行MD5值比对测试，如果一致则表名数据量一 致, 如果不一致，则表明迁移后的数据有部分存在问题 </span><br><span class="line">C.查看网站是否能正常运行，能正常运行说明数据- 致,不能正常运行说明数据不-致 </span><br><span class="line">D.使用腾讯云DTS传输服务令迁移任务全自动完成数据一致性检查</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 考试认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Macmini Surge做网关软路由，mesh组网全家科学上网翻墙</title>
      <link href="/2024/10/08/Macmini+surge+asus%20mesh%E7%BB%84%E7%BD%91/"/>
      <url>/2024/10/08/Macmini+surge+asus%20mesh%E7%BB%84%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Surge介绍"><a href="#Surge介绍" class="headerlink" title="Surge介绍"></a>Surge介绍</h1><h2 id="Surge功能"><a href="#Surge功能" class="headerlink" title="Surge功能"></a>Surge功能</h2><ul><li>接管：<code>Surge</code> 允许用户接管设备发送的网络连接。支持代理服务和虚拟网卡接管。</li><li>处理：该软件使用户能够修改已接管的网络请求和响应。这包括<code>URL重定向</code>，<code>本地文件映射</code>，使用<code>JavaScript</code>进行自定义修改以及许多其他方法。</li><li>转发：网络请求一旦被接管，用户可以将其转发到其他代理服务器。转发可以是全局的，也可以使用灵活的规则系统来确定出站策略。</li><li>拦截：用户可以拦截并保存来自网络请求和响应的特定数据。此外，用户还可以使用 <code>MITM</code> 解密 <code>HTTPS</code> 流量。</li></ul><h2 id="Surge特征"><a href="#Surge特征" class="headerlink" title="Surge特征"></a>Surge特征</h2><ul><li>高性能、稳定性和效率：<code>Surge</code> 可以使用最少的系统资源以工业级的稳定性顺利处理所有网络流量。</li><li><code>灵活的规则系统</code>：您可以基于<code>域名</code>、<code>IP CIDR</code>、<code>GeoIP</code> 等编写转发规则。<code>Surge</code> 可以自动使用 <code>HTTP/HTTPS/SOCKS5/SOCKS5-TLS/Shadowosocks</code> 协议将请求代理到其他服务器。</li><li><code>HTTPS</code> 解密：通过中间人攻击解密 <code>HTTPS</code> 流量。证书生成器将帮助您生成操作系统信任的 <code>CA</code> 证书，以用于调试目的。</li><li>本地 <code>DNS</code> 映射：<code>Surge</code> 支持本地自定义 <code>DNS</code> 映射，通配符、别名、自定义 <code>DNS</code> 服务器等多种功能模块，满足多种需求。</li><li>代理组：您可以将多个代理归类为一个组，并根据分组采用策略。代理组可以配置为自动测速（根据基准 <code>URL</code> 访问速度选择策略）、<code>SSID</code>（根据 <code>Wi-Fi SSID 选择策略）和手动选择。</code></li><li><code>HTTP</code> 重写：您可以使用自定义规则将 <code>HTTP/HTTPS</code> 请求重写为另一个 <code>URL</code> 或阻止请求；</li><li>远程仪表板：<code>Surge Dashboard</code> 可以通过 <code>USB</code> 或网络连接到远程 <code>Surge iOS</code> 或 <code>Surge Mac</code> 实例。</li><li>完全支持 <code>IPv6</code>：所有功能均在 <code>IPv6</code> 环境中运行。</li></ul><h3 id="Surge-Mac-独有功能"><a href="#Surge-Mac-独有功能" class="headerlink" title="Surge Mac 独有功能"></a>Surge Mac 独有功能</h3><ul><li>增强模式：<code>Surge</code> 可以设置虚拟网络接口来处理未明确支持 <code>Web</code> 代理的应用程序的所有网络流量。</li><li>计量网络模式：您可以控制哪些应用程序/进程被允许访问互联网，这在计量连接（例如蜂窝网络）时很有用。</li><li>网关模式：<code>Surge Mac</code> 可以配置为三层网关，以处理同一网络中其他设备的网络流量。</li></ul><h3 id="Surge-iOS-独有功能"><a href="#Surge-iOS-独有功能" class="headerlink" title="Surge iOS 独有功能"></a>Surge iOS 独有功能</h3><ul><li>所有功能均可在蜂窝网络上运行。</li><li>捕获设备上任何应用程序的所有 <code>HTTP/HTTPS/TCP</code> 流量，并按照高度可配置的规则重定向到 <code>HTTP/HTTPS/SOCKS5/Shadowosocks</code> 代理服务器，即使应用程序不遵循系统代理设置。</li><li>即使在蜂窝网络上也可以覆盖系统 <code>DNS</code> 设置，并通过同时查询所有 <code>DNS</code> 服务器来提高性能。</li><li>通过 <code>Wi-Fi</code> 或 <code>USB</code> 数据线将 <code>Surge Dashboard</code> 连接到 <code>Surge iOS</code>，监控和分析 <code>iOS</code> 设备上的网络请求。您甚至可以在通过 <code>USB</code> 数据线连接时检查蜂窝网络请求。</li></ul><h3 id="理解-Surge"><a href="#理解-Surge" class="headerlink" title="理解 Surge"></a>理解 Surge</h3><ul><li>英文版本：<a href="https://manual.nssurge.com/book/understanding-surge/en/">https ://manual.nssurge.com/book/understanding-surge/en/</a></li><li>中文版本：<a href="https://manual.nssurge.com/book/understanding-surge/cn/">https ://manual.nssurge.com/book/understanding-surge/cn/</a></li></ul><p>档和社区资料。</p><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><h2 id="设备清单"><a href="#设备清单" class="headerlink" title="设备清单"></a>设备清单</h2><ul><li><code>Macmini</code> 1台</li><li>华硕<code>RT-AX89X</code>,华硕<code>RT-AX880U</code></li><li>其他接入设备</li></ul><h2 id="网络拓扑图"><a href="#网络拓扑图" class="headerlink" title="网络拓扑图"></a>网络拓扑图</h2><p><a href="https://imgse.com/i/pAGDK8e"><img src="https://s21.ax1x.com/2024/10/08/pAGDK8e.jpg" alt="pAGDK8e.jpg"></a></p><h2 id="网络规划"><a href="#网络规划" class="headerlink" title="网络规划"></a>网络规划</h2><div class="table-container"><table><thead><tr><th></th><th>华硕<code>RT-AX89X</code>（<code>mesh</code>母）</th><th>华硕<code>RT-AX880U</code>（<code>mesh</code>子）</th><th><code>Macmini</code></th><th>其他设备</th></tr></thead><tbody><tr><td><code>IP</code>地址</td><td>192.168.51.1</td><td>192.168.51.2</td><td>192.168.51.88</td><td>192.168.51.<code>xx</code></td></tr><tr><td>子网掩码</td><td>255.255.255.0</td><td>255.255.255.0</td><td>255.255.255.0</td><td>255.255.255.0</td></tr><tr><td>网关</td><td>192.168.51.88</td><td>192.168.51.88</td><td></td><td>192.168.51.88</td></tr></tbody></table></div><h2 id="网络配置-1"><a href="#网络配置-1" class="headerlink" title="网络配置"></a>网络配置</h2><blockquote><p>华硕<code>RT-AX89X</code> <code>WAN</code>口接光猫，<code>PPPOE</code>拨号上网，同时配置<code>DHCP</code>，内网<code>IP</code>配置<code>192.168.51.1</code> 地址池范围<code>192.168.51.2-254</code></p><p>华硕<code>RT-AX880U</code> <code>WAN</code>口接RT-AX89X 千兆LAN口，同时配置MESH组网</p><p><code>Macmini</code> 网口接入<code>RT-AX89X</code> 千兆<code>LAN</code>口，配置固定<code>IP</code>，<code>192.168.51.88</code></p><p><a href="https://imgse.com/i/pAGDuCD"><img src="https://s21.ax1x.com/2024/10/08/pAGDuCD.md.jpg" alt="pAGDuCD.md.jpg"></a></p></blockquote><h1 id="Macmini-Surge配置"><a href="#Macmini-Surge配置" class="headerlink" title="Macmini Surge配置"></a><code>Macmini</code> Surge配置</h1><h2 id="Surge-DHCP-接管网络"><a href="#Surge-DHCP-接管网络" class="headerlink" title="Surge DHCP 接管网络"></a>Surge DHCP 接管网络</h2><h3 id="添加-Surge-的配置文件"><a href="#添加-Surge-的配置文件" class="headerlink" title="添加 Surge 的配置文件"></a>添加 Surge 的配置文件</h3><p>你订阅的服务应该会给 <code>Surge</code> 的<strong>订阅链接</strong>，如果没有也没关系，你可以通过第三方 <a href="https://bianyuan.xyz/">订阅转换</a> 生成（推荐用这个，分流会丰富合理很多）：</p><ul><li><p>订阅链接填上你的 <code>v2ray</code>、<code>ss</code> 、<code>trojan</code> 的订阅</p></li><li><p>客户端选择 <code>surge 4</code></p></li><li>选择生成订阅链接就好了</li></ul><ol><li>打开 <code>surge</code> 设置中的<strong>配置</strong></li><li>选择从 url 安装配置</li><li>粘贴上你的配置文件订阅地址后选择完成</li><li>选中刚才添加的点击 <strong>应用</strong></li><li>在策略里选择 <strong>规则判定</strong>，这时候你应该就能愉快的上网了。</li><li>如果不行可以重新退出打开下 surge，并检查是否打开了 <strong>设置为系统代理</strong> 和 <strong>增强模式</strong>。</li></ol><h3 id="配置-Surge-DHCP-接管网络"><a href="#配置-Surge-DHCP-接管网络" class="headerlink" title="配置 Surge DHCP 接管网络"></a>配置 Surge DHCP 接管网络</h3><h4 id="设置电脑-IP-为静态IP"><a href="#设置电脑-IP-为静态IP" class="headerlink" title="设置电脑 IP 为静态IP"></a>设置电脑 IP 为静态IP</h4><p>打开 <strong>系统偏好设置-网络</strong>，选择以太网（也就是网线接口），配置 <code>IPv4</code> 选择 <strong>使用 DHCP（手动设定地址）</strong>，我的路由器是 <code>192.168.51.1</code> 所以 IP 地址我就填 <code>192.168.51.88</code>，只用修改最后一位在 <code>2-225</code> 之间就行。（如果你的路由器是 <code>192.168.31.1</code> 你的 IP 地址就可以填 <code>192.168.31.2</code>，以此类推）随后选择 <strong>应用</strong>。</p><h4 id="关闭路由器-DHCP"><a href="#关闭路由器-DHCP" class="headerlink" title="关闭路由器 DHCP"></a>关闭路由器 <code>DHCP</code></h4><p>一般都在 <strong><code>内部网络</code>-`DHCP服务器</strong>选项里，关闭启用<code>DHCP</code>， 保存并应用。（各家系统的设置位置可能有差别，但基本都是有<code>DHCP</code>开关选项的）</p><h4 id="打开-Surge-DHCP-选项"><a href="#打开-Surge-DHCP-选项" class="headerlink" title="打开 Surge DHCP 选项"></a>打开 <code>Surge DHCP</code> 选项</h4><p>在左侧 <strong>设备</strong> 里，点开后有 <strong><code>DHCP 服务器</code></strong> 开关，点开后请认真看下内容，然后选择下一步。</p><p>网络设备和你上面设置固定的 <code>IP</code> 的一致，插网线的选择 <strong>Ethernet</strong> 就行，继续下一步。</p><p><code>Surge</code>会检测当前网络环境是否有<code>DHCP</code> 设置，如果上面你正确关闭了 路由器<code>DHCP</code> 这里应该能直接过去。</p><p>选择 <code>Surge</code> 默认的设置点击<strong>完成</strong>即可，如果你懂的可以自行修改。</p><p>把你其它设备<strong>重新连接 <code>wifi</code> 或者关闭路由器 <code>wifi</code> 再打开</strong>即可看到 设备里新增设备。</p><p>如你想你连接的设备通过 <code>Surge</code> 走代理服务，你可以右键选择设备名然后选择 <strong>使用 Surge 作为网关</strong>，再<strong>设备重新连接或者关闭路由器 <code>wifi</code> 再打开</strong>即可。</p>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 软件分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Surge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCSA认证考试-附加题</title>
      <link href="/2024/09/26/RHCSA%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95-%E9%99%84%E5%8A%A0%E9%A2%98/"/>
      <url>/2024/09/26/RHCSA%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95-%E9%99%84%E5%8A%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="创建归档文件"><a href="#创建归档文件" class="headerlink" title="创建归档文件"></a>创建归档文件</h3><p>创建一个名为 <code>/root/backup.tar.bz2</code> 的 <code>tar</code> 存档，其应包含 <code>/usr/local</code> 的内容。该 <code>tar</code> 存档必须使用<code>bzip2</code> 进行压缩。</p><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# tar jcvf /root/backup.tar.bz2 /usr/local/</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# file backup.tar.bz2</span><br><span class="line"></span><br><span class="line">backup.tar.bz2: bzip2 compressed data, block size = 900k</span><br></pre></td></tr></table></figure><h3 id="设置sudo免密"><a href="#设置sudo免密" class="headerlink" title="设置sudo免密"></a>设置sudo免密</h3><p>允许<code>sysmgrs</code>组所有成员使用<code>sudo</code>时不需要密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# vim /etc/sudoers</span><br><span class="line"></span><br><span class="line">110 <span class="comment"># %wheel ALL=(ALL) NOPASSWD: ALL</span></span><br><span class="line"></span><br><span class="line">111 %sysmgrs ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line">[root@mars ~]# su - natasha</span><br><span class="line"></span><br><span class="line">[natasha@mars ~]$ <span class="built_in">touch</span> /test1</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span>: cannot <span class="built_in">touch</span> <span class="string">&#x27;/test1&#x27;</span>: Permission denied</span><br><span class="line"></span><br><span class="line">[natasha@mars ~]$ <span class="built_in">sudo</span> <span class="built_in">touch</span> /test</span><br><span class="line"></span><br><span class="line">[natasha@mars ~]$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="配置创建新用户的密码测试"><a href="#配置创建新用户的密码测试" class="headerlink" title="配置创建新用户的密码测试"></a>配置创建新用户的密码测试</h3><p>创建新用户时，默认密码策略为<code>20</code>天后，密码会过期</p><h4 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# grep MAX /etc/login.defs</span><br><span class="line"></span><br><span class="line">\# PASS_MAX_DAYS Maximum number of days a password may be used.</span><br><span class="line"></span><br><span class="line">PASS_MAX_DAYS 99999</span><br><span class="line"></span><br><span class="line">UID_MAX 60000</span><br><span class="line"></span><br><span class="line">SYS_UID_MAX 999</span><br><span class="line"></span><br><span class="line">GID_MAX 60000</span><br><span class="line"></span><br><span class="line">SYS_GID_MAX 999</span><br><span class="line"></span><br><span class="line">[root@mars ~]# vim /etc/login.defs</span><br><span class="line"></span><br><span class="line">PASS_MAX_DAYS 20</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>本题主要靠密码策略修改是编辑 <code>/etc/login.defs</code></li></ul><h3 id="创建shell脚本"><a href="#创建shell脚本" class="headerlink" title="创建shell脚本"></a>创建shell脚本</h3><ul><li><p>创建一个名为 <code>myshell</code> 的脚本</p></li><li><p>该脚本放置在 <code>/usr/local/bin</code> 下</p></li><li><p>该脚本用于查找 /usr 下所有大小在<code>50K~10m</code> 之间且具有修改组 <code>ID</code>权限的文件，将这些文件放置于<code>/root/myfiles</code>下</p></li></ul><h4 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">mkdir</span> /root/myfiles</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">cat</span> myshell.sh</span><br><span class="line"></span><br><span class="line">\#!/bin/bash</span><br><span class="line"></span><br><span class="line">find /usr -<span class="built_in">type</span> f -and -size -10M -and -size +50k -and -size -10M -and -perm</span><br><span class="line"></span><br><span class="line">-2000 -<span class="built_in">exec</span> <span class="built_in">cp</span> -a &#123;&#125; /root/myfiles \;</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">cp</span> myshell.sh /usr/local/bin/</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">chmod</span> +x /usr/local/bin/myshell.sh</span><br><span class="line"></span><br><span class="line">[root@mars ~]# sh /usr/local/bin/myshell.sh</span><br><span class="line"></span><br><span class="line">[root@mars ~]# ll /root/myfiles/</span><br><span class="line"></span><br><span class="line">total 464</span><br><span class="line"></span><br><span class="line">-r-xr-sr-x. 1 root ssh_keys 474528 Nov 26 2018 ssh-keysign</span><br></pre></td></tr></table></figure><h3 id="欢迎语"><a href="#欢迎语" class="headerlink" title="欢迎语"></a>欢迎语</h3><p>登录到普通用户后提示一句欢迎语<code>&#39;hello word !&#39;</code>或者用户在登陆前显示欢迎语提示:</p><h4 id="解题-3"><a href="#解题-3" class="headerlink" title="解题"></a>解题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span> &gt;&gt; /etc/motd</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span> &gt;&gt; /etc/issue</span><br><span class="line"></span><br><span class="line"><span class="comment">##登录测试</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="设置用户默认创建文件UMASK"><a href="#设置用户默认创建文件UMASK" class="headerlink" title="设置用户默认创建文件UMASK"></a>设置用户默认创建文件UMASK</h3><p>用户<code>natasha</code>默认创建文件权限为<code>r--r--r--</code>默认创建的目录为<code>r-xr-xr-x</code></p><h4 id="解题-4"><a href="#解题-4" class="headerlink" title="解题"></a>解题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# su - natasha</span><br><span class="line"></span><br><span class="line">把<span class="built_in">umask</span>写进用户家目录下的bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;umask 222&#x27;</span>&gt;&gt;.bashrc</span><br><span class="line">[natasha@mars ~]$ <span class="built_in">source</span> .bashrc</span><br><span class="line">[natasha@mars ~]$ <span class="built_in">umask</span></span><br><span class="line">0222</span><br><span class="line">[natasha@mars ~]$ <span class="built_in">touch</span> test1</span><br><span class="line">[natasha@mars ~]$ <span class="built_in">mkdir</span> test2</span><br><span class="line">[natasha@mars ~]$ ll</span><br><span class="line">total 0</span><br><span class="line">-r--r--r--. 1 natasha natasha 0 Dec 21 03:10 test1</span><br><span class="line">dr-xr-xr-x. 2 natasha natasha 6 Dec 21 03:10 test2</span><br><span class="line">[natasha@mars ~]$ <span class="built_in">exit</span></span><br><span class="line"><span class="comment">##umask</span></span><br><span class="line"><span class="comment">#umask是屏蔽的意思，权限的数值取反</span></span><br><span class="line"><span class="comment">#222 对应目录的权限是555，对应文件的权限是444 （文件默认不给可执行权限）</span></span><br></pre></td></tr></table></figure><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><p><code>umask</code>是屏蔽的意思，权限的数值取反</p></li><li><p><code>222</code> 对应目录的权限是<code>555</code>，对应文件的权限是<code>444</code> （<code>文件默认不给可执行权限</code>）</p></li></ul><h3 id="生成环境变量"><a href="#生成环境变量" class="headerlink" title="生成环境变量"></a>生成环境变量</h3><ul><li><p>生成一个环境变量<code>rhcsa</code>，用户在使用这个变量时输出一句话<code>&quot;This is RHCSA!&quot;</code></p></li><li><p>自定义一个命令<code>rhce</code>，用户在使用这个变量时输出一句话<code>&quot;This is RHCE!&quot;</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1) 自定义变量</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用export生成环境变量，并写进用户家目录下的bashrc</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="string">&#x27;export rhcsa=&quot;echo This is RHCSA!&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">source</span> .bashrc</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="variable">$rhcsa</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> This is RHCSA!</span><br><span class="line"></span><br><span class="line">2) 自定义命令</span><br><span class="line"></span><br><span class="line">[root@mars ~]# vim /usr/local/bin/rhce</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is RHCE!&quot;</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">chmod</span> +x /usr/local/bin/rhce</span><br><span class="line"></span><br><span class="line">[root@mars ~]# rhce</span><br><span class="line"></span><br><span class="line">This is RHCE!</span><br></pre></td></tr></table></figure><h3 id="配置容器使其自动启动"><a href="#配置容器使其自动启动" class="headerlink" title="配置容器使其自动启动"></a>配置容器使其自动启动</h3><ul><li><p>利用注册表服务器上的 <code>rsyslog</code> 镜像，创建一个名为 <code>journal-server</code> 的容器</p></li><li><p>面向 <code>tom</code>用户，配置一个 <code>systemd</code> 服务</p></li><li><p>该服务命名为 <code>container-journal-server</code> ，并在系统重启时自动启动，无需干预</p></li></ul><h4 id="解题-5"><a href="#解题-5" class="headerlink" title="解题"></a>解题</h4><h3 id="为容器配置持久存储"><a href="#为容器配置持久存储" class="headerlink" title="为容器配置持久存储"></a>为容器配置持久存储</h3><p>通过以下方式扩展上一个任务的服务：</p><p>配置主机系统的 <code>journald</code> 日志以在系统重启后保留数据，并重新启动日志记录服务</p><p>将主机 <code>/var/log/journal</code> 目录下任何以 <code>*.journal</code> 的文件复制到 <code>/home/tom/container_logfile</code> 中</p><p>将服务配置为在启动时自动将 <code>/home/tom/container_logfile</code> 挂载到容器中的 <code>/var/log/journal 下</code></p><h4 id="解题-6"><a href="#解题-6" class="headerlink" title="解题"></a>解题</h4>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 考试认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cgroups资源限制</title>
      <link href="/2023/12/29/Cgroups%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/"/>
      <url>/2023/12/29/Cgroups%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Cgroups介绍"><a href="#一、Cgroups介绍" class="headerlink" title="一、Cgroups介绍"></a>一、Cgroups介绍</h2><h3 id="Cgroups是什么？"><a href="#Cgroups是什么？" class="headerlink" title="Cgroups是什么？"></a>Cgroups是什么？</h3><blockquote><p>Cgroups是control groups的缩写，是Linux内核提供的一种可以限制、记录、隔离进程组（process groups）所使用的物理资源（如：cpu,memory,IO等等）的机制。最初由google的工程师提出，后来被整合进Linux内核。Cgroups也是LXC为实现虚拟化所使用的资源管理手段，可以说没有cgroups就没有LXC。</p></blockquote><h3 id="Cgroups可以做什么？"><a href="#Cgroups可以做什么？" class="headerlink" title="Cgroups可以做什么？"></a>Cgroups可以做什么？</h3><p><code>Cgroups</code>最初的目标是为资源管理提供的一个统一的框架，既整合现有的cpuset等子系统，也为未来开发新的子系统提供接口。现在的cgroups适用于多种应用场景，从单个进程的资源控制，到实现操作系统层次的虚拟化<code>（OS Level Virtualization）</code>。<code>Cgroups</code>提供了一下功能：</p><ul><li>限制进程组可以使用的资源数量（Resource limiting ）。比如：memory子系统可以为进程组设定一个memory使用上限，一旦进程组使用的内存达到限额再申请内存，就会出发OOM（out of memory）。</li><li>进程组的优先级控制（Prioritization ）。比如：可以使用cpu子系统为某个进程组分配特定cpu share。</li><li>记录进程组使用的资源数量（Accounting ）。比如：可以使用cpuacct子系统记录某个进程组使用的cpu时间</li><li>进程组隔离（Isolation）。比如：使用ns子系统可以使不同的进程组使用不同的namespace，以达到隔离的目的，不同的进程组有各自的进程、网络、文件系统挂载空间。</li><li>进程组控制（Control）。比如：使用freezer子系统可以将进程组挂起和恢复。</li></ul><h3 id="Cgroups相关概念及其关系"><a href="#Cgroups相关概念及其关系" class="headerlink" title="Cgroups相关概念及其关系"></a>Cgroups相关概念及其关系</h3><h4 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h4><ul><li>任务（task）。在cgroups中，任务就是系统的一个进程。</li><li>控制族群（control group）。控制族群就是一组按照某种标准划分的进程。Cgroups中的资源控制都是以控制族群为单位实现。一个进程可以加入到某个控制族群，也从一个进程组迁移到另一个控制族群。一个进程组的进程可以使用cgroups以控制族群为单位分配的资源，同时受到cgroups以控制族群为单位设定的限制。</li><li>层级（hierarchy）。控制族群可以组织成hierarchical的形式，既一颗控制族群树。控制族群树上的子节点控制族群是父节点控制族群的孩子，继承父控制族群的特定的属性。</li><li>子系统（subsytem）。一个子系统就是一个资源控制器，比如cpu子系统就是控制cpu时间分配的一个控制器。子系统必须附加（attach）到一个层级上才能起作用，一个子系统附加到某个层级以后，这个层级上的所有控制族群都受到这个子系统的控制。</li></ul><h4 id="相互关系"><a href="#相互关系" class="headerlink" title="相互关系"></a>相互关系</h4><ul><li>每次在系统中创建新层级时，该系统中的所有任务都是那个层级的默认 cgroup（我们称之为 root cgroup ，此cgroup在创建层级时自动创建，后面在该层级中创建的cgroup都是此cgroup的后代）的初始成员。</li><li>一个子系统最多只能附加到一个层级。</li><li>一个层级可以附加多个子系统</li><li>一个任务可以是多个cgroup的成员，但是这些cgroup必须在不同的层级。</li><li>系统中的进程（任务）创建子进程（任务）时，该子任务自动成为其父进程所在 cgroup 的成员。然后可根据需要将该子任务移动到不同的 cgroup 中，但开始时它总是继承其父任务的cgroup。</li></ul><h2 id="二、Cgroups子系统介绍"><a href="#二、Cgroups子系统介绍" class="headerlink" title="二、Cgroups子系统介绍"></a>二、Cgroups子系统介绍</h2><ul><li>blkio 这个子系统为块设备设定输入/输出限制，比如物理设备（磁盘，固态硬盘，USB 等等）。</li><li>cpu 这个子系统使用调度程序提供对 CPU 的 cgroup 任务访问。</li><li>cpuacct 这个子系统自动生成 cgroup 中任务所使用的 CPU 报告。</li><li>cpuset 这个子系统为 cgroup 中的任务分配独立 CPU（在多核系统）和内存节点。</li><li>devices 这个子系统可允许或者拒绝 cgroup 中的任务访问设备。</li><li>freezer 这个子系统挂起或者恢复 cgroup 中的任务。</li><li>memory 这个子系统设定 cgroup 中任务使用的内存限制，并自动生成由那些任务使用的内存资源报告。</li><li>net_cls 这个子系统使用等级识别符（classid）标记网络数据包，可允许 Linux 流量控制程序（tc）识别从具体 cgroup 中生成的数据包。<br>ns 名称空间子系统。</li></ul><h4 id="理解三句话"><a href="#理解三句话" class="headerlink" title="理解三句话"></a><strong>理解三句话</strong></h4><ul><li>任何单一子系统最多可以附加到一个层级。</li><li>单一层级可以被附加一个或多个子系统 比如:cpuset cpu memory 附加到cpu_and_memory层</li><li>每次创建新的层级时，该系统中的所有进程都是那个层级的默认CGroup的初始成员。对于创建的任何单一层级，该系统中的每个进程都可以是那个层级中唯一一个CGroup的成员。单一进程可以在多个CGroup中时，只要保证每个CGroup不在相同层级中即可。当在同一级冲突时，进程作为第二个CGroup的成员，会将自己从第一个CGroup中删除</li></ul><h2 id="三、cgroups安装"><a href="#三、cgroups安装" class="headerlink" title="三、cgroups安装"></a>三、cgroups安装</h2><h4 id="安装cgroup"><a href="#安装cgroup" class="headerlink" title="安装cgroup"></a>安装cgroup</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum -y install libcgroup</span><br></pre></td></tr></table></figure><h4 id="启动前查看cgroup分层挂载"><a href="#启动前查看cgroup分层挂载" class="headerlink" title="启动前查看cgroup分层挂载"></a>启动前查看cgroup分层挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# lssubsys           <span class="comment">#显示为空</span></span><br></pre></td></tr></table></figure><h4 id="启动cgroup"><a href="#启动cgroup" class="headerlink" title="启动cgroup"></a>启动cgroup</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# /etc/init.d/cgconfig start</span><br><span class="line">Starting cgconfig service:                                 [确定]</span><br></pre></td></tr></table></figure><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动成功后再次执行</span></span><br><span class="line">[root@localhost ~]# lssubsys</span><br><span class="line">cpuset</span><br><span class="line">cpu</span><br><span class="line">cpuacct</span><br><span class="line">memory</span><br><span class="line">devices</span><br><span class="line">freezer</span><br><span class="line">net_cls</span><br><span class="line">blkio</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看挂载情况</span></span><br><span class="line">[root@localhost ~]# lssubsys -am   显示挂载情况</span><br><span class="line">ns</span><br><span class="line">perf_event</span><br><span class="line">net_prio</span><br><span class="line">cpuset /cgroup/cpuset</span><br><span class="line">cpu /cgroup/cpu</span><br><span class="line">cpuacct /cgroup/cpuacct</span><br><span class="line">memory /cgroup/memory</span><br><span class="line">devices /cgroup/devices</span><br><span class="line">freezer /cgroup/freezer</span><br><span class="line">net_cls /cgroup/net_cls</span><br><span class="line">blkio /cgroup/blkio</span><br><span class="line"></span><br><span class="line"><span class="comment">#cgroup 目录不在为空</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /cgroup/</span><br><span class="line">blkio  cpu  cpuacct  cpuset  devices  freezer  memory  net_cls</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/cgconfig.conf   定义挂载子系统</span><br></pre></td></tr></table></figure><h2 id="三、限制进程资源使用"><a href="#三、限制进程资源使用" class="headerlink" title="三、限制进程资源使用"></a>三、限制进程资源使用</h2><h3 id="1、cgroup分组管理"><a href="#1、cgroup分组管理" class="headerlink" title="1、cgroup分组管理"></a>1、cgroup分组管理</h3><h4 id="新建分组"><a href="#新建分组" class="headerlink" title="新建分组"></a><strong>新建分组</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /cgroup/cpu/baism_test</span><br><span class="line">or</span><br><span class="line">[root@localhost opt]# cgcreate -g memory:/baism_test 使用命令创建 在内存分组下创建一个分组 baism_test</span><br></pre></td></tr></table></figure><h4 id="删除分组"><a href="#删除分组" class="headerlink" title="删除分组"></a><strong>删除分组</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]# cgdelete -r cpu:/baism_test 删除分组 cpu/baism_test</span><br></pre></td></tr></table></figure><h3 id="2、设置分组资源应用阈值"><a href="#2、设置分组资源应用阈值" class="headerlink" title="2、设置分组资源应用阈值"></a>2、设置分组资源应用阈值</h3><h4 id="2-1、限制一个进程使用cpu"><a href="#2-1、限制一个进程使用cpu" class="headerlink" title="2.1、限制一个进程使用cpu"></a>2.1、限制一个进程使用cpu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]# <span class="built_in">echo</span> 50000 &gt; /cgroup/cpu/baism_test/cpu.cfs_quota_us    设置进程使用CPU的百分比是50%</span><br></pre></td></tr></table></figure><p><strong>验证CPU设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一</span></span><br><span class="line">创建一个跑CPU的进程 use_cpu.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">x=0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;current_process_number is : $$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ True ];<span class="keyword">do</span></span><br><span class="line">    x=<span class="variable">$x</span>+1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">将该进程的进程号加入资源分组baism_test</span><br><span class="line">[root@localhost cgroup]# <span class="built_in">echo</span> 5398 &gt; /cgroup/cpu/baism_test/tasks     将运行的程序的进程号输入到task中就行   </span><br><span class="line"></span><br><span class="line"><span class="comment">#通过TOP查看进程使用CPU在合理范围内 结束程序后 进程从tasks中消失</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二 </span></span><br><span class="line">使用cgexec命令对新启动的程序设置 限制</span><br><span class="line">[root@localhost opt]# cgexec -g cpu:/baism_test /opt/use_cpu.sh</span><br></pre></td></tr></table></figure><h4 id="2-2、限制一个程序使用内存-最大1M-1048676字节"><a href="#2-2、限制一个程序使用内存-最大1M-1048676字节" class="headerlink" title="2.2、限制一个程序使用内存 最大1M 1048676字节"></a>2.2、限制一个程序使用内存 最大1M 1048676字节</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost cgroup]# <span class="built_in">echo</span> 1048576 &gt; memory/baism_test/memory.limit_in_bytes</span><br></pre></td></tr></table></figure><p><strong>验证内存限制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##将进程号加入资源分组</span></span><br><span class="line">[root@localhost cgroup]# <span class="built_in">echo</span> 5584 &gt; memory/baism_test/tasks</span><br><span class="line">or</span><br><span class="line">开启任务的时候直接加入资源分组</span><br><span class="line">[root@localhost opt]# cgexec -g memory:/baism_test /opt/use_memory.sh</span><br><span class="line"></span><br><span class="line">可以看出 程序使用到最大的时候 就会被Kill掉</span><br><span class="line">测试的时候  先运行程序在运行限制  就不会上来就是杀死状态了</span><br></pre></td></tr></table></figure><h4 id="2-3、限制进程对IO的使用-限制读为1M"><a href="#2-3、限制进程对IO的使用-限制读为1M" class="headerlink" title="2.3、限制进程对IO的使用 限制读为1M"></a>2.3、限制进程对IO的使用 限制读为1M</h4><h5 id="设置资源分组IO的限制"><a href="#设置资源分组IO的限制" class="headerlink" title="设置资源分组IO的限制"></a>设置资源分组IO的限制</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]# cgcreate -g blkio:/baism_test</span><br><span class="line">[root@localhost opt]# <span class="built_in">echo</span> <span class="string">&#x27;8:0 1048676&#x27;</span> &gt; /cgroup/blkio/baism_test/blkio.throttle.read_bps_device</span><br></pre></td></tr></table></figure><h5 id="验证IO限制"><a href="#验证IO限制" class="headerlink" title="验证IO限制"></a><strong>验证IO限制</strong></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]#  <span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda of=/dev/null &amp;</span><br><span class="line">[1] 5615</span><br><span class="line">[root@localhost opt]# <span class="built_in">echo</span> 5615 &gt; /cgroup/blkio/baism_test/tasks</span><br><span class="line">[root@localhost opt]#</span><br><span class="line"></span><br><span class="line">通过iotop可以看出 读取下降到了1M</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cgroups </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全基线-腾讯安全标准</title>
      <link href="/2023/12/21/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF-%E8%85%BE%E8%AE%AF%E5%AE%89%E5%85%A8%E6%A0%87%E5%87%86/"/>
      <url>/2023/12/21/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF-%E8%85%BE%E8%AE%AF%E5%AE%89%E5%85%A8%E6%A0%87%E5%87%86/</url>
      
        <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>检测项</th><th>检测项描述</th><th>处理建议</th><th>检测规则</th><th>威胁等级</th></tr></thead><tbody><tr><td>Nginx未禁用隐藏文件</td><td>禁用隐藏文件是一种深度防御机制，有助于防止意外泄露敏感信息。</td><td>编辑nginx配置文件，添加以下配置：                                                    location ~ /. {        deny all;      }</td><td>Nginx安全基线检查</td><td>中危</td></tr><tr><td>MongoDB服务以root用户运行</td><td>MongoDB服务不应使用root账户运行，以减少系统风险。</td><td>创建执行MongoDB数据库活动的                                                                        专用用户（一般为mongodb），                                                                       并以此专用用户运行MongoDB服务。</td><td>MongoDB安全基线检查</td><td>中危</td></tr><tr><td>MongoDB 未禁用systemLog.quiet配置</td><td>Run mongos or mongod in a quiet mode thatattempts to limit the amount of output. systemLog.quiet is not recommended for production systems as it may make tracking problems during particular connections much more difficult.</td><td>在mongodb配置中不要配置                                                     systemLog.quiet选项</td><td>MongoDB安全基线检查</td><td>中危</td></tr><tr><td>MongoDB 未配置新日志追加策略</td><td>When true, mongosor mongod appends new entries to the end of the existing log file when the mongos or mongod instance restarts. Without this option, mongod will back up the existing log and create a new file.</td><td>在MongoDB配置中设置                                                    systemLog.logAppend为true</td><td>MongoDB安全基线检查</td><td>中危</td></tr><tr><td>网站目录存在备份文件</td><td>网站目录下存在压缩过的备份文件，如果被猜测到文件名可以导致网站源代码泄露，可能会导致网站被入侵。</td><td>删除备份文件。</td><td>信息泄露基线检查</td><td>高危</td></tr><tr><td>JetBrains .idea 目录泄露风险</td><td>JetBrains 会创建 .idea 目录，其目录下的文件泄露了项目结构，可能会造成信息泄露后果。</td><td>移除 .idea 目录</td><td>信息泄露基线检查</td><td>中危</td></tr><tr><td>Web 目录存在 phpinfo 文件</td><td>Web 目录下存在 phpinfo()，可能会导致部分敏感信息泄露。</td><td>如果必要，根据漏洞描述，删除对应文件。</td><td>信息泄露基线检查</td><td>低危</td></tr><tr><td>Web 目录存在 .svn 文件夹导致信息泄露</td><td>Web 目录下存在 .svn 文件夹，可以导致源代码泄漏、敏感信息泄漏等风险，可能会导致服务器被入侵等严重后果。</td><td>删除 .svn 目录，或者修改 Web 配置文件（不推荐）</td><td>信息泄露基线检查</td><td>中危</td></tr><tr><td>Web 目录存在 .git 文件夹导致信息泄露</td><td>Web 目录下存在 .git 文件夹，可以导致源代码泄漏、敏感信息泄漏等风险，可能会导致服务器被入侵等严重后果。</td><td>删除 .git 目录，或者修改 Web 配置文件（不推荐）</td><td>信息泄露基线检查</td><td>中危</td></tr><tr><td>启用authpriv和cron系统日志审计</td><td>启用authpriv和cron系统日志审计。 authpriv －包括特权信息如用户名在内的认证活动 cron －与 cron 和 at 有关的计划任务信息</td><td>1.  修改/etc/rsyslog.conf，添加或取消注释                                                                 如下配置                      （中间的分隔符是tab）：                                                                                      authpriv.<em>  /var/log/secure                                                                                          cron.</em>   /var/log/cron                                                                                          2. 重启rsyslog服务</td><td>Linux安全基线检查</td><td>中危</td></tr><tr><td>未限制Nginx账户登录系统</td><td>nginx帐户不应该具有登录的能力，防止nginx账户被恶意利用。</td><td>修改/etc/passwd配置文件中nginx用户的                                                               登录Shell字段，                                 设置为：     /usr/sbin/nologin（debian，ubuntu）         /sbin/nologin（centos）</td><td>Nginx安全基线检查</td><td>中危</td></tr><tr><td>Linux存在UID为0的非root用户</td><td>存在UID为0的非root用户，账号权限过大，容易被非法利用。 一般情况下除root账户外无其他管理员权限帐户。</td><td>删除root以外的UID为0的用户。</td><td>Linux安全基线检查</td><td>高危</td></tr><tr><td>限制root权限用户远程登录</td><td>限制root权限远程登录。先以普通权限用户远程登录后，再切换到超级管理员权限账号后执行相应操作，可以提升系统安全性。</td><td>1.  修改文件/etc/ssh/sshd_config配置                                                             PermitRootLogin no                                                                                             2. 重启sshd服务</td><td>Linux安全基线检查</td><td>中危</td></tr><tr><td>sudo 无密码用户检测</td><td>列出无需密码即可执行 sudo 的用户。</td><td>应避免给予不必要的账号 sudo 权限，                                                                 如正常情况可忽略此漏洞。</td><td>Linux安全基线检查</td><td>低危</td></tr><tr><td>SSH监听在默认端口</td><td>SSH监听在默认的22端口容易受到暴力破解攻击，修改为非默认端口可以提高系统的安全性</td><td>修改/etc/ssh/sshd_config配置文件中的                                                         端口字段配置（Port字段），并重启服务。</td><td>Linux安全基线检查</td><td>低危</td></tr><tr><td>系统日志文件限制用户可写权限</td><td>系统日志文件应限制写权限用户范围</td><td>修改以下日志权限为仅所属用户可写：                                                 /var/log/messages                                                                               /var/log/syslog      /var/log/secure                                                       /var/log/auth.log     /var/log/maillog                                                /var/log/cron     /var/log/spooler                                            /var/log/boot.log     /var/log/kern.log</td><td>Linux安全基线检查</td><td>中危</td></tr><tr><td>SSH使用不安全的SSH V1协议</td><td>SSH2用数字签名算法（DSA）和Diffie-Hellman（DH）算法代替RSA来完成对称密钥的交换，用消息证实代码（HMAC）来代替SSH使用的CRC。同时SSH2增加了AES和Twofish等对称加密算法。SSH2比SSH1更加安全。</td><td>修改/etc/ssh/sshd_config配置文件中的                                                             协议字段配置为：     Protocol 2                                                                         并重启服务。</td><td>Linux安全基线检查</td><td>中危</td></tr><tr><td>SSH使用不安全的rsh协议</td><td>“””IgnoreRhosts””设置验证的时候是否使用””rhosts””和””shosts””文件。SSH需要禁用不安全的 RSH 连接。”</td><td>修改/etc/ssh/sshd_config配置文件中的                                         IgnoreRhosts字段配置为：                                                                                  IgnoreRhosts yes     并重启服务。</td><td>Linux安全基线检查</td><td>低危</td></tr><tr><td>Nginx目录及文件权限配置不当</td><td>nginx目录及文件的所有者和所属组应为root</td><td>设置nginx配置文件目录的用户和用户组为root</td><td>Nginx安全基线检查</td><td>中危</td></tr><tr><td>Nginx server_tokens基线</td><td>server_tokens指令负责在错误页面和ServerHTTP响应头字段中显示NGINX版本号和操作系统版本。 不应显示此信息。</td><td>在nginx配置文件中配置 server_tokens off;</td><td>Nginx安全基线检查</td><td>中危</td></tr><tr><td>Linux口令过期后账号最长有效天数策略</td><td>设置口令过期后账号仍能保持有效的最大天数。</td><td>编辑/etc/default/useradd文件，配置：                                                            INACTIVE=365</td><td>Linux安全基线检查</td><td>中危</td></tr><tr><td>Nginx未禁用autoindex功能</td><td>Nginx autoindex模块用于配置Nginx的目录浏览功能。 Nginx默认是不允许列出整个目录，开启目录浏览可能会导致信息泄露。</td><td>去除Nginx中autoindex的相关配置。</td><td>Nginx安全基线检查</td><td>中危</td></tr><tr><td>Linux帐户口令生存期策略</td><td>口令老化（Password aging）是一种增强的系统口令生命期认证机制，能够确保用户的口令定期更换，提高系统安全性。</td><td>修改文件/etc/login.defs，配置                                                                   PASS_MAX_DAYS 90</td><td>Linux安全基线检查</td><td>中危</td></tr><tr><td>Linux帐户口令最小修改间隔策略</td><td>帐户口令最小修改间隔策略表示自从上次密码修改以来多少天后用户才被允许修改口令。</td><td>修改文件/etc/login.defs，配置                                                  PASS_MIN_DAYS 7</td><td>Linux安全基线检查</td><td>低危</td></tr><tr><td>SSH未禁用基于主机的身份验证</td><td>HostbasedAuthentication选项用于配置是否允许使用/etc/hosts.equiv和公钥实现基于主机的身份验证。</td><td>修改/etc/ssh/sshd_config配置文件中的                         HostbasedAuthentication字段配置为：     HostbasedAuthentication no     并重启服务。</td><td>Linux安全基线检查</td><td>低危</td></tr><tr><td>MongoDB未禁用本地主机身份验证绕过</td><td>The localhost exception allows you to enable access control and then create the first user in the system. With the localhost exception, after you enable access control, connect to the localhost interface and create the first user in the admin database. The first user must have privileges to create other users, such as a user with the userAdmin or userAdminAnyDatabase role.</td><td>Create an  administrative user, or                                                                               Disable the localhost exception at startup.                                                    To disable the  localhostexception, set the enableLocalhostAuthBypass parameter to 0.</td><td>MongoDB安全基线检查</td><td>中危</td></tr><tr><td>Windows 隐藏账户检测</td><td>Windows 账户名以 $ 结尾时，不会显示在 net user 里，一般此类账户为攻击者所添加（也有正常的情况）。</td><td>建议用户自行排查是否是正常情况，                                                                   具体排查和删除方式可参考                                                                                    blog.csdn.net/a956163985/article/details/50112187</td><td>Windows安全基线检查</td><td>中危</td></tr><tr><td>Windows 影子账户检测</td><td>Windows 通过修改注册表可以添加影子账户，此账户常用与作为后门，可能为攻击者恶意添加。</td><td>编辑注册表，遍历HKEY_LOCAL_MACHNE\SAM\SAM\Domains\  Account\user\Names下的用户，查找检测出来                影子账户，删除即可。</td><td>Windows安全基线检查</td><td>中危</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 安全运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全基线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源码编译Zabbix 6  HA高可用部署</title>
      <link href="/2023/12/13/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91Zabbix%206%20%20HA%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/12/13/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91Zabbix%206%20%20HA%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Zabbix-HA概述"><a href="#Zabbix-HA概述" class="headerlink" title="Zabbix HA概述"></a>Zabbix HA概述</h1><p><code>Zabbix HA</code>解决方案由多个<code>zabbix_zabbix-mysql</code>实例或节点组成。每个节点独立配置，但数据库是使用同一个实例。</p><p>Zabbix HA节点包括以下几种状态：</p><ul><li><code>active</code>（活动）</li><li><code>standby</code>（备用）</li><li><code>unavailable</code>（不可用）</li><li><code>stopped</code>（停止）</li></ul><p>在同一个<code>Zabbix HA</code>集群中，只有一个实例或节点处于<code>active</code>（活动）状态，<code>standby</code>（备用）节点不进行数据收集、处理或其他任务，并且不监听端口，并保持一个最少的数据库连接。</p><p><code>Zabbix 6.0 LTS</code> 是第一个在这个流行的监控工具中包含备受期待的本机高可用性的主要版本。</p><p>详细的官方文档说明大家可以参考：<a href="https://www.zabbix.com/documentation/current/en/manual/concepts/zabbix-mysql/ha">官方HA介绍</a></p><h1 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><div class="table-container"><table><thead><tr><th>主机名</th><th><code>IP地址</code></th><th>系统版本</th><th>安装方式</th><th>软件</th></tr></thead><tbody><tr><td><code>zabbix-server01</code></td><td><code>192.168.40.106</code></td><td><code>6.0 LTS</code></td><td><code>源码</code></td><td><code>Zabbix、PHP、Nginx</code></td></tr><tr><td><code>zabbix-server02</code></td><td><code>192.168.40.107</code></td><td><code>6.0 LTS</code></td><td><code>源码</code></td><td><code>Zabbix、PHP、Nginx</code></td></tr><tr><td><code>zabbix-server03</code></td><td><code>192.168.40.108</code></td><td><code>6.0 LTS</code></td><td><code>源码</code></td><td><code>Zabbix、PHP、Nginx</code></td></tr><tr><td><code>zabbix-mysql</code></td><td><code>192.168.40.104</code></td><td><code>8.0</code></td><td><code>YUM</code></td><td><code>MySQL</code></td></tr></tbody></table></div><h3 id="免密认证"><a href="#免密认证" class="headerlink" title="免密认证"></a>免密认证</h3><ul><li><code>Zabbix-server01</code>实现免密认证另外2台节点</li></ul><h3 id="组件部署"><a href="#组件部署" class="headerlink" title="组件部署"></a>组件部署</h3><h2 id="编译安装Zabbix"><a href="#编译安装Zabbix" class="headerlink" title="编译安装Zabbix"></a>编译安装Zabbix</h2>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> HA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux分区之EXT2,EXT3,EXT4,XFS</title>
      <link href="/2023/12/13/Linux%E5%88%86%E5%8C%BA%E4%B9%8BEXT2,EXT3,EXT4,XFS/"/>
      <url>/2023/12/13/Linux%E5%88%86%E5%8C%BA%E4%B9%8BEXT2,EXT3,EXT4,XFS/</url>
      
        <content type="html"><![CDATA[<blockquote><p>当涉及到Linux系统上的文件系统时，<code>EXT2</code>、<code>EXT3</code>、<code>EXT4</code>和<code>XFS</code>是一些常见的选择</p></blockquote><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h3 id="EXT2（第二扩展文件系统）"><a href="#EXT2（第二扩展文件系统）" class="headerlink" title="EXT2（第二扩展文件系统）"></a>EXT2（第二扩展文件系统）</h3><ul><li>EXT2是Linux上最早的可靠文件系统之一，它是EXT文件系统的第一个版本。</li><li>它采用了较简单的设计，支持文件和目录，并提供基本的权限和属性。</li><li>EXT2没有日志功能，这意味着在系统崩溃后，可能需要较长时间来进行文件系统检查和修复。</li><li>由于缺乏日志记录，EXT2在某些情况下可能更容易导致数据丢失或损坏。</li></ul><h3 id="EXT3（第三扩展文件系统）"><a href="#EXT3（第三扩展文件系统）" class="headerlink" title="EXT3（第三扩展文件系统）"></a>EXT3（第三扩展文件系统）</h3><ul><li>EXT3是EXT2的改进版本，引入了日志功能以提高文件系统的可靠性。</li><li>它支持文件和目录，并提供更好的性能和数据一致性。</li><li>EXT3的日志功能可以记录文件系统操作，以便在系统崩溃后快速恢复文件系统的一致性。</li><li>由于日志功能的引入，EXT3比EXT2更可靠，但相对而言性能较低。</li></ul><h3 id="EXT4（第四扩展文件系统）"><a href="#EXT4（第四扩展文件系统）" class="headerlink" title="EXT4（第四扩展文件系统）"></a>EXT4（第四扩展文件系统）</h3><ul><li>EXT4是EXT3的进一步改进和扩展，旨在提供更高的性能和可靠性。</li><li>它支持更大的文件系统和更大的文件大小，以及更快的文件系统检查和修复。</li><li>EXT4引入了更高级的数据结构和技术，如多块分配、延迟分配和快速修复。</li><li>它在处理大型文件和大量小文件时具有更好的性能，并提供更高的文件系统吞吐量。</li></ul><h3 id="XFS"><a href="#XFS" class="headerlink" title="XFS"></a>XFS</h3><ul><li><p>XFS是一种高性能的日志文件系统，最初由SGI开发，现在由Red Hat维护。</p></li><li><p>它适用于大型文件系统和高负载环境，具有优异的性能和可扩展性。</p></li><li><p>XFS支持大容量的文件和文件系统，并具有高度的并发性和快速的文件系统检查和修复能力。</p></li><li><p>它还具有先进的特性，如延迟分配、快照和在线扩展。</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>EXT2、EXT3、EXT4和XFS都是Linux系统上常见的文件系统，每个文件系统都有其适用的场景和优势。如果您需要一个简单的文件系统，可以选择EXT2。如果您需要更可靠的文件系统，可以选择EXT3或EXT4。而如果您需要高性能和可扩展性，特别是处理大型文件和高负载环境，那么XFS可能是更好的选择。</p><p>请注意，选择适合您需求的文件系统时，还应考虑其他因素，如数据安全性、备份策略和特定应用程序的要求。</p><p>这只是对EXT2、EXT3、EXT4和XFS文件系统的简要介绍。如果您需要更详细的信息，建议参考官方文档或进一步的研究。</p><p>如果您有任何其他问题，请随时提问。</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 安全运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件系统 </tag>
            
            <tag> XFS </tag>
            
            <tag> EXT2 </tag>
            
            <tag> EXT3 </tag>
            
            <tag> EXT4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全基线-未授权访问</title>
      <link href="/2023/12/11/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"/>
      <url>/2023/12/11/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>检测项</th><th>检测项描述</th><th>处理建议</th><th>检测规则</th><th>威胁等级</th></tr></thead><tbody><tr><td>Redis 基线合规检测</td><td>如果 Redis 以 root 权限启动且未授权访问，则会造成任意文件写入，最终导致命令执行漏洞。通过命令注入漏洞，黑客可以在服务器上执行任意系统命令，获取服务器权限，造成服务器敏感信息和源代码泄漏。</td><td>1. 以低权限用户权限启动 Redis；2. 如非业务需要，绑定 Redis 在 具体IP 而非 0.0.0.0；3. 删除 Redis 的 CONFIG、SAVE 等命令4. 开启 AUTH 密码验证（仍然有被利用的风险，所以不会取消安全提醒）</td><td>Redis 基线合规检测</td><td>高危</td></tr><tr><td>Kubelet 未授权访问</td><td>Kubelet 未限制访问来源且未配置任何认证，导致攻击者可以在任意 Pod 中执行任意代码。也可以造成 Pod 泄漏导致敏感信息泄漏等。</td><td>1. kubelet 监听在本地：—address=127.0.0.12. kubelet server 禁止匿名访问：—anonymous-auth=false如果已经通过防火墙等方式对端口访问进行限制，请忽略。3. 配置证书：—client-ca-file=path/to/ca，—kubelet-client-certificate，—kubelet-client-key</td><td>Kubelet 未授权访问</td><td>高危</td></tr><tr><td>Hadoop未授权访问</td><td>如果配置不当，将会导致HDFS的服务端口被黑客利用，黑客可以通过命令行操作多个目录下的数据，如进行删除操作。当前已出现黑客利用该问题备份删除数据并进行勒索的事件。</td><td>1、如无必要，关闭Hadoop Web管理页面；2、开启服务级别身份验证，如Kerberos认证；3、部署Knox、Nginx之类的反向代理系统，防止未经授权用户访问；4、设置“安全组”访问控制策略,将 Hadoop 默认开放的多个端口对公网全部禁止或限制可信任的 IP 地址才能访问相关端口。更多修复建议可以参考：<a href="https://cloud.tencent.com/developer/article/2051018">https://cloud.tencent.com/developer/article/2051018</a></td><td>Hadoop未授权访问</td><td>低危</td></tr><tr><td>MongoDB未授权访问</td><td>启动的MongoDB服务时如果不添加任何参数时,默认是没有权限验证的,黑客可以远程访问数据库，登录的用户可以通过默认端口无需密码对数据库进行增、删、改、查等任意高危操作，过去已发现黑客利用该漏洞对受影响的用户实施数据勒索。</td><td>1、建议修改默认的27017端口为其他端口，如29017 2、启动MongodDB的时候增加 —auth或者在配置文件中将auth设置为True开启鉴权，并在admin表添加管理用户                                                        3、通过bind_ip绑定服务器启动IP，避免绑定在0.0.0.0导致服务暴露在外网                                                                       4、推荐使用腾讯云文档数据库 MongoDB服务，无需担心未授权访问问题。更多修复建议可以参考<a href="https://cloud.tencent.com/developer/article/1727227">https://cloud.tencent.com/developer/article/1727227</a></td><td>MongoDB未授权访问</td><td>高危</td></tr><tr><td>Elasticsearch未授权访问</td><td>默认安装情况下，Elasticsearch会开启并监听9200端口，但是对于该端口并没有访问控制，恶意用户可以在未授权的情况下通过浏览器访问ip:9200/_nodes/stats等链接获得系统信息、以及存储的敏感数据等；在低版本(&lt;1.7.1)的ElasticSearch可直接执行系统命令，导致服务器被入侵。</td><td>1）增加验证，官方推荐并且经过认证的是shield插件，也可使用elasticsearch-http-basic，searchguard插件；2）使用Nginx搭建反向代理，通过配置Nginx实现对Elasticsearch的认证；3）如果是单台部署的Elasticsearch，9200端口不要对外开放；4）使用1.7.1以上的版本；</td><td>Elasticsearch未授权访问</td><td>高危</td></tr><tr><td>ZooKeeper 未授权访问</td><td>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。在默认安装情况下，ZooKeeper会绑定在0.0.0.0:2181，并且没有访问授权校验，会导致未授权访问问题，攻击者可以远程利用Zookeeper，通过服务器收集敏感信息或者在Zookeeper集群内进行破坏（比如：kill命令），同时能够执行所有只允许由管理员运行的命令。</td><td>1、不要把Zookeeper服务暴露在公网，可以通过iptables、安全组等方式限制访问IP。2、参考<a href="http://blog.51cto.com/aiilive/1686132添加访问控制">http://blog.51cto.com/aiilive/1686132添加访问控制</a></td><td>ZooKeeper 未授权访问</td><td>中危</td></tr><tr><td>CouchDB未授权访问</td><td>CouchDB是一个开源的面向文档的数据库管理系统，由于CouchDB可通过BRESTful JavaScript ObjectNotation (JSON) API访问，默认会开放5984端口，6984端口（ssl），默认配置不进行验证，因此任意用户均可通过API访问导致未授权访问，进而导致入侵等风险</td><td>1、指定CouchDB绑定的IP（需要重启CouchDB才能生效）；修改 /etc/couchdb/local.ini 文件中的 “bind_address = 0.0.0.0” ，将 0.0.0.0 改为 127.0.0.1 ，保存；注意：修改后只有本机才能访问CouchDB；2、设置访问密码（重启CouchDB才能生效）；在 /etc/couchdb/local.ini 中找到“[admins]”字段配置密码；3、设置WWW-Authenticate认证；</td><td>CouchDB未授权访问</td><td>高危</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 安全运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全基线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Harbor私有镜像仓库部署</title>
      <link href="/2023/12/07/Harbor%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/12/07/Harbor%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是Harbor"><a href="#什么是Harbor" class="headerlink" title="什么是Harbor?"></a>什么是Harbor?</h2><p><code>Harbor</code> 是由 <code>VMware</code> 公司中国团队为企业用户设计的 <code>Registry server</code> 开源项目，包括了权限管理 <code>(RBAC)</code>、<code>LDAP</code>、<code>审计</code>、<code>管理界面</code>、<code>自我注册</code>、<code>HA</code> 等企业必需的功能，同时针对中国用户的特点，设计镜像复制和中文支持等功能。</p><p>作为一个企业级私有 <code>Registry</code> 服务器，<code>Harbor</code> 提供了更好的性能和安全。提升用户使用 <code>Registry</code> 构建和运行环境传输镜像的效率。<code>Harbor</code> 支持安装在多个 <code>Registry</code> 节点的镜像资源复制，镜像全部保存在私有 <code>Registry</code> 中， 确保数据和知识产权在公司内部网络中管控。另外，<code>Harbor</code> 也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。</p><ul><li><strong>基于角色的访问控制</strong> - 用户与 <code>Docker</code> 镜像仓库通过 <code>“项目”</code> 进行组织管理，一个用户可以对多个镜像仓库在同一命名空间<code>（project）</code>里有不同的权限。</li><li><strong>镜像复制</strong> - 镜像可以在多个 <code>Registry</code> 实例中复制（同步）。尤其适合于负载均衡，高可用，混合云和多云的场景。</li><li><strong>图形化用户界面</strong> - 用户可以通过浏览器来浏览，检索当前 <code>Docker</code> 镜像仓库，管理项目和命名空间。</li><li><strong>AD/LDAP 支持</strong> - <code>Harbor</code> 可以集成企业内部已有的 <code>AD/LDAP</code>，用于鉴权认证管理。</li><li><strong>审计管理</strong> - 所有针对镜像仓库的操作都可以被记录追溯，用于审计管理。</li><li><strong>国际化</strong> - 已拥有英文、中文、德文、日文和俄文的本地化版本。更多的语言将会添加进来。</li><li><strong>RESTful API</strong> - <code>RESTful API</code> 提供给管理员对于 <code>Harbor</code> 更多的操控，使得与其它管理软件集成变得更容易。</li><li><strong>部署简单</strong> - 提供在线和离线两种安装工具， 也可以安装到 <code>vSphere</code> 平台 (<code>OVA 方式</code>) 虚拟设备。</li></ul><h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h2><div class="table-container"><table><thead><tr><th>名称</th><th></th></tr></thead><tbody><tr><td>系统版本</td><td><code>Centos7.9</code></td></tr><tr><td><code>IP</code>地址</td><td><code>192.168.40.101</code></td></tr><tr><td><code>Harbor</code>版本</td><td><code>1.10.3</code></td></tr><tr><td><code>Harbor</code>安装目录</td><td><code>/data/harbor</code></td></tr></tbody></table></div><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="下载docker-ce镜像源并安装"><a href="#下载docker-ce镜像源并安装" class="headerlink" title="下载docker-ce镜像源并安装"></a>下载<code>docker-ce</code>镜像源并安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载docker-ce</span></span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/ &amp;&amp; wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo </span><br><span class="line"><span class="comment">#安装docker 并设置开机自启</span></span><br><span class="line">yum install -y docker-ce &amp;&amp; systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="配置docker镜像加速"><a href="#配置docker镜像加速" class="headerlink" title="配置docker镜像加速"></a>配置<code>docker</code>镜像加速</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置阿里云镜像加速：</span></span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://du3ia00u.mirror.aliyuncs.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;live-restore&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>:<span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;<span class="string">&quot;max-size&quot;</span>:<span class="string">&quot;500m&quot;</span>, <span class="string">&quot;max-file&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;,</span><br><span class="line">  <span class="string">&quot;max-concurrent-downloads&quot;</span>: 10,</span><br><span class="line">  <span class="string">&quot;max-concurrent-uploads&quot;</span>: 5,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#使之生效并重启docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="安装Harbor私有镜像仓库"><a href="#安装Harbor私有镜像仓库" class="headerlink" title="安装Harbor私有镜像仓库"></a>安装<code>Harbor</code>私有镜像仓库</h3><blockquote><p><code>github</code>项目地址：<code>https://github.com/goharbor/harbor</code></p></blockquote><h4 id="初始化环境配置"><a href="#初始化环境配置" class="headerlink" title="初始化环境配置"></a>初始化环境配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@harbor ~]# vi /etc/hosts</span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.40.101 hub.nues.cn</span><br></pre></td></tr></table></figure><h4 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装<code>docker-compose</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用curl命令下载最新的Docker Compose二进制文件</span></span><br><span class="line"><span class="built_in">sudo</span> curl -L <span class="string">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line">这将从Docker Compose的GitHub存储库下载最新版本的二进制文件，并将其保存到/usr/local/bin/docker-compose路径下。</span><br><span class="line"><span class="comment">#授予执行权限</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment">#验证安装：</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="安装Harbor镜像仓库"><a href="#安装Harbor镜像仓库" class="headerlink" title="安装Harbor镜像仓库"></a>安装<code>Harbor</code>镜像仓库</h3><h4 id="下载HarBor离线安装包"><a href="#下载HarBor离线安装包" class="headerlink" title="下载HarBor离线安装包"></a>下载HarBor离线安装包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/goharbor/harbor/releases/download/v1.10.3/harbor-offline-installer-v1.10.3.tgz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载HarBor离线安装包</span></span><br><span class="line">wget https://github.com/goharbor/harbor/releases/download/v1.10.3/harbor-offline-installer-v1.10.3.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压harbor离线安装包</span></span><br><span class="line">tar xzvf harbor-offline-installer-v1.10.3.tgz  -C /data/</span><br><span class="line"><span class="built_in">cd</span> /data/harbor/</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改harbor配置文件</span></span><br><span class="line">vim harbor.yml</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">hostname: hub.nues.cn</span><br><span class="line">http:</span><br><span class="line">  port: 80</span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /data/harbor/cert/server.crt</span><br><span class="line">  private_key: /data/harbor/cert/server.key</span><br><span class="line">harbor_admin_password: Harbor12345</span><br><span class="line">database:</span><br><span class="line">  password: root123</span><br><span class="line">  max_idle_conns: 50</span><br><span class="line">  max_open_conns: 100</span><br><span class="line">data_volume: /data/harbor/data</span><br><span class="line">clair:</span><br><span class="line">  updaters_interval: 12</span><br><span class="line">jobservice:</span><br><span class="line">  max_job_workers: 10</span><br><span class="line">notification:</span><br><span class="line">  webhook_job_max_retry: 10</span><br><span class="line">chart:</span><br><span class="line">  absolute_url: disabled</span><br><span class="line"><span class="built_in">log</span>:</span><br><span class="line">  level: info</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">    rotate_count: 50</span><br><span class="line">    rotate_size: 200M</span><br><span class="line">    location: /var/log/harbor</span><br><span class="line">_version: 1.10.0</span><br><span class="line">proxy:</span><br><span class="line">  http_proxy:</span><br><span class="line">  https_proxy:</span><br><span class="line">  no_proxy:</span><br><span class="line">  components:</span><br><span class="line">    - core</span><br><span class="line">    - jobservice</span><br><span class="line">    - clair</span><br></pre></td></tr></table></figure><h4 id="创建harhor的https证书"><a href="#创建harhor的https证书" class="headerlink" title="创建harhor的https证书"></a>创建<code>harhor</code>的<code>https</code>证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建harbor证书以及持久化目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/harbor/&#123;data,cert&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建私有证书</span></span><br><span class="line"><span class="built_in">cd</span> /data/harbor/cert/</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成私钥</span></span><br><span class="line">openssl genrsa -des3 -out server.key 2048</span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">...............................................................+++</span><br><span class="line">......+++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line">Enter pass phrase <span class="keyword">for</span> server.key:123456</span><br><span class="line">Verifying - Enter pass phrase <span class="keyword">for</span> server.key: 123456</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建证书请求CSR</span></span><br><span class="line">openssl genrsa -des3 -out server.key 2048</span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">...............................................................+++</span><br><span class="line">......+++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line">Enter pass phrase <span class="keyword">for</span> server.key:</span><br><span class="line">Verifying - Enter pass phrase <span class="keyword">for</span> server.key:</span><br><span class="line">[root@Centos7 cert]# openssl  req -new -key server.key -out server.csr</span><br><span class="line">Enter pass phrase <span class="keyword">for</span> server.key:</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN<span class="comment"># 国家名</span></span><br><span class="line">State or Province Name (full name) []:ShangHai <span class="comment"># 省份</span></span><br><span class="line">Locality Name (eg, city) [Default City]:ShangHai <span class="comment"># 市</span></span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:nues.cn<span class="comment"># 组织</span></span><br><span class="line">Organizational Unit Name (eg, section) []:nnv5.cn   <span class="comment"># 机构</span></span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:hub.nues.cn# 完全合格域名</span></span><br><span class="line"><span class="string">Email Address []:admin@nues.cn# 管理员邮箱</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Please enter the following &#x27;</span>extra<span class="string">&#x27; attributes</span></span><br><span class="line"><span class="string">to be sent with your certificate request</span></span><br><span class="line"><span class="string">A challenge password []:# 是否改密码直接回车</span></span><br><span class="line"><span class="string">An optional company name []:# 是否改密码直接回车</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 备份私钥</span></span><br><span class="line"><span class="string">cp server.key  server.key.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#去除私钥密码</span></span><br><span class="line"><span class="string">openssl rsa -in server.key.org  -out server.key</span></span><br><span class="line"><span class="string">Enter pass phrase for server.key.org:123456# 前面设置的私钥密码</span></span><br><span class="line"><span class="string">writing RSA key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 将证书签名</span></span><br><span class="line"><span class="string">openssl  x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt</span></span><br><span class="line"><span class="string">Signature ok</span></span><br><span class="line"><span class="string">subject=/C=CN/ST=s\x08SHANGHAI/L=SHANGHAI/O=nues.cn/OU=nues.cn/CN=hub.nues.cn/emailAddress=admin@nues.cn</span></span><br><span class="line"><span class="string">Getting Private key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 将证书赋予执行权限</span></span><br><span class="line"><span class="string">chmod +x server.*</span></span><br></pre></td></tr></table></figure><h4 id="安装harbor并启动harbor服务"><a href="#安装harbor并启动harbor服务" class="headerlink" title="安装harbor并启动harbor服务"></a>安装<code>harbor</code>并启动<code>harbor</code>服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/harbor/</span><br><span class="line">./install.sh</span><br><span class="line"><span class="comment">#结果如下</span></span><br><span class="line">[root@harbor harbor]# ./install.sh </span><br><span class="line"></span><br><span class="line">[Step 0]: checking <span class="keyword">if</span> docker is installed ...</span><br><span class="line"></span><br><span class="line">Note: docker version: 24.0.7</span><br><span class="line"></span><br><span class="line">[Step 1]: checking docker-compose is installed ...</span><br><span class="line"></span><br><span class="line">Note: docker-compose version: 2.5.0</span><br><span class="line"></span><br><span class="line">[Step 2]: loading Harbor images ...</span><br><span class="line">Loaded image: goharbor/harbor-core:v1.10.3</span><br><span class="line">Loaded image: goharbor/harbor-db:v1.10.3</span><br><span class="line">Loaded image: goharbor/clair-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/harbor-registryctl:v1.10.3</span><br><span class="line">Loaded image: goharbor/redis-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/nginx-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/clair-adapter-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/harbor-log:v1.10.3</span><br><span class="line">Loaded image: goharbor/notary-server-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/notary-signer-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/harbor-migrator:v1.10.3</span><br><span class="line">Loaded image: goharbor/chartmuseum-photon:v1.10.3</span><br><span class="line">Loaded image: goharbor/prepare:v1.10.3</span><br><span class="line">Loaded image: goharbor/harbor-portal:v1.10.3</span><br><span class="line">Loaded image: goharbor/harbor-jobservice:v1.10.3</span><br><span class="line">Loaded image: goharbor/registry-photon:v1.10.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Step 3]: preparing environment ...</span><br><span class="line"></span><br><span class="line">[Step 4]: preparing harbor configs ...</span><br><span class="line">prepare base <span class="built_in">dir</span> is <span class="built_in">set</span> to /data/harbor</span><br><span class="line">Generated configuration file: /config/log/logrotate.conf</span><br><span class="line">Generated configuration file: /config/log/rsyslog_docker.conf</span><br><span class="line">Generated configuration file: /config/nginx/nginx.conf</span><br><span class="line">Generated configuration file: /config/core/env</span><br><span class="line">Generated configuration file: /config/core/app.conf</span><br><span class="line">Generated configuration file: /config/registry/config.yml</span><br><span class="line">Generated configuration file: /config/registryctl/env</span><br><span class="line">Generated configuration file: /config/db/env</span><br><span class="line">Generated configuration file: /config/jobservice/env</span><br><span class="line">Generated configuration file: /config/jobservice/config.yml</span><br><span class="line">Generated and saved secret to file: /secret/keys/secretkey</span><br><span class="line">Generated certificate, key file: /secret/core/private_key.pem, cert file: /secret/registry/root.crt</span><br><span class="line">Generated configuration file: /compose_location/docker-compose.yml</span><br><span class="line">Clean up the input <span class="built_in">dir</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Step 5]: starting Harbor ...</span><br><span class="line">[+] Running 10/10</span><br><span class="line"> ⠿ Network harbor_harbor        Created                                                                                    0.4s</span><br><span class="line"> ⠿ Container harbor-log         Started                                                                                    0.5s</span><br><span class="line"> ⠿ Container harbor-portal      Started                                                                                    0.9s</span><br><span class="line"> ⠿ Container redis              Started                                                                                    1.1s</span><br><span class="line"> ⠿ Container registry           Started                                                                                    1.2s</span><br><span class="line"> ⠿ Container registryctl        Started                                                                                    1.0s</span><br><span class="line"> ⠿ Container harbor-db          Started                                                                                    1.0s</span><br><span class="line"> ⠿ Container harbor-core        Started                                                                                    1.3s</span><br><span class="line"> ⠿ Container harbor-jobservice  Started                                                                                    1.6s</span><br><span class="line"> ⠿ Container nginx              Started                                                                                    1.7s</span><br><span class="line">✔ ----Harbor has been installed and started successfully.----  <span class="comment">#成功安装</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看是否安装成功</span></span><br><span class="line"></span><br><span class="line">[root@harbor harbor]# docker-compose  ps </span><br><span class="line">NAME                COMMAND                  SERVICE             STATUS              PORTS</span><br><span class="line">harbor-core         <span class="string">&quot;/harbor/harbor_core&quot;</span>    core                running (healthy)   </span><br><span class="line">harbor-db           <span class="string">&quot;/docker-entrypoint.…&quot;</span>   postgresql          running (healthy)   5432/tcp</span><br><span class="line">harbor-jobservice   <span class="string">&quot;/harbor/harbor_jobs…&quot;</span>   jobservice          running (healthy)   </span><br><span class="line">harbor-log          <span class="string">&quot;/bin/sh -c /usr/loc…&quot;</span>   <span class="built_in">log</span>                 running (healthy)   127.0.0.1:1514-&gt;10514/tcp</span><br><span class="line">harbor-portal       <span class="string">&quot;nginx -g &#x27;daemon of…&quot;</span>   portal              running (healthy)   8080/tcp</span><br><span class="line">nginx               <span class="string">&quot;nginx -g &#x27;daemon of…&quot;</span>   proxy               running (healthy)   0.0.0.0:80-&gt;8080/tcp, 0.0.0.0:443-&gt;8443/tcp, :::80-&gt;8080/tcp, :::443-&gt;8443/tcp</span><br><span class="line">redis               <span class="string">&quot;redis-server /etc/r…&quot;</span>   redis               running (healthy)   6379/tcp</span><br><span class="line">registry            <span class="string">&quot;/home/harbor/entryp…&quot;</span>   registry            running (healthy)   5000/tcp</span><br><span class="line">registryctl         <span class="string">&quot;/home/harbor/start.…&quot;</span>   registryctl         running (healthy)   </span><br><span class="line">[root@harbor harbor]# </span><br><span class="line"></span><br><span class="line"><span class="comment">## harbor服务常用命令</span></span><br><span class="line"></span><br><span class="line">docker-compose ps </span><br><span class="line">docker-compose stop</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="访问验证"><a href="#访问验证" class="headerlink" title="访问验证"></a>访问验证</h2><h4 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h4><blockquote><p>访问验证：<a href="https://192.168.40.101">https://192.168.40.101</a>            默认账号：<code>admin</code>        <code>Harbor12345</code></p></blockquote><p><a href="https://z1.ax1x.com/2023/12/07/pig0iM4.jpg">如图</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Harbor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署</title>
      <link href="/2023/12/05/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/12/05/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="环境规划"><a href="#环境规划" class="headerlink" title="环境规划"></a>环境规划</h2><blockquote><p><code>Kubernetes</code> 集群大致分为两类：一主多从和多主多从。<br>（1）<code>一主多从（单 master ）</code>：一个 <code>Master</code> 节点，多台 <code>Node</code> 节点，搭建简单，但是有单机故障风险，适合用于测试环境。<br>（2）<code>多主多从（高可用）</code>：多台 <code>Master</code> 节点和多台 <code>Node</code> 节点，搭建麻烦但安全性高，适合用于生产环境。</p><p><code>kubernetes</code>有多种部署方式，目前主流的方式有<code>kubeadm</code>、<code>minikube</code>、<code>二进制包</code>三种。简介如下：<br>（1）<code>minikube</code>：一个用于快速搭建单节点的<code>kubernetes</code>工具。<br>（2）<code>kubeadm</code>：一个用于快速搭建<code>kubernetes</code>集群的工具。<br>（3）<code>二进制包</code>：从官网上下载每个组件的二进制包依次安装，此方式对于理解<code>kubernetes</code>组件更加有效。</p></blockquote><ul><li><p>集群类型：<code>一主多从</code></p></li><li><p>安装方式：使用<code>kubeadm</code>工具快速搭建<code>kubernetes</code>集群</p></li></ul><h3 id="主机规划"><a href="#主机规划" class="headerlink" title="主机规划"></a>主机规划</h3><div class="table-container"><table><thead><tr><th>角色</th><th>IP地址</th><th>实验环境</th></tr></thead><tbody><tr><td>Master</td><td>192.168.40.101</td><td>Centos7.9</td></tr><tr><td>Node1</td><td>192.168.40.102</td><td>Centos7.9</td></tr><tr><td>Node2</td><td>192.168.40.103</td><td>Centos7.9</td></tr></tbody></table></div><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h3><ol><li>准备<code>3</code>台机器，要求网络互通（云服务器私网互通，虚拟机网络互通），同时可联网，因为要拉取镜像</li><li><code>关闭``防火墙</code>、<code>selinux</code>、<code>swap</code>分区等，这些是可能会导致<code>k8s</code>集群出问题的地方，需要提前配置好</li><li>安装<code>Docker</code>容器化环境，同时安装三个核心组件：<code>kubeadm</code>、<code>kubelet</code>、<code>kubectl</code></li><li>下载<code>k8s</code>所需镜像，创建一个<code>Master</code>节点，将<code>Node</code>节点加入到当前集群</li><li>在<code>k8s</code>集群安装相关服务进行验证，登录<code>k8s</code>的<code>web</code>的用户界面<code>Dashboard</code></li></ol><h3 id="安装环境准备"><a href="#安装环境准备" class="headerlink" title="安装环境准备"></a>安装环境准备</h3><blockquote><p>其实简单来说通过两条指令就能部署一个<code>kubernetes</code>集群：<br>1.创建一个<code>master</code>节点：<code>kubeadm init</code><br>2.将<code>node</code>节点加入当前集群：<code>kubeadm join &lt;Master 节点的IP和端口&gt;</code><br>在执行<code>kubeadm init</code> 指令后，<code>kubeadm</code>首先会做一系列检查工作，确保机器能够安装<code>kubernetes</code>：</p><p><code>linux</code>系统内核的版本是否必须<code>3.10</code>以上？<br><code>linux cgroups</code>模块是否可用？<br>机器的<code>hostname</code>是否标准？<br>安装的<code>kubeadm</code>和<code>kubelet</code>是否匹配？<br><code>docker</code>是否已经安装？<br>…<br>因此建议把环境配置好再部署。</p></blockquote><h4 id="升级系统内核"><a href="#升级系统内核" class="headerlink" title="升级系统内核"></a>升级系统内核</h4><p><code>K8S</code>集群服务器内核必须一致，建议在每个节点（三台机器）上都升级系统内核到最新版本。</p><h5 id="检查操作系统版本"><a href="#检查操作系统版本" class="headerlink" title="检查操作系统版本"></a>检查操作系统版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">操作系统至少在7.5以上</span><br><span class="line"></span><br><span class="line"><span class="comment">#实验环境下机器的系统版本为7.9，内核版本为3.10.0</span></span><br><span class="line"><span class="comment">#查看系统版本</span></span><br><span class="line"><span class="built_in">cat</span> /etc/redhat-release</span><br><span class="line"><span class="comment">#查看当前系统的内核：</span></span><br><span class="line"><span class="built_in">uname</span> -sr</span><br></pre></td></tr></table></figure><h5 id="默认的-3-10-0版本较低，建议安装最新主线内核版本"><a href="#默认的-3-10-0版本较低，建议安装最新主线内核版本" class="headerlink" title="默认的 3.10.0版本较低，建议安装最新主线内核版本"></a>默认的 3.10.0版本较低，建议安装最新主线内核版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在 CentOS 7.x 上启用 ELRepo 仓库：</span></span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看可用的系统内核相关包：</span></span><br><span class="line">yum --disablerepo=<span class="string">&quot;*&quot;</span> --enablerepo=<span class="string">&quot;elrepo-kernel&quot;</span> list available</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装最新主线内核版本：</span></span><br><span class="line">yum -y --enablerepo=elrepo-kernel install kernel-ml</span><br></pre></td></tr></table></figure><h5 id="设置默认的内核版本"><a href="#设置默认的内核版本" class="headerlink" title="设置默认的内核版本"></a>设置默认的内核版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改GRUB_DEFAULT=0，设置为0表示默认启动第一个操作系统或内核，从0开始计数</span></span><br><span class="line">vi /etc/default/grub</span><br><span class="line"></span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">&quot;<span class="subst">$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)</span>&quot;</span></span><br><span class="line">GRUB_DEFAULT=0 <span class="comment"># 修改此处，原来是 saved</span></span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL_OUTPUT=<span class="string">&quot;console&quot;</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet&quot;</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure><h5 id="重新创建内核配置"><a href="#重新创建内核配置" class="headerlink" title="重新创建内核配置"></a>重新创建内核配置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看默认内核</span></span><br><span class="line">grubby --default-kernel</span><br><span class="line"></span><br><span class="line"><span class="comment">#若不是最新的，使用以下命令设置，reboot重启生效。</span></span><br><span class="line">grubby --set-default $(<span class="built_in">ls</span> /boot/vmlinuz-* | grep elrepo)</span><br></pre></td></tr></table></figure><h4 id="设置主机名和hosts本地解析"><a href="#设置主机名和hosts本地解析" class="headerlink" title="设置主机名和hosts本地解析"></a>设置主机名和hosts本地解析</h4><blockquote><p>这一步的作用是方便识别，如主节点所在的虚拟机命名为k8s-master，从节点所在的虚拟机命名为k8s-node1、k8s-node2（重启或者新开窗口可验证）。</p><p>Linux 的 /etc/hosts 文件是配置ip地址及其对应主机名的文件，这里可以记录本机的或其他主机的ip及其对应主机名，方便后面集群节点间的直接调用，因此在每个节点（三台机器）上都配置一下主机名解析。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据集群规划，各节点设置对应的主机名</span></span><br><span class="line">hostnamectl set-hostname k8s-master    <span class="comment">#192.168.40.101</span></span><br><span class="line">hostnamectl set-hostname k8s-node1     <span class="comment">#192.168.40.102</span></span><br><span class="line">hostnamectl set-hostname k8s-node2     <span class="comment">#192.168.40.103</span></span><br><span class="line"></span><br><span class="line">vi /etc/hosts </span><br><span class="line"><span class="comment">#所有节点编辑/etc/hosts文件，添加：</span></span><br><span class="line">127.0.0.1   $(hostname)</span><br><span class="line">192.168.40.101 k8s-master</span><br><span class="line">192.168.40.102 k8s-node1</span><br><span class="line">192.168.40.103 k8s-node2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-node2 ~]# <span class="built_in">cat</span> /etc/hosts</span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">127.0.0.1   k8s-node2</span><br><span class="line">192.168.40.101 k8s-master</span><br><span class="line">192.168.40.102 k8s-node1</span><br><span class="line">192.168.40.103 k8s-node2</span><br><span class="line">~                              </span><br></pre></td></tr></table></figure><h4 id="关闭防火墙和SELINUX"><a href="#关闭防火墙和SELINUX" class="headerlink" title="关闭防火墙和SELINUX"></a>关闭防火墙和SELINUX</h4><blockquote><p>在每个节点（三台机器）上都关闭防火墙，并设置开机禁用。</p><p>在实际生产环境中，通常会采用防火墙和<code>SELinux</code>来增强系统的安全性，但在学习和测试环境中，这些安全措施可能会造成麻烦。因此，只用于学习环境建议关闭所有节点的防火墙和<code>SELinux</code>，以方便学习和测试。三台机器（所有节点）均需要在部署前配置好环境。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭防火墙，关闭SELinux（设置为disabled）</span></span><br><span class="line">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld </span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&#x27;s#SELINUX=enforcing#SELINUX=disabled#g&#x27;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#确保防火墙和SElinux是关闭状态</span></span><br><span class="line">systemctl status firewalld</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看selinux：cat /etc/selinux/config</span></span><br><span class="line"><span class="comment">#1.永久关闭 SELinux ，需要重启机器生效：sed -i &#x27;s#SELINUX=enforcing#SELINUX=disabled#g&#x27; /etc/selinux/config</span></span><br><span class="line">说明：修改SELinux配置文件，将SELINUX=enforcing改为SELINUX=disabled，禁用SELinux安全模块。其中，sed是一个文本编辑器，-i选项表示直接修改原文件，#是分隔符，g表示全局替换。</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.临时关闭当前会话的 SELinux ，机器重启之后无效：setenforce 0</span></span><br><span class="line">说明：将SELinux设置为Permissive模式，允许访问被拒绝的操作，但会记录到系统日志中。</span><br></pre></td></tr></table></figure><h4 id="安装NTP，时间同步设置"><a href="#安装NTP，时间同步设置" class="headerlink" title="安装NTP，时间同步设置"></a>安装<code>NTP</code>，时间同步设置</h4><blockquote><p><code>Kubernetes</code> 要求集群中的节点时间必须精确一致，因此在每个节点（三台机器）上都添加时间同步</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#从指定的NTP服务器获取时间信息，并将本地系统时间设置为该服务器时间</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br><span class="line"><span class="comment">#或者使用国内时间服务器：ntpdate ntp1.aliyun.com</span></span><br></pre></td></tr></table></figure><h4 id="关闭-swap-分区"><a href="#关闭-swap-分区" class="headerlink" title="关闭 swap 分区"></a>关闭 swap 分区</h4><blockquote><p>当内存不足时，<code>linux</code>会自动使用<code>swap</code>，将部分内存数据存放到磁盘中。<code>swap</code>会导致<code>docker</code>的运行不正常，性能下降，还可能产生其他问题，因此部署<code>k8s</code>集群时一定要关闭<code>swap</code>分区。在每个节点（三台机器）上都进行以下操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所有节点关闭swap交换分区</span></span><br><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看是否关闭（swap 0 0 0则成功关闭）</span></span><br><span class="line">free -m</span><br><span class="line"></span><br><span class="line"><span class="comment">#临时关闭当前会话的 swap ，机器重启之后无效：</span></span><br><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><h4 id="将桥接的IPv4流量传递到iptables链"><a href="#将桥接的IPv4流量传递到iptables链" class="headerlink" title="将桥接的IPv4流量传递到iptables链"></a>将桥接的<code>IPv4</code>流量传递到<code>iptables</code>链</h4><blockquote><p><code>netfilter/iptables</code>（简称为<code>iptables</code>）组成<code>Linux</code>平台下的包过滤防火墙，与大多数的<code>Linux</code>软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（<code>NAT</code>）等功能。<br>规则（<code>rules</code>）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件，就这样处理这个数据包”。规则存储在内核空间的信息包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如<code>TCP、UDP、ICMP</code>）和服务类型（如<code>HTTP、FTP</code>和<code>SMTP</code>）等。当数据包与规则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如<code>放行（accept）</code>、<code>拒绝（reject）</code>和<code>丢弃（drop）</code>等。配置防火墙的主要工作就是添加、修改和删除这些规则。<br>在每个节点（三台机器）上都将桥接的<code>IPv4</code>流量传递到<code>iptables</code>的链</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">vm.swappiness = 0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加载br_netfilter模块</span></span><br><span class="line">modprobe br_netfilter</span><br><span class="line"><span class="comment">#查看是否加载</span></span><br><span class="line">lsmod | grep br_netfilter</span><br><span class="line"><span class="comment">#使生效</span></span><br><span class="line">sysctl --system</span><br><span class="line"><span class="comment">#拓展：持久化修改（保留配置包本地文件，重启系统或服务进程仍然有效）</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h4 id="开启-ipvs"><a href="#开启-ipvs" class="headerlink" title="开启 ipvs"></a>开启 <code>ipvs</code></h4><blockquote><p><code>ipvs (IP Virtual Server)</code> 实现了传输层负载均衡，也就是4层<code>LAN</code>交换，作为<code>Linux</code>内核的一部分。<code>ipvs</code>运行在主机上，在真实服务器集群前充当负载均衡器<br><code>k8s</code> 默认情况下有三种网络负载均衡模式:<code>userspace 代理模式</code>、<code>iptables代理模式</code>、<code>ipvs代理模式</code>。这三种代理模式的负载能力是<code>依次递增</code>的<br>在 <code>Kubernetes</code> 中 <code>service</code> 有两种代理模型，一种是基于 <code>iptables</code> ，另一种是基于 <code>ipvs</code> 。<code>ipvs</code> 的性能要高于 <code>iptables</code> 的，但是如果要使用它，需要手动载入 <code>ipvs</code> 模块</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在三台机器安装 ipset 和 ipvsadm ：</span></span><br><span class="line">yum -y install ipset ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment">#在三台机器执行如下脚本：</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#授权、运行、检查是否加载：</span></span><br><span class="line"><span class="built_in">chmod</span> 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br></pre></td></tr></table></figure><h4 id="重启机器"><a href="#重启机器" class="headerlink" title="重启机器"></a>重启机器</h4><blockquote><p>此时三台机器都基本上完成了安装前准备，因为有些配置是重启后生效</p></blockquote><h3 id="容器化环境和组件安装"><a href="#容器化环境和组件安装" class="headerlink" title="容器化环境和组件安装"></a>容器化环境和组件安装</h3><h4 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a><code>Docker</code> 安装</h4><blockquote><p>因为安装<code>kubernetes</code>需要<code>docker</code>容器化环境，因此先安装<code>docke</code>r，但是注意<code>kubernetes</code>版本和<code>docker</code>的版本对应问题。按本博客的版本即可，如果是安装其他版本，需参考官方文档。<br><code>Kubernetes</code> 和 <code>Docker</code>之间有版本的对应关系（如 <code>Docker</code> 版本<code>v20.10</code>对应 <code>Kubernetes</code> 的版本是 <code>v1.21</code>），版本对应不上可能会提示<code>docker</code>版本不兼容，可参考<code>Kubernetes</code>各版本对应支持的<code>docker</code>版本列表。<br>在每个节点（3台机器）上都安装<code>docker</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载旧版本docker（如有）</span></span><br><span class="line">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum安装 gcc 相关软件，安装yum工具包</span></span><br><span class="line"></span><br><span class="line">yum -y install gcc gcc-c++</span><br><span class="line">yum -y install yum-utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置阿里云的stable 镜像仓库</span></span><br><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新 yum 软件包索引</span></span><br><span class="line">yum makecache fast</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装指定版本的 Docker（v20.10.8）:</span></span><br><span class="line">yum -y install docker-ce-3:20.10.8-3.el7.x86_64 docker-ce-cli-1:20.10.8-3.el7.x86_64 containerd.io</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动docker并设置开机自启</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证 Docker 是否安装成功：</span></span><br><span class="line">systemctl status docker</span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><h4 id="设置Docker镜像加速器"><a href="#设置Docker镜像加速器" class="headerlink" title="设置Docker镜像加速器"></a>设置<code>Docker</code>镜像加速器</h4><blockquote><p>为了下载各组件时从国内镜像源下载，在每个节点（3台机器）上都需要配置镜像加速器。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置阿里云镜像加速：</span></span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://du3ia00u.mirror.aliyuncs.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;live-restore&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>:<span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;<span class="string">&quot;max-size&quot;</span>:<span class="string">&quot;500m&quot;</span>, <span class="string">&quot;max-file&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;,</span><br><span class="line">  <span class="string">&quot;max-concurrent-downloads&quot;</span>: 10,</span><br><span class="line">  <span class="string">&quot;max-concurrent-uploads&quot;</span>: 5,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#使之生效并重启docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="添加阿里云的YUM软件源"><a href="#添加阿里云的YUM软件源" class="headerlink" title="添加阿里云的YUM软件源"></a>添加阿里云的<code>YUM</code>软件源</h4><blockquote><p>由于<code>kubernetes</code>的镜像源在国外，下载软件包较慢或者下载失败，这里在每个节点（3台机器）上都切换成国内的阿里云镜像源</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="安装kubeadm、kubelet和kubectl"><a href="#安装kubeadm、kubelet和kubectl" class="headerlink" title="安装kubeadm、kubelet和kubectl"></a>安装<code>kubeadm</code>、<code>kubelet</code>和<code>kubectl</code></h4><p>在每个节点（3台机器）上都需要安装<code>kubeadm</code>、<code>kubelet</code>和<code>kubectl</code>，安装时指定版本为<code>1.21.10</code>。</p><ul><li><code>kubeadm</code>是官方社区推出的一个用于快速部署<code>kubernetes</code>集群的工具。</li><li><code>Kubelet</code>：运行在<code>cluster</code>（集群）所有节点上,负责启动<code>POD</code>和容器。</li><li><code>kubectl</code>是<code>Kubernetes</code>集群的命令行工具，通过<code>kubectl</code>可以部署和管理应用，查看各种资源，创建，删除和更新组件。</li></ul><ul><li>安装三大组件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y kubelet-1.21.10 kubeadm-1.21.10 kubectl-1.21.10</span><br></pre></td></tr></table></figure><ul><li>查看安装版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubelet --version</span><br><span class="line"><span class="comment">#为了实现Docker使用的cgroup drvier和kubelet使用的cgroup drver一致，修改&quot;/etc/sysconfig/kubelet&quot;文件为以下内容：</span></span><br><span class="line">vi /etc/sysconfig/kubelet</span><br><span class="line"><span class="comment"># 修改为</span></span><br><span class="line">KUBELET_EXTRA_ARGS=<span class="string">&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line">KUBE_PROXY_MODE=<span class="string">&quot;ipvs&quot;</span></span><br></pre></td></tr></table></figure><ul><li>设置为开机自启动即可，由于没有生成配置文件，集群初始化后自动启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><h2 id="kubernetes集群部署"><a href="#kubernetes集群部署" class="headerlink" title="kubernetes集群部署"></a><code>kubernetes</code>集群部署</h2><h3 id="下载k8s所需镜像"><a href="#下载k8s所需镜像" class="headerlink" title="下载k8s所需镜像"></a>下载<code>k8s</code>所需镜像</h3><blockquote><p>在每个节点（3台机器）上都安装好<code>k8s</code>集群所需的镜像。</p></blockquote><ul><li>查看 <code>Kubernetes</code> 安装所需镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images list</span><br></pre></td></tr></table></figure><ul><li>下载 <code>Kubernetes</code> 安装所需镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.21.10</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.21.10</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.21.10</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.21.10</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.4.1</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.4.13-0</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:v1.8.0</span><br></pre></td></tr></table></figure><ul><li>查看镜像下载情况</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="部署-Kubernetes-的-Master-节点"><a href="#部署-Kubernetes-的-Master-节点" class="headerlink" title="部署 Kubernetes 的 Master 节点"></a>部署 <code>Kubernetes</code> 的 <code>Master</code> 节点</h3><p>在 <code>192.168.40.101</code> 机器上部署 <code>Kubernetes</code> 的 <code>Master</code> 节点说明</p><blockquote><ul><li><code>apiserver-advertise-address =Master</code>节点的 <code>IP</code> 地址</li><li><code>image-repository</code>=容器镜像的仓库地址</li><li><code>kubernetes-version</code>= 安装的<code>kubernetes</code>版本号</li><li><code>service-cidr</code> 和 <code>apiserver-advertise-address</code> 、<code>pod-network-cidr</code> 不能在同一个网络范围内</li><li>不要使用 <code>172.17.0.1/16</code> 网段范围，因为这是 <code>Docker</code> 默认使用的</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.40.101 \</span><br><span class="line">  --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version=v1.21.10 \</span><br><span class="line">  --service-cidr=10.96.0.0/16 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><ul><li>结果如下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.40.101:6443 --token yzpb7r.srd5ncljnngrr0t9 \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:c2404646a68904fa3faf89f1fb12d952aea8ae8ed464a09ea87d565fe9860e55 </span><br></pre></td></tr></table></figure><ul><li>拷贝<code>kubectl</code>使用的连接<code>k8s</code>认证文件到默认路径，根据日志提示，想要开始使用集群，需要在 <code>master</code>节点机器上（<code>192.168.40.101</code> ）执行如下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建目录存放 Kubernetes 的配置文件并配置 Kubernetes 客户端工具 kubectl</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="comment">#将 $HOME/.kube/config 文件的权限修改为当前用户</span></span><br><span class="line"><span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="comment"># 如果是 root 用户，可以执行如下命令，在使用 kubectl 命令时就不需要每次都指定配置文件的路径</span></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure><ul><li>默认的 <code>token</code> 有效期为 <code>2</code> 小时，当过期之后，该 <code>token</code> 就不能用了，另外也可以生成一个永不过期的<code>token</code>，命令如下 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成token，有效期2小时</span></span><br><span class="line">kubeadm token create --print-join-command</span><br><span class="line"><span class="comment"># 生成一个永不过期的token</span></span><br><span class="line">kubeadm token create --ttl 0 --print-join-command</span><br><span class="line"><span class="comment">#此时系统自动生成了一个kubeadm join命令,这个命令是用来将一个新的节点加入到 Kubernetes 集群中的。</span></span><br><span class="line"><span class="comment">#说明</span></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.40.101:6443   <span class="comment">##集群的 API Server 地址</span></span><br><span class="line">--token eu4sck.tkp2v9yr7ya8hzei    <span class="comment">###用来认证新节点的凭证</span></span><br><span class="line">--discovery-token-ca-cert-hash sha256:c2404646a68904fa3faf89f1fb12d952aea8ae8ed464a09ea87d565fe9860e55 </span><br><span class="line"><span class="comment">#操作结果</span></span><br><span class="line">[root@k8s-master ~]# kubeadm token create --ttl 0 --print-join-command</span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.40.101:6443 --token eu4sck.tkp2v9yr7ya8hzei --discovery-token-ca-cert-hash sha256:c2404646a68904fa3faf89f1fb12d952aea8ae8ed464a09ea87d565fe9860e55</span><br></pre></td></tr></table></figure><h3 id="部署-Kubernetes-的-Node节点"><a href="#部署-Kubernetes-的-Node节点" class="headerlink" title="部署 Kubernetes 的 Node节点"></a>部署 Kubernetes 的 Node节点</h3><blockquote><p>通过上面自动生成的<code>kubeadm join</code>命令，将两个<code>node</code>节点加入到<code>kubernetes</code>集群中</p></blockquote><ul><li>在<code>192.168.40.102</code> 和 <code>192.168.40.103</code>两台机器上都执行生成的命令把这两个工作节点加入到当前集群</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.40.101:6443 \</span><br><span class="line">    --token eu4sck.tkp2v9yr7ya8hzei \</span><br><span class="line">    --discovery-token-ca-cert-hash \</span><br><span class="line"> sha256:c2404646a68904fa3faf89f1fb12d952aea8ae8ed464a09ea87d565fe9860e55 </span><br></pre></td></tr></table></figure><ul><li>通过<code>kubectl get node</code>查看结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get node</span><br><span class="line">NAME         STATUS     ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   NotReady   control-plane,master   21m   v1.21.10</span><br><span class="line">k8s-node1    NotReady   &lt;none&gt;                 40s   v1.21.10</span><br><span class="line">k8s-node2    NotReady   &lt;none&gt;                 36s   v1.21.10</span><br></pre></td></tr></table></figure><h3 id="部署网络插件"><a href="#部署网络插件" class="headerlink" title="部署网络插件"></a>部署网络插件</h3><blockquote><p><code>Kubernetes</code>本身并没有自己实现容器网络，而是借助<code>CNI</code>标准，通过插件化的方式来集成各种网络插件，实现集群内部网络相互通信。</p><p><code>Kubernetes</code>集群设计了<code>Cluster IP</code>、<code>Node IP</code>、<code>Pod IP</code>三种类型的通信<code>IP</code></p><ul><li><code>Cluster IP</code>是<code>Service</code>对象的IP地址，实现<code>Pod</code>服务的负载均衡，外部网络无法ping通，只在集群内部可以访问使用，是一个虚拟的<code>IP</code>。</li><li><code>Node IP</code>是集群节点<code>Node</code>的<code>IP</code>地址，可以是物理机的<code>IP</code>（也可能是虚拟机<code>IP</code>）。</li><li><code>Pod IP</code>是容器组<code>Pod</code>的<code>IP</code>地址，是在容器组初始化过程由<code>Pause</code>容器申请的<code>IP</code>地址。其中<code>Pod IP</code>是容器网络接口<code>CNI</code>与具体的网络插件来实现<code>IP</code>的申请及数据包的转发。</li></ul></blockquote><ul><li><code>Kubernetes</code> 支持多种网络插件，比如 <code>flannel、calico、canal</code> 等，任选一种安装即可，这里选择 <code>calico</code>。在 master节点（<code>192.168.40.101</code> ）上执行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://projectcalico.docs.tigera.io/v3.19/manifests/calico.yaml</span><br></pre></td></tr></table></figure><ul><li>查看部署进度</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n kube-system</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">watch kubectl get pods -n kube-system</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]# kubectl get pods -n kube-system</span><br><span class="line">NAME                                       READY   STATUS     RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-7cc8dd57d9-txx5m   0/1     Pending    0          10s</span><br><span class="line">calico-node-gfrqm                          0/1     Init:0/3   0          10s</span><br><span class="line">calico-node-sm7z5                          0/1     Init:0/3   0          10s</span><br><span class="line">calico-node-wx4bw                          0/1     Init:0/3   0          10s</span><br><span class="line">coredns-6f6b8cc4f6-kfrdr                   0/1     Pending    0          29m</span><br><span class="line">coredns-6f6b8cc4f6-wqrvq                   0/1     Pending    0          29m</span><br><span class="line">etcd-k8s-master                            1/1     Running    0          29m</span><br><span class="line">kube-apiserver-k8s-master                  1/1     Running    0          29m</span><br><span class="line">kube-controller-manager-k8s-master         1/1     Running    0          29m</span><br><span class="line">kube-proxy-5vg2s                           1/1     Running    0          29m</span><br><span class="line">kube-proxy-8v2q7                           1/1     Running    0          9m7s</span><br><span class="line">kube-proxy-cr6vl                           1/1     Running    0          9m11s</span><br><span class="line">kube-scheduler-k8s-master                  1/1     Running    0          29m</span><br></pre></td></tr></table></figure><ul><li>在<code>master</code>节点使用<code>kubectl</code>工具查看节点状态,此时节点状态应该都是<code>Ready</code>，<code>pod</code>全部<code>running</code>。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]# kubectl get nodes</span><br><span class="line">NAME         STATUS   ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   Ready    control-plane,master   54m   v1.21.10</span><br><span class="line">k8s-node1    Ready    &lt;none&gt;                 34m   v1.21.10</span><br><span class="line">k8s-node2    Ready    &lt;none&gt;                 34m   v1.21.10</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]# kubectl get pods -n kube-system</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-7cc8dd57d9-txx5m   1/1     Running   0          24m</span><br><span class="line">calico-node-gfrqm                          1/1     Running   0          24m</span><br><span class="line">calico-node-sm7z5                          1/1     Running   0          24m</span><br><span class="line">calico-node-wx4bw                          1/1     Running   0          24m</span><br><span class="line">coredns-6f6b8cc4f6-kfrdr                   1/1     Running   0          53m</span><br><span class="line">coredns-6f6b8cc4f6-wqrvq                   1/1     Running   0          53m</span><br><span class="line">etcd-k8s-master                            1/1     Running   0          53m</span><br><span class="line">kube-apiserver-k8s-master                  1/1     Running   0          53m</span><br><span class="line">kube-controller-manager-k8s-master         1/1     Running   0          53m</span><br><span class="line">kube-proxy-5vg2s                           1/1     Running   0          53m</span><br><span class="line">kube-proxy-8v2q7                           1/1     Running   0          33m</span><br><span class="line">kube-proxy-cr6vl                           1/1     Running   0          33m</span><br><span class="line">kube-scheduler-k8s-master                  1/1     Running   0          53m</span><br></pre></td></tr></table></figure><blockquote><p>至此一主两从的<code>K8S</code>集群就搭建好了</p></blockquote><h3 id="设置-kube-proxy-的-ipvs-模式"><a href="#设置-kube-proxy-的-ipvs-模式" class="headerlink" title="设置 kube-proxy 的 ipvs 模式"></a>设置 <code>kube-proxy</code> 的 <code>ipvs</code> 模式</h3><ul><li>在 <code>master</code>节点（<code>192.168.40.101</code>）上设置 <code>kube-proxy</code> 的 <code>ipvs</code> 模式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit cm kube-proxy -n kube-system</span><br></pre></td></tr></table></figure><ul><li>找到<code>ipvs</code>模块，将 <code>mode: &quot; &quot;</code> 双引号里面加上<code>ipvs</code> 再<code>44</code>行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">38       syncPeriod: 0s</span><br><span class="line">39       tcpFinTimeout: 0s</span><br><span class="line">40       tcpTimeout: 0s</span><br><span class="line">41       udpTimeout: 0s</span><br><span class="line">42     kind: KubeProxyConfiguration</span><br><span class="line">43     metricsBindAddress: <span class="string">&quot;&quot;</span></span><br><span class="line">44     mode: <span class="string">&quot;ipvs&quot;</span> <span class="comment">#这里添加ipvs</span></span><br><span class="line">45     nodePortAddresses: null</span><br></pre></td></tr></table></figure><ul><li>删除 <code>kube-proxy</code> ，让 <code>Kubernetes</code> 集群自动创建新的 <code>kube-proxy</code> </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -l k8s-app=kube-proxy -n kube-system</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl delete pod -l k8s-app=kube-proxy -n kube-system</span><br><span class="line">pod <span class="string">&quot;kube-proxy-5vg2s&quot;</span> deleted</span><br><span class="line">pod <span class="string">&quot;kube-proxy-8v2q7&quot;</span> deleted</span><br><span class="line">pod <span class="string">&quot;kube-proxy-cr6vl&quot;</span> deleted</span><br><span class="line">[root@k8s-master ~]# </span><br></pre></td></tr></table></figure><h3 id="配置Node节点也能使用-kubectl-命令"><a href="#配置Node节点也能使用-kubectl-命令" class="headerlink" title="配置Node节点也能使用 kubectl 命令"></a>配置<code>Node</code>节点也能使用 <code>kubectl</code> 命令</h3><p>默认情况下，只有 <code>master</code> 节点才有 <code>kubectl</code> 命令，但是有些时候我们也希望在 <code>Node</code> 节点上执行 <code>kubectl</code> 命令</p><ul><li>在两个<code>node</code>节点（<code>192.168.40.102</code> 和 <code>192.168.40.103</code>）上都创建<code>config</code>文件，执行命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -pv ~/.kube</span><br><span class="line"><span class="built_in">touch</span> ~/.kube/config</span><br></pre></td></tr></table></figure><ul><li>在<code>node</code>节点已经创建好了<code>config</code>文件，接下来将<code>master</code>节点的<code>admin.conf</code>文件远程拷贝复制到需要安装的机器（注意你配置的机器名是什么？如<code>root@k8s-node1</code>）。在<code>master</code>节点（<code>192.168.40.101</code>）上执行：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/kubernetes/admin.conf root@k8s-node1:~/.kube/config</span><br><span class="line">scp /etc/kubernetes/admin.conf root@k8s-node2:~/.kube/config</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# scp /etc/kubernetes/admin.conf root@k8s-node1:~/.kube/config</span><br><span class="line">The authenticity of host <span class="string">&#x27;k8s-node1 (192.168.40.102)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:+hj0bigTcIeKwE9jHOElGvftqP5bzysDzhN7vhf25Ow.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:39:d2:bc:51:c0:7d:f6:85:c0:04:a3:6d:3d:28:45:27.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>k8s-node1,192.168.40.102<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">root@k8s-node1&#x27;</span>s password: </span><br><span class="line">admin.conf                                                                                                                                                      100% 5598     6.4MB/s   00:00    </span><br><span class="line">[root@k8s-master ~]# scp /etc/kubernetes/admin.conf root@k8s-node2:~/.kube/config</span><br><span class="line">The authenticity of host <span class="string">&#x27;k8s-node2 (192.168.40.103)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:+hj0bigTcIeKwE9jHOElGvftqP5bzysDzhN7vhf25Ow.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:39:d2:bc:51:c0:7d:f6:85:c0:04:a3:6d:3d:28:45:27.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>k8s-node2,192.168.40.103<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">root@k8s-node2&#x27;</span>s password: </span><br><span class="line">admin.conf        </span><br></pre></td></tr></table></figure><ul><li>此时在两个<code>node</code>节点验证，已经可以使用<code>kubectl</code>命令了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-node1 ~]# kubectl get nodes</span><br><span class="line">NAME         STATUS   ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   Ready    control-plane,master   69m   v1.21.10</span><br><span class="line">k8s-node1    Ready    &lt;none&gt;                 48m   v1.21.10</span><br><span class="line">k8s-node2    Ready    &lt;none&gt;                 48m   v1.21.10</span><br><span class="line"></span><br><span class="line">[root@k8s-node2 ~]#  kubectl get nodes</span><br><span class="line">NAME         STATUS   ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   Ready    control-plane,master   69m   v1.21.10</span><br><span class="line">k8s-node1    Ready    &lt;none&gt;                 48m   v1.21.10</span><br><span class="line">k8s-node2    Ready    &lt;none&gt;                 48m   v1.21.10</span><br></pre></td></tr></table></figure><h3 id="服务部署"><a href="#服务部署" class="headerlink" title="服务部署"></a>服务部署</h3><blockquote><p><code>kubernetes</code>集群已经部署完毕，接下来可以部署服务使用了</p></blockquote><ul><li>在<code>Kubernetes</code>集群中部署<code>nginx1.14</code>，测试下集群是否正常工作</li><li>部署<code>Nginx</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment nginx --image=nginx:1.14-alpine</span><br></pre></td></tr></table></figure><ul><li>暴露端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl expose deployment nginx --port=80 --<span class="built_in">type</span>=NodePort</span><br></pre></td></tr></table></figure><ul><li>查看服务状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods,svc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl create deployment nginx --image=nginx:1.14-alpine</span><br><span class="line">deployment.apps/nginx created</span><br><span class="line">[root@k8s-master ~]# kubectl expose deployment nginx --port=80 --<span class="built_in">type</span>=NodePort</span><br><span class="line">service/nginx exposed</span><br><span class="line">[root@k8s-master ~]# kubectl get pods,svc</span><br><span class="line">NAME                         READY   STATUS              RESTARTS   AGE</span><br><span class="line">pod/nginx-65c4bffcb6-z6p4q   0/1     ContainerCreating   0          13s</span><br><span class="line"></span><br><span class="line">NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">service/kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        71m</span><br><span class="line">service/nginx        NodePort    10.96.210.179   &lt;none&gt;        80:30532/TCP   4s</span><br><span class="line">[root@k8s-master ~]# </span><br></pre></td></tr></table></figure><h3 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h3><p>启动 <code>kubectl</code> 自动补全功能，参考<code>kubernetes</code>官网<a href="https://kubernetes.io/zh-cn/docs/tasks/tools/included/optional-kubectl-configs-bash-linux/">Linux 系统中的 Bash 自动补全功能</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装bash</span></span><br><span class="line">yum -y install bash-completion</span><br><span class="line"><span class="comment"># 自动补全 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source &lt;(kubectl completion bash)&#x27;</span> &gt;&gt;~/.bashrc </span><br><span class="line">kubectl completion bash &gt;/etc/bash_completion.d/kubectl</span><br><span class="line"><span class="comment"># 全局</span></span><br><span class="line">kubectl completion bash | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/bash_completion.d/kubectl &gt; /dev/null</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br></pre></td></tr></table></figure><h3 id="安装K8s-Dashboard"><a href="#安装K8s-Dashboard" class="headerlink" title="安装K8s-Dashboard"></a>安装K8s-Dashboard</h3><blockquote><p><code>Dashboard</code> 是基于网页的 <code>Kubernetes</code> 用户界面。可以使用 <code>Dashboard</code> 将容器应用部署到 <code>Kubernetes</code> 集群中，也可以对容器应用排错，还能管理集群资源。我们可以使用 <code>Dashboard</code> 获取运行在集群中的应用的概览信息，也可以创建或者修改 <code>Kubernetes</code> 资源 （如 <code>Deployment</code>，<code>Job</code>，<code>DaemonSet</code> 等等）。常用的如对<code>Deployment</code>实现弹性伸缩、发起滚动升级、重启 <code>Pod</code> 或者使用向导创建新的应用，展示<code>Kubernetes</code>集群中的资源状态信息和所有报错信息等。<br>参考资料：<a href="https://kuboard.cn/install/install-k8s-dashboard.html">安装Kubernetes Dashboard</a></p></blockquote><ul><li>使用 <code>wget</code> 命令将<code>Dashboard</code>(这里版本为<code>2.0.4</code>)下载到<code>master</code> 节点上</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><ul><li>构建 <code>Pod</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f recommended.yaml</span><br></pre></td></tr></table></figure><ul><li>查看 <code>Pod</code> 状态，等待一段时间，已经处于<code>running</code>状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods --all-namespaces | grep dashboard</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get pods --all-namespaces | grep dashboard</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper-5594697f48-8cbqx   1/1     Running   0          33s</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard-5b47f8964b-jfh6n        1/1     Running   0          33s</span><br></pre></td></tr></table></figure><ul><li>删除现有的 <code>dashboard</code> 服务</li></ul><blockquote><p><code>dashboard</code> 服务的 <code>namespace</code> 是 <code>kubernetes-dashboard</code>，但是该服务的类型是<code>ClusterIP</code>，不便于我们通过浏览器访问，因此需要在后面配置 <code>NodePort</code> 类型的，使之在集群外部能否访问。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看所有命名空间namespace</span></span><br><span class="line">kubectl get svc --all-namespaces</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除现有dashboard服务</span></span><br><span class="line">kubectl delete service kubernetes-dashboard --namespace=kubernetes-dashboard</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get svc --all-namespaces</span><br><span class="line">NAMESPACE              NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">default                kubernetes                  ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP                  112m</span><br><span class="line">default                nginx                       NodePort    10.96.210.179   &lt;none&gt;        80:30532/TCP             40m</span><br><span class="line">kube-system            kube-dns                    ClusterIP   10.96.0.10      &lt;none&gt;        53/UDP,53/TCP,9153/TCP   112m</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper   ClusterIP   10.96.65.85     &lt;none&gt;        8000/TCP                 2m5s</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard        ClusterIP   10.96.155.148   &lt;none&gt;        443/TCP                  2m6s</span><br><span class="line">[root@k8s-master ~]# kubectl delete service kubernetes-dashboard --namespace=kubernetes-dashboard</span><br><span class="line">service <span class="string">&quot;kubernetes-dashboard&quot;</span> deleted</span><br></pre></td></tr></table></figure><h3 id="登录dashboard"><a href="#登录dashboard" class="headerlink" title="登录dashboard"></a>登录dashboard</h3><blockquote><ul><li>配置文件放在：<code>/etc/Kubernetes</code></li><li><code>k8s</code>所有证书的存放位置：<code>/etc/kubernetes/pki</code></li><li>环境变量<code>（env）</code>存放的位置：<code>/var/lib/kubelet/kubeadm-flags.env</code></li><li><code>kubelet</code>配置文件存放位置：<code>/var/lib/kubelet/config.yaml</code></li></ul></blockquote><ul><li>创建一个<code>nodePort</code>类型的<code>kubernetes-dashboard</code>。进入<code>/etc/kubernetes</code> 目录下创建配置文件<code>dashboard-svc.yaml</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/kubernetes</span><br><span class="line">vi /etc/kubernetes/dashboard-svc.yaml</span><br></pre></td></tr></table></figure><ul><li><code>dashboard-svc.yaml</code>文件内容如下：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure><ul><li>创建<code>kubernetes-dashboard</code>的 <code>Service</code>服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f dashboard-svc.yaml</span><br></pre></td></tr></table></figure><ul><li>此时再次查看<code>namespace</code>，已经有<code>nodePort</code>类型的<code>kubernetes-dashboard</code>，注意<code>443:30221</code>,即外部访问端口为<code>32031</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master kubernetes]# kubectl get svc --all-namespaces</span><br><span class="line">NAMESPACE              NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">default                kubernetes                  ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP                  118m</span><br><span class="line">default                nginx                       NodePort    10.96.210.179   &lt;none&gt;        80:30532/TCP             46m</span><br><span class="line">kube-system            kube-dns                    ClusterIP   10.96.0.10      &lt;none&gt;        53/UDP,53/TCP,9153/TCP   118m</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper   ClusterIP   10.96.65.85     &lt;none&gt;        8000/TCP                 7m54s</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard        NodePort    10.96.150.63    &lt;none&gt;        443:30221/TCP            108s</span><br><span class="line">[root@k8s-master kubernetes]# </span><br></pre></td></tr></table></figure><ul><li>创建 <code>kubernetes-dashboard</code> 管理员角色，在<code>/etc/kubernetes</code> 目录下创建配置文件dashboard-<code>svc-account.yaml</code>，其内容如下</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dashboard-admin</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>同样的执行创建，使该<code>yaml</code>文件生效</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f dashboard-svc-account.yaml</span><br></pre></td></tr></table></figure><ul><li>获取 <code>token</code>，先查找<code>token</code>文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secret -n kube-system |grep admin|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"><span class="comment">#系统返回dashboard-admin-token-bvhwm，查看token</span></span><br><span class="line">kubectl describe secret dashboard-admin-token-bvhwm -n kube-system|grep <span class="string">&#x27;^token&#x27;</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master kubernetes]# kubectl get secret -n kube-system |grep admin|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line">dashboard-admin-token-l269k</span><br><span class="line">[root@k8s-master kubernetes]# kubectl describe secret dashboard-admin-token-l269k -n kube-system|grep <span class="string">&#x27;^token&#x27;</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IkZPZS1HSTBKVEhzeFh4bjJCMXktdWJNMk93dnE0QzdoWm5qQzFFWEVVUncifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tbDI2OWsiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzNhMWVmNjctNGQzMC00OTIzLTk2ZWItNzE5MzEwMzgxMDEzIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.FdF5SoprlLGL8IDKMeOwWbnOx8Ry5WX2LkPIjGej4bOw603UvVBD2GXNrH7p97HXsL-6BuLe65oR24YN2oC_S-Ie8VhIg6JcG4itL4oeMqa5UOGVHyAZBP9OfuxFa36YDVc8LZ0S-_VzI3t1ZW2ybk1WOldyNn4XPsdNWpjMQaV0Cv2slXQWtFLiB3d5LQNiW1HykJcM5e1N-zXfYNErKzz1VfOA2K5bLIoLJACYLr1RefXtMyMet28Yu28WHwbaWegEykG2mng3DbqmazbPO062DZsKnXmU1AHrplcUlSSSzeMKmISbqsthiXbBDAePF2GoedN1EMBJ9JwFov96CQ</span><br><span class="line">[root@k8s-master kubernetes]# </span><br></pre></td></tr></table></figure><ul><li>此时我们得到了<code>dashboard</code>的<code>token</code>，先复制保存一份</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IkZPZS1HSTBKVEhzeFh4bjJCMXktdWJNMk93dnE0QzdoWm5qQzFFWEVVUncifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tbDI2OWsiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzNhMWVmNjctNGQzMC00OTIzLTk2ZWItNzE5MzEwMzgxMDEzIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.FdF5SoprlLGL8IDKMeOwWbnOx8Ry5WX2LkPIjGej4bOw603UvVBD2GXNrH7p97HXsL-6BuLe65oR24YN2oC_S-Ie8VhIg6JcG4itL4oeMqa5UOGVHyAZBP9OfuxFa36YDVc8LZ0S-_VzI3t1ZW2ybk1WOldyNn4XPsdNWpjMQaV0Cv2slXQWtFLiB3d5LQNiW1HykJcM5e1N-zXfYNErKzz1VfOA2K5bLIoLJACYLr1RefXtMyMet28Yu28WHwbaWegEykG2mng3DbqmazbPO062DZsKnXmU1AHrplcUlSSSzeMKmISbqsthiXbBDAePF2GoedN1EMBJ9JwFov96CQ</span><br></pre></td></tr></table></figure><ul><li>查看外部访问端口，也就是之前我们创建的 <code>Service</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get svc --all-namespaces | grep dashboard</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper   ClusterIP   10.96.65.85     &lt;none&gt;        8000/TCP                 26m</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard        NodePort    10.96.150.63    &lt;none&gt;        443:30221/TCP            20m</span><br></pre></td></tr></table></figure><ul><li>在浏览器访问<code>dashboard</code>,网址输入【集群<code>IP</code>:端口号】如：<a href="https://192.168.40.101:30221/可以访问`web`管理界面。出现以下界面时继续访问地址即可。">https://192.168.40.101:30221/可以访问`web`管理界面。出现以下界面时继续访问地址即可。</a></li></ul><p><a href="https://z1.ax1x.com/2023/12/07/pigecwR.jpg">界面如图</a></p><p>如果出现  <code>你的链接不是私密链接</code>    请手动敲 <code>thisisunsafe</code></p><p><a href="https://z1.ax1x.com/2023/12/07/pige6m9.jpg">登陆后界面</a></p>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django单元测试快速指南</title>
      <link href="/2023/11/24/Django%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%BF%AB%E9%80%9F%E6%8C%87%E5%8D%97/"/>
      <url>/2023/11/24/Django%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%BF%AB%E9%80%9F%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>本文受《Python测试驱动开发》启发，书中内容很详尽，章节也很多，比较偏向于新手向，从如何安装Django1.11到如何使用Git工具都有教，没接触过这些的人都能看懂，有一定基础的人可以略读，值得一看。<br>本文绝大部分内容并不来自该书，更多的是我的个人见解和对官方文档的一些整理。</p></blockquote><p>本文主要介绍<code>Django</code>跟<code>unittest</code>有区别的地方，以及如何去使用<code>Django</code>内置的测试模块进行测试，适合有一定<code>Python</code>基础和<code>Django</code>基础的人。</p><h2 id="自动测试的理念"><a href="#自动测试的理念" class="headerlink" title="自动测试的理念"></a>自动测试的理念</h2><h3 id="TDD"><a href="#TDD" class="headerlink" title="TDD"></a>TDD</h3><p><code>TDD(Test Driven Development)</code>，中文名是“测试驱动开发”，这是一个编程理念，类似于面向对象编程，你可以不用，但是如果你用了，你会发现你的开发过程会非常的顺畅，非常的有底气，你对代码所做的每一处修改，都在你的可控范围内，出错也很容易找到问题所在，并且先测试再开发的过程更有利于你设计一个功能或者设计整个产品，在你的大脑中会非常清晰地知道你想要实现什么功能，而不需要先想着代码应该怎么实现，就像<code>API</code>文档一样，每个功能、每个模块都可以一目了然，这就是测试的作用。</p><h2 id="个人见解"><a href="#个人见解" class="headerlink" title="个人见解"></a>个人见解</h2><p>通过这段时间编写测试代码的经历，对自动测试、单元测试有一点小小见解。<br>给<code>Django</code>项目写测试对我来说是一件很痛苦的事情，特别是<code>MTV</code>中的<code>T（Templates）</code>，要测试模板是否是对的，就相当于测试前端，不仅要测试<code>UI</code>显示<code>（HTML）</code>是不是对的，<code>（JS）</code>交互是否正常，样式<code>（CSS）</code>是否正确<code>（即UI）</code>，还要测试跟<code>Django</code>耦合部分的上下文对不对。<br>测试模板一般都是看期望的<code>DOM</code>有没有渲染出来，还得测试点击某个按钮是不是能正常工作等等。</p><p>然后就是视图或者模型测试，得把所有场景都想象出来，然后对这些场景进行测试，比如权限认证、身份认证、数据库查询等。</p><p>如果把整个项目都做一遍测试，把上述的测试项都测试一遍，那这样下来测试代码要比业务代码要多不少，不过这样也是有他的合理性的，毕竟测试全面了，代码稳定性就高了。</p><p>但是我觉得不应该把所有的测试代码都放到<code>Django</code>项目里面，应该分三个部分进行：</p><ul><li>后端函数、逻辑代码测试</li><li>接口测试</li><li>前端UI和交互测试</li><li>功能测试/需求测试</li></ul><p>各部门各司其职，对上述测试点进行测试，用其相对应的专业工具去测，这样效率也能大大提升，并且测试文档也会好写很多，最终提交的项目的结构化也更好。<br>另外我认为测试代码（即用于进行测试的代码，不是被测试的代码）越少越好，因为如果用代码测试代码，那很难保证测试代码本身不会存在逻辑错误或者其他<code>BUG</code>，各种逻辑函数越少越好，越傻瓜越好，哪怕是面向过程模式的测试代码，这样才能更好拟合用户的操作行为，减少依赖性。</p><h2 id="Django中需要测试的部分"><a href="#Django中需要测试的部分" class="headerlink" title="Django中需要测试的部分"></a>Django中需要测试的部分</h2><p><img src="https://s11.ax1x.com/2024/01/09/pFpneq1.png" alt="Django测试"></p><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"><span class="keyword">from</span> myapp.models <span class="keyword">import</span> Animal</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AnimalTestCase</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUp</span>(<span class="params">self</span>):</span><br><span class="line">        Animal.objects.create(name=<span class="string">&quot;lion&quot;</span>, sound=<span class="string">&quot;roar&quot;</span>)</span><br><span class="line">        Animal.objects.create(name=<span class="string">&quot;cat&quot;</span>, sound=<span class="string">&quot;meow&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_animals_can_speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Animals that can speak are correctly identified&quot;&quot;&quot;</span></span><br><span class="line">        lion = Animal.objects.get(name=<span class="string">&quot;lion&quot;</span>)</span><br><span class="line">        cat = Animal.objects.get(name=<span class="string">&quot;cat&quot;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(lion.speak(), <span class="string">&#x27;The lion says &quot;roar&quot;&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(cat.speak(), <span class="string">&#x27;The cat says &quot;meow&quot;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行全部测试</span></span><br><span class="line">python manage.py <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 运行animal.tests模块下的所有测试</span></span><br><span class="line">python manage.py <span class="built_in">test</span> animals.tests</span><br><span class="line"><span class="comment"># 自动搜索animal包下的所有test_开头的测试文件，并运行测试</span></span><br><span class="line">python manage.py <span class="built_in">test</span> animals</span><br><span class="line"><span class="comment"># 仅运行一个测试用例</span></span><br><span class="line">python manage.py <span class="built_in">test</span> animals.tests.AnimalTestCase</span><br><span class="line"><span class="comment"># 仅运行一个测试用例下的测试点</span></span><br><span class="line">python manage.py <span class="built_in">test</span> animals.tests.AnimalTestCase.test_animals_can_speak</span><br><span class="line"><span class="comment"># 也可以自动搜索一个目录下的测试文件，并运行测试，跟第三个示例相似</span></span><br><span class="line">python manage.py <span class="built_in">test</span> animals/</span><br><span class="line"><span class="comment"># 甚至可以指定一个前缀，然后自动运行对应前缀的测试代码</span></span><br><span class="line">python manage.py <span class="built_in">test</span> --pattern=<span class="string">&quot;tests_*.py&quot;</span></span><br><span class="line"><span class="comment"># 并行运行测试</span></span><br><span class="line">python manage.py <span class="built_in">test</span> --parallel</span><br><span class="line"><span class="comment"># 运行测试并保存临时数据库</span></span><br><span class="line">python manage.py <span class="built_in">test</span> --keepdb</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>测试时不会使用真实数据库，测试运行完之后会自动删除临时数据库，除非指定一个参数<code>--keepdb</code>，指定了这个参数之后数据库会保存下来（SQLite数据库后端会保存为test_开头的文件），方便查看运行结果</li></ul><h1 id="接口和工具"><a href="#接口和工具" class="headerlink" title="接口和工具"></a>接口和工具</h1><h2 id="请求客户端"><a href="#请求客户端" class="headerlink" title="请求客户端"></a>请求客户端</h2><p>模拟浏览器发起请求，跟用requests模块类似，用来测试RestfulAPI很方便</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> Client</span><br><span class="line">c = Client()</span><br><span class="line">response = c.post(<span class="string">&#x27;/login/&#x27;</span>, &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;smith&#x27;</span>&#125;)</span><br><span class="line">response.status_code  <span class="comment"># 200</span></span><br><span class="line">response = c.get(<span class="string">&#x27;/customer/details/&#x27;</span>)</span><br><span class="line">response.content  <span class="comment"># b&#x27;&lt;!DOCTYPE html...&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li><code>enforce_csrf_checks</code>：启用csrf检查</li><li><code>HTTP_USER_AGENT</code>：指定UA</li><li>包括其他的<code>HTTP_HEADERS</code>都可以传递到Client</li></ul><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><ul><li><code>.get(path, data=None, follow=False, secure=False, **extra)</code></li><li><code>.post(path, data=None, content_type=MULTIPART_CONTENT, follow=False, secure=False, **extra)</code></li><li><code>.head(path, data=None, follow=False, secure=False, **extra)</code></li><li><code>.options(path, data=&#39;&#39;, content_type=&#39;application/octet-stream&#39;, follow=False, secure=False, **extra)</code></li><li><code>.put(path, data=&#39;&#39;, content_type=&#39;application/octet-stream&#39;, follow=False, secure=False, **extra)</code></li><li><code>.patch(path, data=&#39;&#39;, content_type=&#39;application/octet-stream&#39;, follow=False, secure=False, **extra)</code></li><li><code>.delete(path, data=&#39;&#39;, content_type=&#39;application/octet-stream&#39;, follow=False, secure=False, **extra)</code></li><li><code>.trace(path, follow=False, secure=False, **extra)</code></li><li><code>.login(**credentials)</code></li><li><code>.force_login(user, backend=None)</code></li><li><code>.logout()</code></li></ul><h4 id="get"><a href="#get" class="headerlink" title="get"></a>get</h4><ul><li>data：传递一个字典，会将请求URL拼接成 ?a=1&amp;b=2 这种类型</li><li>follow：跟踪重定向返回，此时返回值response会带有一个属性redirect_chain，这个属性可以看到所有重定向中经过的URL</li><li>secure：设置成True时会模拟成一个HTTPS请求</li></ul><h4 id="post"><a href="#post" class="headerlink" title="post"></a>post</h4><ul><li>data：请求的数据，可以传递文件对象</li><li>content_type：这个值会设置Content-Type请求头，具体可以设置的值参考Content-Type</li></ul><h4 id="trace"><a href="#trace" class="headerlink" title="trace"></a>trace</h4><p>用于模拟浏览器的diagnostic探针（Chrome浏览器会有这个请求，跟OPTIONS请求一起的）</p><h4 id="login"><a href="#login" class="headerlink" title="login"></a>login</h4><p>用于登录，登录之后client会带有cookies和session，之后可以用于测试所有需要登录的视图，要想提高这个接口的速度可以添加配置项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PASSWORD_HASHERS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.hashers.MD5PasswordHasher&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="force-login"><a href="#force-login" class="headerlink" title="force_login"></a>force_login</h4><p>也是用于登录，而且<code>is_active=False</code>的用户也可以登录，甚至不需要提供凭证也能登录。<br>在不做其他任何设置的话，这个接口速度也会比<code>login</code>快（因为密码哈希算法是很耗时的）</p><h3 id="持久化-属性"><a href="#持久化-属性" class="headerlink" title="持久化 属性"></a>持久化 属性</h3><ul><li><code>Client.cookies</code></li><li><code>Client.session</code></li></ul><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>不需要运行服务器也可以工作</li><li>请求路径不需要包含全路径，只需要<code>url</code>路由就行</li></ul><h2 id="请求响应Response"><a href="#请求响应Response" class="headerlink" title="请求响应Response"></a>请求响应Response</h2><p>响应对象来源于上一节中的请求方法</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li>client：请求的客户端，来源于上一节中的客户端对象</li><li>content：返回的内容，是一个bytes类型</li><li>context：渲染模板时传入的context值，是用于测试模板是否正确渲染的最重要属性。如果用的是其他的模板引擎，就要用context_data来访问</li><li>request：触发响应的请求对象，跟wsgi_request的不同是这个参数是一个字典，只包含一些基本的请求数据，比如端口、请求方法等</li><li>wsgi_request：生成响应的测试处理程序生成的WSGIRequest实例。（跟views.py里面定义的那些视图函数的request参数是一样的）</li><li>status_code：状态码</li><li>templates：响应所使用的模板对象，可以用<code>.name</code>获取模板文件名（路径）</li><li>resolver_match：响应所使用的视图函数，可以用<code>.func</code>获取视图函数，然后可以用<code>self.assertEqual(response.resolver_match.func, my_view)</code>来进行比对</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><code>.json(**kwargs)</code>：返回json格式</li></ul><h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>响应对象还可以像字典那样取值</li></ul><h2 id="测试用例类"><a href="#测试用例类" class="headerlink" title="测试用例类"></a>测试用例类</h2><h3 id="SimpleTestCase"><a href="#SimpleTestCase" class="headerlink" title="SimpleTestCase"></a>SimpleTestCase</h3><p>一个非常简单的测试用例类，是unittest.TestCase的一个子类。<br>如果你要做很多的数据库查询操作，就不要用这个类了，改为用 TransactionTestCase 或 TestCase（django的TestCase）</p><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><ul><li>allow_database_queries：是否允许数据库查询操作，默认是False。防止其他SimpleTestCase运行数据库查询的时候不在一个事务里面，可能是防冲突</li></ul><h4 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>要设置类变量，要用setUpClass和tearDownClass方法</li></ul><h3 id="TransactionTestCase"><a href="#TransactionTestCase" class="headerlink" title="TransactionTestCase"></a>TransactionTestCase</h3><p>继承自SimpleTestCase，多了一些数据库的操作。在每次测试开始时将数据库重置为已知状态，以便于测试和使用ORM。</p><h3 id="TestCase"><a href="#TestCase" class="headerlink" title="TestCase"></a>TestCase</h3><p>最常用的类，继承自TransactionTestCase，如果你的Django项目没有用到数据库，用SimpleTestCase会好很多。<br>里面的测试会封装在两个<code>atomic()</code>块中（一个便捷的在事务里面操作数据库的方法），一个包在TestCase外面，一个包在所有的test方法外。<br>如果要测试某些特定的数据库事务行为，请使用TransactionTestCase。</p><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h4><ul><li>setUpTestData：这个方法专门用于往数据库插入数据（创建模型数据），用这个方法会比用setUp快</li></ul><h4 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如果测试在没有事务支持的数据库上运行（例如，使用MyISAM引擎的MySQL），则在每次测试之前都会调用setUpTestData()，从而抵消了速度优势。</li><li>不要在测试方法中修改setUpTestData()中创建的任何对象。在类中完成设置工作后，再对内存对象的修改将会在其他测试方法之间持续。如果确实需要修改它们，可以在setUp中使用refresh_from_db()重新加载它们。（暂时没用过，不确保解释准确性，只做简单翻译）</li></ul><h3 id="LiveServerTestCase"><a href="#LiveServerTestCase" class="headerlink" title="LiveServerTestCase"></a>LiveServerTestCase</h3><p>这是一个比较特殊的类，他会在setUp的时候把服务器启动，tearDown的时候关闭服务器，从名字上也可以看出来，这个类下面的测试都是跟服务相关联的，用这个类可以使得Django的虚拟客户端（上面说的那个）或者<strong>Selenium客户端</strong>测试起来更加的快捷方便，这个类可以用在功能测试上（官方也是说很适合用在功能测试上）</p><h4 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h4><ul><li>live_server_url：服务器的监听地址，IP都是localhost，端口会用一个可以使用的端口</li></ul><h4 id="官方示例"><a href="#官方示例" class="headerlink" title="官方示例"></a>官方示例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.staticfiles.testing <span class="keyword">import</span> StaticLiveServerTestCase</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.firefox.webdriver <span class="keyword">import</span> WebDriver</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MySeleniumTests</span>(<span class="title class_ inherited__">StaticLiveServerTestCase</span>):</span><br><span class="line">    fixtures = [<span class="string">&#x27;user-data.json&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUpClass</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">super</span>(MySeleniumTests, cls).setUpClass()</span><br><span class="line">        cls.selenium = WebDriver()</span><br><span class="line">        cls.selenium.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tearDownClass</span>(<span class="params">cls</span>):</span><br><span class="line">        cls.selenium.quit()</span><br><span class="line">        <span class="built_in">super</span>(MySeleniumTests, cls).tearDownClass()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_login</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.selenium.get(<span class="string">&#x27;%s%s&#x27;</span> % (<span class="variable language_">self</span>.live_server_url, <span class="string">&#x27;/login/&#x27;</span>))</span><br><span class="line">        username_input = <span class="variable language_">self</span>.selenium.find_element_by_name(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        username_input.send_keys(<span class="string">&#x27;myuser&#x27;</span>)</span><br><span class="line">        password_input = <span class="variable language_">self</span>.selenium.find_element_by_name(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">        password_input.send_keys(<span class="string">&#x27;secret&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.selenium.find_element_by_xpath(<span class="string">&#x27;//input[@value=&quot;Log in&quot;]&#x27;</span>).click()</span><br></pre></td></tr></table></figure><h4 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>尽量避免在多个测试中同时操作数据库（在并行测试的模式下）</li></ul><h3 id="特殊事项"><a href="#特殊事项" class="headerlink" title="特殊事项"></a>特殊事项</h3><h4 id="client对象自动初始化"><a href="#client对象自动初始化" class="headerlink" title="client对象自动初始化"></a>client对象自动初始化</h4><p>任何的测试用例类都会自带一个<code>self.client</code>属性，所以你不需要每次都自己定义一个client，除非你要在一个测试里面用多个客户端来进行测试。并且每个测试的client对象是互不干扰的，不用担心session和cookie会影响到别的测试。</p><h4 id="自定义client对象"><a href="#自定义client对象" class="headerlink" title="自定义client对象"></a>自定义client对象</h4><p>你可以定义一个继承自Client类的子类，然后在你的TestCase下设置一个类变量<code>client_class</code>赋值为你的自定义Client类</p><h4 id="预加载数据"><a href="#预加载数据" class="headerlink" title="预加载数据"></a>预加载数据</h4><p>可以设置TransactionTestCase类的一个类变量值<code>fixtures</code>，这个值是一个列表类型，里面的元素可以是一个文件名，或者是一个含有fixtures的Django APP。<br>这个功能暂时不做过多解释，知道有什么用就行。</p><h4 id="在不同的跟路由配置下运行"><a href="#在不同的跟路由配置下运行" class="headerlink" title="在不同的跟路由配置下运行"></a>在不同的跟路由配置下运行</h4><p>你的程序（或者说项目）如果要给其他人用，或者允许别人部署的时候可以做很多的自定义配置，那你就不能只单纯地认为你的测试或者说你的项目在你自己配置好的路由下能正常运行就算是验收通过了，你还要去确认在别的路由配置下，仍能正常访问和使用各个功能，所以做其他的路由测试非常重要。一般如果又要在自己的配置下能正常运行，又要在自定义配置下运行，那你的测试只需要测试自定义配置下的情况就可以了。自定义配置的话，能配多奇葩就多奇葩，因为你无法预测用户的行为，你只能去预防最坏的情况。</p><p>要设置其他的路由（或者其他配置项也可以，修改参数就行），就要在你的TestCase或者其下的测试方法用一个装饰器<code>@override_settings(ROOT_URLCONF=...)</code>。</p><h4 id="多数据库"><a href="#多数据库" class="headerlink" title="多数据库"></a>多数据库</h4><p>如果你的项目用到了多个数据库，就要设置一个类变量<code>multi_db = True</code>，他会在每次测试之前清空所有数据库。如果为False，则整个测试流程只会用到<code>settings.py</code>里面的default数据库。</p><h4 id="覆盖配置项"><a href="#覆盖配置项" class="headerlink" title="覆盖配置项"></a>覆盖配置项</h4><p><strong>不要直接修改<code>django.conf.settings</code>里面的配置项</strong>，否则你剩下的测试都会使用新的配置项。</p><p>代码示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.settings(LOGIN_URL=<span class="string">&#x27;/other/login/&#x27;</span>):</span><br><span class="line">    response = <span class="variable language_">self</span>.client.get(<span class="string">&#x27;/sekrit/&#x27;</span>)</span><br><span class="line">    <span class="variable language_">self</span>.assertRedirects(response, <span class="string">&#x27;/other/login/?next=/sekrit/&#x27;</span>)</span><br></pre></td></tr></table></figure><p>或者仅添加（后添加、前添加）、修改某个值（对于列表类型的配置项有用），可以使用另一个方法（注意里面的key的含义）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.modify_settings(MIDDLEWARE=&#123;</span><br><span class="line">    <span class="string">&#x27;append&#x27;</span>: <span class="string">&#x27;django.middleware.cache.FetchFromCacheMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;prepend&#x27;</span>: <span class="string">&#x27;django.middleware.cache.UpdateCacheMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;remove&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">&#125;):</span><br><span class="line">    response = <span class="variable language_">self</span>.client.get(<span class="string">&#x27;/&#x27;</span>)</span><br></pre></td></tr></table></figure><p>还有如前面所说的<code>@override_settings</code>装饰器，前面已做过介绍，这里不再赘述。<br>另外还有一个跟<code>modify_settings</code>一样用法的装饰器<code>@modify_settings</code>，就是对整个test或TestCase都进行修改的方法。</p><p><strong>override_settings要在modify_settings之前。</strong></p><p>重写设置时，请确保正确处理应用程序代码使用缓存或类似功能的情况，即使更改了设置，该功能也会保留状态。Django提供<code>django.test.signals.setting_changed</code>信号，允许您注册回调以在设置更改时清除或重置状态。<br>Django本身使用此信号重置各种数据：</p><div class="table-container"><table><thead><tr><th>Overridden settings</th><th>Data reset</th></tr></thead><tbody><tr><td>TEMPLATES</td><td>Template engines</td></tr><tr><td>SERIALIZATION_MODULES</td><td>Serializers cache</td></tr><tr><td>LOCALE_PATHS, LANGUAGE_CODE</td><td>Default translation and loaded translations</td></tr><tr><td>MEDIA_ROOT, DEFAULT_FILE_STORAGE</td><td>Default file storage</td></tr></tbody></table></div><h4 id="邮件"><a href="#邮件" class="headerlink" title="邮件"></a>邮件</h4><p>如果你用的是Django的TestCase类（包括子类），那所有类运行前都会清空测试邮件的outbox</p><h2 id="Assertions断言"><a href="#Assertions断言" class="headerlink" title="Assertions断言"></a>Assertions断言</h2><p>除了Python标准库unittest里面的那些断言之外，Django还提供了很多特有的断言方法。</p><p>SimpleTestCase（及其子类）方法：</p><ul><li><code>.assertRaisesMessage(expected_exception, expected_message, callable, *args, **kwargs)</code></li><li><code>.assertFieldOutput(fieldclass, valid, invalid, field_args=None, field_kwargs=None, empty_value=&#39;&#39;)</code></li><li><code>.assertFormError(response, form, field, errors, msg_prefix=&#39;&#39;)</code></li><li><code>.assertFormsetError(response, formset, form_index, field, errors, msg_prefix=&#39;&#39;)</code></li><li><code>.assertContains(response, text, count=None, status_code=200, msg_prefix=&#39;&#39;, html=False)</code></li><li><code>.assertNotContains(response, text, status_code=200, msg_prefix=&#39;&#39;, html=False)</code></li><li><code>.assertTemplateUsed(response, template_name, msg_prefix=&#39;&#39;, count=None)</code></li><li><code>.assertTemplateNotUsed(response, template_name, msg_prefix=&#39;&#39;)</code></li><li><code>.assertRedirects(response, expected_url, status_code=302, target_status_code=200, msg_prefix=&#39;&#39;, fetch_redirect_response=True)</code></li><li><code>.assertHTMLEqual(html1, html2, msg=None)</code></li><li><code>.assertHTMLNotEqual(html1, html2, msg=None)</code></li><li><code>.assertXMLEqual(xml1, xml2, msg=None)</code></li><li><code>.assertXMLNotEqual(xml1, xml2, msg=None)</code></li><li><code>.assertInHTML(needle, haystack, count=None, msg_prefix=&#39;&#39;)</code></li><li><code>.assertJSONEqual(raw, expected_data, msg=None)</code></li><li><code>.assertJSONNotEqual(raw, expected_data, msg=None)</code></li></ul><p>TransactionTestCase（及其子类）方法：</p><ul><li><code>.assertQuerysetEqual(qs, values, transform=repr, ordered=True, msg=None)</code></li><li><code>.assertNumQueries(num, func, *args, **kwargs)</code></li></ul><h3 id="assertRaisesMessage"><a href="#assertRaisesMessage" class="headerlink" title="assertRaisesMessage"></a>assertRaisesMessage</h3><p>调用callable并且匹配exception类型和exception的message，如果匹配不到就是fail。<br>这个方法是<code>unittest.TestCase.assertRaisesRegex()</code>的简单实现，这个方法的<code>expected_message</code>参数不是一个正则表达式。<br>可以不传callable参数，这时候他就变成一个上下文管理器，示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.assertRaisesMessage(ValueError, <span class="string">&#x27;invalid literal for int()&#x27;</span>):</span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="assertFieldOutput"><a href="#assertFieldOutput" class="headerlink" title="assertFieldOutput"></a>assertFieldOutput</h3><p>判断表单的输入是否正确。</p><p>参数：</p><ul><li>fieldclass：需要测试的字段类</li><li>valid：期望的字段值，字典类型</li><li>invalid：当数据不正确时的提示信息，字典类型</li><li>field_args：实例化字段类时要传递的参数，根据你要测试的字段类填写</li><li>field_kwargs：跟field_args相同作用，传递关键字参数</li><li>empty_value：当字段为空时期望得到的信息</li></ul><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">self</span>.assertFieldOutput(EmailField, &#123;<span class="string">&#x27;a@a.com&#x27;</span>: <span class="string">&#x27;a@a.com&#x27;</span>&#125;, &#123;<span class="string">&#x27;aaa&#x27;</span>: [<span class="string">&#x27;Enter a valid email address.&#x27;</span>]&#125;)</span><br></pre></td></tr></table></figure><h3 id="assertFormError"><a href="#assertFormError" class="headerlink" title="assertFormError"></a>assertFormError</h3><p>判断表单的某个字段是不是会报<code>errors</code>（列表）参数种的错误。</p><p>参数：</p><ul><li>form：Form对象</li><li>field：字段的name，就是定义字段时的变量名，如果field有一个值是None的话，就会去检查non-field错误，你可以通过<code>form.non_field_errors()</code>获取那些non-field错误</li><li>errors：错误信息，是一个字符串类型，或者包含你想要测试的所有错误信息的列表</li></ul><h3 id="assertFormsetError"><a href="#assertFormsetError" class="headerlink" title="assertFormsetError"></a>assertFormsetError</h3><p>跟<code>assertFormError</code>差不多，不过是对FormSet对象的一个断言。</p><p>参数：</p><ul><li>form_index：FormSet中的表单索引，如果为None，就会去检查non-form错误，你可以通过<code>formset.non_form_errors()</code>获取那些non-form错误</li><li>field：与assertFormError一样</li><li>errors：与assertFormError一样</li></ul><h3 id="assertContains"><a href="#assertContains" class="headerlink" title="assertContains"></a>assertContains</h3><p>用来判断Response对象的状态码和是否包含<code>text</code>参数的内容。</p><p>参数：</p><ul><li>text：预期包含的内容</li><li>count：如果不为None，则表示预期会包含多少个text的内容</li><li>html：如果为True，代表对比的内容为HTML格式字符串，在大多数情况下，空格被忽略，属性排序不重要</li></ul><h3 id="assertNotContains"><a href="#assertNotContains" class="headerlink" title="assertNotContains"></a>assertNotContains</h3><p>作用跟assertContains相反。除了没有count参数之外，其他的参数含义跟assertContains一样。</p><h3 id="assertTemplateUsed"><a href="#assertTemplateUsed" class="headerlink" title="assertTemplateUsed"></a>assertTemplateUsed</h3><p>判断response所使用的模板是不是预期中的模板。<br>count参数是一个整数，表示应该呈现模板的次数。默认值为None，这意味着模板应渲染一次或多次。</p><p>也可以用上下文管理器的方式调用，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.assertTemplateUsed(<span class="string">&#x27;index.html&#x27;</span>):</span><br><span class="line">    render_to_string(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.assertTemplateUsed(template_name=<span class="string">&#x27;index.html&#x27;</span>):</span><br><span class="line">    render_to_string(<span class="string">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="assertTemplateNotUsed"><a href="#assertTemplateNotUsed" class="headerlink" title="assertTemplateNotUsed"></a>assertTemplateNotUsed</h3><p>与assertTemplateUsed的作用相反。</p><h3 id="assertRedirects"><a href="#assertRedirects" class="headerlink" title="assertRedirects"></a>assertRedirects</h3><p>用于判断response是否如预期一样进行了重定向。<br>如果你的请求使用了<code>follow</code>参数，则<code>expect_url</code>和<code>target_status_code</code>会是最终重定向到的url和状态码。</p><p>参数：</p><ul><li>expected_url：期望跳转到的目标地址</li><li>status_code：期望访问原始url时返回的状态码，默认是302</li><li>target_status_code：期望跳转后的url返回的状态码，默认是200</li><li>fetch_redirect_response：如果为False，则不会加载最终页面。由于测试客户端无法获取外部url，如果expected_url不是Django应用程序的一部分，这个就很有用。</li></ul><h3 id="assertHTMLEqual"><a href="#assertHTMLEqual" class="headerlink" title="assertHTMLEqual"></a>assertHTMLEqual</h3><p>判断两个html文本是否一样，有一些注意事项：</p><ul><li>HTML的节点tag前后的空格和换行会被忽略</li><li>所有类型的空白符都是一样的，比如tab和空格</li><li>所有的标签都是隐式闭合的</li><li>HTML节点的属性排序不重要</li><li>没有值的属性，他的值等于他的名字</li></ul><p>以下的例子是正确的例子，不会触发AssertionError：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">self</span>.assertHTMLEqual(</span><br><span class="line">    <span class="string">&#x27;&lt;p&gt;Hello &lt;b&gt;world!&lt;/p&gt;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;&lt;p&gt;</span></span><br><span class="line"><span class="string">        Hello   &lt;b&gt;world! &lt;b/&gt;</span></span><br><span class="line"><span class="string">    &lt;/p&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="variable language_">self</span>.assertHTMLEqual(</span><br><span class="line">    <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; id=&quot;id_accept_terms&quot; /&gt;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&lt;input id=&quot;id_accept_terms&quot; type=&quot;checkbox&quot; checked&gt;&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>传递的两个参数都必须是有效的HTML格式字符串，否则会触发AssertionError</strong></p><h3 id="assertHTMLNotEqual"><a href="#assertHTMLNotEqual" class="headerlink" title="assertHTMLNotEqual"></a>assertHTMLNotEqual</h3><p>跟assertHTMLEqual作用相反。</p><h3 id="assertQuerysetEqual"><a href="#assertQuerysetEqual" class="headerlink" title="assertQuerysetEqual"></a>assertQuerysetEqual</h3><p>判断QuerySet是不是返回了特定的列表</p><p>参数：</p><ul><li>transform：用于转换qs和期望值的函数，默认是repr，就变成了字符串对比</li><li>ordered：默认是True， 如果qs的排序没定义，且这个值为False，且比较的是多个值，则会抛出ValueError错误</li></ul><h3 id="assertNumQueries"><a href="#assertNumQueries" class="headerlink" title="assertNumQueries"></a>assertNumQueries</h3><p>声明当用*args和**kwargs调用func时，将执行num个数据库查询。</p><p>如果kwargs中存在一个“using”键，它将用作检查查询数的数据库别名。如果希望使用using参数调用函数，可以通过使用lambda包装调用来添加额外的参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">self</span>.assertNumQueries(<span class="number">7</span>, <span class="keyword">lambda</span>: my_function(using=<span class="number">7</span>))</span><br></pre></td></tr></table></figure><p>也可以用上下文管理器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.assertNumQueries(<span class="number">2</span>):</span><br><span class="line">    Person.objects.create(name=<span class="string">&quot;Aaron&quot;</span>)</span><br><span class="line">    Person.objects.create(name=<span class="string">&quot;Daniel&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="注意事项-6"><a href="#注意事项-6" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>大部分断言方法可以用<code>msg_prefix</code>参数指定断言失败时的提示消息前缀</li></ul><h2 id="给测试方法打标签"><a href="#给测试方法打标签" class="headerlink" title="给测试方法打标签"></a>给测试方法打标签</h2><p>没什么特别需要说明的地方，直接上例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> tag</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SampleTestCase</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tag(<span class="params"><span class="string">&#x27;fast&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_fast</span>(<span class="params">self</span>):</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tag(<span class="params"><span class="string">&#x27;slow&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_slow</span>(<span class="params">self</span>):</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tag(<span class="params"><span class="string">&#x27;slow&#x27;</span>, <span class="string">&#x27;core&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_slow_but_core</span>(<span class="params">self</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">@tag(<span class="params"><span class="string">&#x27;slow&#x27;</span>, <span class="string">&#x27;core&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SampleTestCase</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>然后可以在命令行运行测试的时候传递参数筛选需要测试的那些测试方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只运行fast标签的测试</span></span><br><span class="line">python manage.py test --tag=fast</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行fast和core测试</span></span><br><span class="line">python manage.py test --tag=fast --tag=core</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">排除slow测试</span></span><br><span class="line">python manage.py test --tag=core --exclude-tag=slow</span><br></pre></td></tr></table></figure><p>exclude-tag比tag的优先级要高，所以如果你的某个测试含有了tag的标签，并且也包含了exclude-tag的标签，那这个测试就不会运行。</p><h2 id="邮件发送测试"><a href="#邮件发送测试" class="headerlink" title="邮件发送测试"></a>邮件发送测试</h2><p>测试的时候肯定不会想要每次运行测试都发一封真实的邮件，所以Django的邮件测试会运行在一个虚拟的outbox。<br>在测试运行期间，每个传出的电子邮件都保存在<code>django.core.mail.outbox</code>中。这是已发送的所有EmailMessage实例的简单列表。<code>outbox</code>是一个特殊的属性，仅在使用locmem邮件后端时才创建。它通常不作为<code>django.core.mail</code>模块的一部分存在，您不能直接导入它。下面的代码显示了如何正确访问此属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core <span class="keyword">import</span> mail</span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个TestCase运行前都会清空outbox，也可以像下面的代码一样手动清空</span></span><br><span class="line">mail.outbox = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EmailTest</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_send_email</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># Send message.</span></span><br><span class="line">        mail.send_mail(</span><br><span class="line">            <span class="string">&#x27;Subject here&#x27;</span>, <span class="string">&#x27;Here is the message.&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;from@example.com&#x27;</span>, [<span class="string">&#x27;to@example.com&#x27;</span>],</span><br><span class="line">            fail_silently=<span class="literal">False</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Test that one message has been sent.</span></span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(<span class="built_in">len</span>(mail.outbox), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Verify that the subject of the first message is correct.</span></span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(mail.outbox[<span class="number">0</span>].subject, <span class="string">&#x27;Subject here&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="服务器命令行管理命令"><a href="#服务器命令行管理命令" class="headerlink" title="服务器命令行管理命令"></a>服务器命令行管理命令</h2><p>就是运行<code>python manage.py</code>的那些命令，官方文档也没有过多介绍，直接看代码示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.management <span class="keyword">import</span> call_command</span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"><span class="keyword">from</span> django.utils.six <span class="keyword">import</span> StringIO</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ClosepollTest</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_command_output</span>(<span class="params">self</span>):</span><br><span class="line">        out = StringIO()</span><br><span class="line">        call_command(<span class="string">&#x27;closepoll&#x27;</span>, stdout=out)</span><br><span class="line">        <span class="variable language_">self</span>.assertIn(<span class="string">&#x27;Expected output&#x27;</span>, out.getvalue())</span><br></pre></td></tr></table></figure><h2 id="跳过部分测试"><a href="#跳过部分测试" class="headerlink" title="跳过部分测试"></a>跳过部分测试</h2><p>当你提前知道你的某些测试会测试失败的时候你就可以用这个功能。比如你的某个测试需要特定的库才能正常运行，这时你就可以用<code>@skipIf</code>装饰器装饰你的测试，并且测试的时候会报告给你哪个测试被跳过了还有跳过的原因。</p><p>除了<code>unittest</code>内置的一些跳过装饰器（<code>.skipIf</code>，<code>.skipUnless</code>）之外，Django还内置了其他的装饰器，这些装饰器不是用来检测布尔值，而是用来检测数据库功能的，如果测试的数据库不支持你指定的功能，那就会跳过测试。要想查看数据库的所有特性（功能），可以去看一下<code>django.db.backends.BaseDatabaseFeatures</code>这个类</p><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyTests</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line"><span class="meta">    @skipIfDBFeature(<span class="params"><span class="string">&#x27;supports_transactions&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_transaction_behavior</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># ... conditional test code</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyTests</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line"><span class="meta">    @skipUnlessDBFeature(<span class="params"><span class="string">&#x27;supports_transactions&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_transaction_behavior</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># ... conditional test code</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>这篇文档中可能有一些接口或者方法没有介绍到，常用或者有用的都介绍到了，剩下一些适用面较少、不常见的内容，需要移步到官方文档查看其介绍：<a href="https://docs.djangoproject.com/en/1.11/topics/testing/" title="Django Testing">Django Testing</a>环境变量了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM使用手册</title>
      <link href="/2023/11/18/VIM%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
      <url>/2023/11/18/VIM%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h1><p>在<code>normal</code>模式下按下<code>/</code>即可进入查找模式，输入要查找的字符串并按下回车。 <code>Vim</code>会跳转到第一个匹配。按下<code>n</code>查找下一个，按下<code>N</code>查找上一个。</p><p><code>Vim</code>查找支持正则表达式，例如<code>/vim$</code>匹配行尾的<code>&quot;vim&quot;</code>。 需要查找特殊字符需要转义，例如<code>/vim\$</code>匹配<code>&quot;vim$&quot;</code>。</p><h2 id="大小写敏感查找"><a href="#大小写敏感查找" class="headerlink" title="大小写敏感查找"></a>大小写敏感查找</h2><p>在查找模式中加入<code>\c</code>表示大小写不敏感查找，<code>\C</code>表示大小写敏感查找。例如：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/foo\<span class="keyword">c</span></span><br></pre></td></tr></table></figure><p>将会查找所有的<code>&quot;foo&quot;</code>,<code>&quot;FOO&quot;</code>,<code>&quot;Foo&quot;</code>等字符串。</p><h2 id="大小写敏感配置"><a href="#大小写敏感配置" class="headerlink" title="大小写敏感配置"></a>大小写敏感配置</h2><p>Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot; 设置默认进行大小写不敏感查找</span><br><span class="line">set ignorecase</span><br><span class="line">&quot; 如果有一个大写字母，则切换到大小写敏感查找</span><br><span class="line">set smartcase</span><br></pre></td></tr></table></figure><p>将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效</p><h2 id="查找当前单词"><a href="#查找当前单词" class="headerlink" title="查找当前单词"></a>查找当前单词</h2><p>在normal模式下按下<code>*</code>即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为<code>foo</code>， 可以匹配<code>foo bar</code>中的<code>foo</code>，但不可匹配<code>foobar</code>中的<code>foo</code>。 这在查找函数名、变量名时非常有用。</p><p>按下<code>g*</code>即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即<code>foo bar</code>和<code>foobar</code>中的<code>foo</code>均可被匹配到。</p><h1 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h1><p>语法为<code>:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</code>，<br>全局替换：<code>:%s/源字符串/目的字符串/g</code>。</p><p>例如<code>:%s/foo/bar/g</code>会在全局范围(<code>%</code>)查找<code>foo</code>并替换为<code>bar</code>，所有出现都会被替换（<code>g</code>）</p><h2 id="基本的替换"><a href="#基本的替换" class="headerlink" title="基本的替换"></a>基本的替换</h2><p><code>:s/vivian/sky/</code> 替换当前行第一个 vivian 为 sky<br><code>:s/vivian/sky/g</code> 替换当前行所有 vivian 为 sky<br><code>:n,$s/vivian/sky/</code> 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky<br><code>:n,$s/vivian/sky/g</code> 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky<br>（n 为数字，若 n 为 .，表示从当前行开始到最后一行）<br><code>:%s/vivian/sky/</code>（等同于 :g/vivian/s//sky/）替换每一行的第一个 vivian 为 sky<br><code>:%s/vivian/sky/g</code>（等同于 :g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky<br>可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符<br><code>:s#vivian/#sky/#</code> 替换当前行第一个 vivian/ 为 sky/<br><code>:%s+/oradata/apras/+/user01/apras1+</code> （使用+ 来替换 / ）： /oradata/apras/替换成/user01/apras1/</p><h2 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h2><p>作用范围分为当前行、全文、选区等等。</p><p>当前行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/foo/bar/g</span><br></pre></td></tr></table></figure><p>全文：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/g</span><br></pre></td></tr></table></figure><p>选区，在Visual模式下选择区域后输入<code>:</code>，Vim即可自动补全为 <code>:&#39;&lt;,&#39;&gt;</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&#x27;&lt;,&#x27;&gt;s/foo/bar/g</span><br></pre></td></tr></table></figure><p>2-11行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:5,12s/foo/bar/g</span><br></pre></td></tr></table></figure><p>当前行.与接下来两行+2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:.,+2s/foo/bar/g</span><br></pre></td></tr></table></figure><h2 id="替换标志"><a href="#替换标志" class="headerlink" title="替换标志"></a>替换标志</h2><p>上文中命令结尾的<code>g</code>即是替换标志之一，表示全局global替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：</p><p>空替换标志表示只替换从光标位置开始，目标的第一次出现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar</span><br></pre></td></tr></table></figure><p><code>i</code>表示大小写不敏感查找，<code>I</code>表示大小写敏感：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/i</span><br><span class="line"># 等效于模式中的\c（不敏感）或\C（敏感）</span><br><span class="line">:%s/foo\c/bar</span><br></pre></td></tr></table></figure><p><code>c</code>表示需要确认，例如全局查找<code>&quot;foo&quot;</code>替换为<code>&quot;bar&quot;</code>并且需要确认：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/gc</span><br></pre></td></tr></table></figure><p>回车后Vim会将光标移动到每一次<code>&quot;foo&quot;</code>出现的位置，并提示<code>replace with bar (y/n/a/q/l/^E/^Y)?</code>。<br>按下<code>y</code>表示替换，<code>n</code>表示不替换，<code>a</code>表示替换所有，<code>q</code>表示退出查找模式， <code>l</code>表示替换当前位置并退出。<code>^E</code>与<code>^Y</code>是光标移动快捷键，参考： <a href="http://harttle.com/2015/11/07/vim-cursor.html" title="Vim中如何快速进行光标移动">Vim中如何快速进行光标移动</a></p><h1 id="设置缩进"><a href="#设置缩进" class="headerlink" title="设置缩进"></a>设置缩进</h1><p><code>set autoindent</code>设置自动缩进<br><code>set shiftwidth=4</code>设置自动缩进空格数<br><code>set tabstop=4</code>设置一个tab等于多少个空格的宽度<br><code>set softtabstop=4</code>设置软制表符，软制表符表示在Insert模式的时候按退格键时退回缩进的长度，当使用expandtab 时特别有用。<br><code>set expandtab</code>将tab变成空格<br><code>:%retab!</code>将文件中现有的tab变成空格</p><h1 id="鼠标功能"><a href="#鼠标功能" class="headerlink" title="鼠标功能"></a>鼠标功能</h1><p><code>set mouse=a</code>启用鼠标功能<br><code>set mouse-=a</code>停用鼠标功能</p><p>鼠标模式：</p><ul><li>n：普通模式</li><li>v：可视模式</li><li>i：插入模式</li><li>c：命令行模式</li><li>h：在帮助文件里，以上所有模式</li><li>a：以上所有模式</li><li>r：跳过|lit-enter|提示</li><li>A：在可视模式下自动选择</li></ul><p>解决鼠标模式右键不能粘贴问题<br>用鼠标和可视模式复制/粘贴 (‘<code>mouse</code>‘ 选项必须设置，见上):</p><ul><li>在文本的第一个字符上按鼠标左键，移动鼠标到文本的最后一个字母，然后释放左<br>键。这会启动可视模式并高亮选择区域。</li><li>按 <code>&quot;y&quot;</code> 抽出可视文本到无名寄存器里。</li><li>在要插入的位置上按鼠标左键。</li><li>按鼠标中键（滚轮）。</li></ul><h1 id="折叠代码"><a href="#折叠代码" class="headerlink" title="折叠代码"></a>折叠代码</h1><p>![](<a href="https://s11.ax1x.com/2024/01/09/pFpmIbt.png">https://s11.ax1x.com/2024/01/09/pFpmIbt.png</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VIM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL新手入门</title>
      <link href="/2023/11/06/PostgreSQL%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8/"/>
      <url>/2023/11/06/PostgreSQL%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><p>首先，安装PostgreSQL客户端。</p><blockquote><p>sudo apt-get install postgresql-client</p></blockquote><p>然后，安装PostgreSQL服务器。</p><blockquote><p>sudo apt-get install postgresql</p></blockquote><p>正常情况下，安装完成后，PostgreSQL服务器会自动在本机的5432端口开启。</p><p>如果还想安装图形管理界面，可以运行下面命令，但是本文不涉及这方面内容。</p><blockquote><p>sudo apt-get install pgadmin3</p></blockquote><h1 id="二、添加新用户和新数据库"><a href="#二、添加新用户和新数据库" class="headerlink" title="二、添加新用户和新数据库"></a>二、添加新用户和新数据库</h1><p>初次安装后，默认生成一个名为postgres的数据库和一个名为postgres的数据库用户。这里需要注意的是，同时还生成了一个名为postgres的Linux系统用户。</p><p>下面，我们使用postgres用户，来生成其他用户和新数据库。好几种方法可以达到这个目的，这里介绍两种。</p><p><strong>第一种方法，使用PostgreSQL控制台。</strong></p><p>首先，新建一个Linux新用户，可以取你想要的名字，这里为dbuser。</p><blockquote><p>sudo adduser dbuser</p></blockquote><p>然后，切换到postgres用户。</p><blockquote><p>sudo su - postgres</p></blockquote><p>下一步，使用psql命令登录PostgreSQL控制台。</p><blockquote><p>psql</p></blockquote><p>这时相当于系统用户postgres以同名数据库用户的身份，登录数据库，这是不用输入密码的。如果一切正常，系统提示符会变为”postgres=#”，表示这时已经进入了数据库控制台。以下的命令都在控制台内完成。</p><p>第一件事是使用\password命令，为postgres用户设置一个密码。</p><blockquote><p>\password postgres</p></blockquote><p>第二件事是创建数据库用户dbuser（刚才创建的是Linux系统用户），并设置密码。</p><blockquote><p>CREATE USER dbuser WITH PASSWORD ‘password’;</p></blockquote><p>第三件事是创建用户数据库，这里为exampledb，并指定所有者为dbuser。</p><blockquote><p>CREATE DATABASE exampledb OWNER dbuser;</p></blockquote><p>第四件事是将exampledb数据库的所有权限都赋予dbuser，否则dbuser只能登录控制台，没有任何数据库操作权限。</p><blockquote><p>GRANT ALL PRIVILEGES ON DATABASE exampledb to dbuser;</p></blockquote><p>最后，使用\q命令退出控制台（也可以直接按ctrl+D）。</p><blockquote><p>\q</p></blockquote><p><strong>第二种方法，使用shell命令行。</strong></p><p>添加新用户和新数据库，除了在PostgreSQL控制台内，还可以在shell命令行下完成。这是因为PostgreSQL提供了命令行程序createuser和createdb。还是以新建用户dbuser和数据库exampledb为例。</p><p>首先，创建数据库用户dbuser，并指定其为超级用户。</p><blockquote><p>sudo -u postgres createuser —superuser dbuser</p></blockquote><p>然后，登录数据库控制台，设置dbuser用户的密码，完成后退出控制台。</p><blockquote><p>sudo -u postgres psql</p><p>\password dbuser</p><p>\q</p></blockquote><p>接着，在shell命令行下，创建数据库exampledb，并指定所有者为dbuser。</p><blockquote><p>sudo -u postgres createdb -O dbuser exampledb</p></blockquote><h1 id="三、登录数据库"><a href="#三、登录数据库" class="headerlink" title="三、登录数据库"></a>三、登录数据库</h1><p>添加新用户和新数据库以后，就要以新用户的名义登录数据库，这时使用的是psql命令。</p><blockquote><p>psql -U dbuser -d exampledb -h 127.0.0.1 -p 5432</p></blockquote><p>上面命令的参数含义如下：-U指定用户，-d指定数据库，-h指定服务器，-p指定端口。</p><p>输入上面命令以后，系统会提示输入dbuser用户的密码。输入正确，就可以登录控制台了。</p><p>psql命令存在简写形式。如果当前Linux系统用户，同时也是PostgreSQL用户，则可以省略用户名（-U参数的部分）。举例来说，我的Linux系统用户名为ruanyf，且PostgreSQL数据库存在同名用户，则我以ruanyf身份登录Linux系统后，可以直接使用下面的命令登录数据库，且不需要密码。</p><blockquote><p>psql exampledb</p></blockquote><p>此时，如果PostgreSQL内部还存在与当前系统用户同名的数据库，则连数据库名都可以省略。比如，假定存在一个叫做ruanyf的数据库，则直接键入psql就可以登录该数据库。</p><blockquote><p>psql</p></blockquote><p>另外，如果要恢复外部数据，可以使用下面的命令。</p><blockquote><p>psql exampledb &lt; exampledb.sql</p></blockquote><h1 id="四、控制台命令"><a href="#四、控制台命令" class="headerlink" title="四、控制台命令"></a>四、控制台命令</h1><p>除了前面已经用到的\password命令（设置密码）和\q命令（退出）以外，控制台还提供一系列其他命令。</p><blockquote><ul><li>\h：查看SQL命令的解释，比如\h select。</li><li>\?：查看psql命令列表。</li><li>\l：列出所有数据库。</li><li>\c [database_name]：连接其他数据库。</li><li>\d：列出当前数据库的所有表格。</li><li>\d [table_name]：列出某一张表格的结构。</li><li>\du：列出所有用户。</li><li>\e：打开文本编辑器。</li><li>\conninfo：列出当前数据库和连接的信息。</li></ul></blockquote><h1 id="五、数据库操作"><a href="#五、数据库操作" class="headerlink" title="五、数据库操作"></a>五、数据库操作</h1><p>基本的数据库操作，就是使用一般的SQL语言。</p><blockquote><p># 创建新表<br>CREATE TABLE user_tbl(name VARCHAR(20), signup_date DATE);</p><p># 插入数据<br>INSERT INTO user_tbl(name, signup_date) VALUES(‘张三’, ‘2013-12-22’);</p><p># 选择记录<br>SELECT * FROM user_tbl;</p><p># 更新数据<br>UPDATE user_tbl set name = ‘李四’ WHERE name = ‘张三’;</p><p># 删除记录<br>DELETE FROM user_tbl WHERE name = ‘李四’ ;</p><p># 添加栏位<br>ALTER TABLE user_tbl ADD email VARCHAR(40);</p><p># 更新结构<br>ALTER TABLE user_tbl ALTER COLUMN signup_date SET NOT NULL;</p><p># 更名栏位<br>ALTER TABLE user_tbl RENAME COLUMN signup_date TO signup;</p><p># 删除栏位<br>ALTER TABLE user_tbl DROP COLUMN email;</p><p># 表格更名<br>ALTER TABLE user_tbl RENAME TO backup_tbl;</p><p># 删除表格<br>DROP TABLE IF EXISTS backup_tbl;</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> PostgreSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全基线-弱密码检测</title>
      <link href="/2023/11/01/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF-%E5%BC%B1%E5%AF%86%E7%A0%81%E6%A3%80%E6%B5%8B/"/>
      <url>/2023/11/01/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF-%E5%BC%B1%E5%AF%86%E7%A0%81%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>检测项</th><th>检测项描述</th><th>处理建议</th><th>检测规则</th><th>威胁等级</th></tr></thead><tbody><tr><td>Tomcat 弱口令检测</td><td>Tomcat 存在弱口令，攻击者可以部署 war 文件，导致控制服务器；更多详情请访问参考链接。</td><td>修改 conf/tomcat-users.xml，更换更加强壮的口令（可参照参考链接操作）。</td><td>Tomcat 弱口令检测</td><td>高危</td></tr><tr><td>Rsync 弱口令检测</td><td>当 Rsync为弱口令时，攻击者可以直接获取 Rsync 配置路径下的文件，若可写，会造成信息泄漏、信息丢失等情况，严重时可危害服务器安全。</td><td>增加密码强度</td><td>Rsync 弱口令检测</td><td>高危</td></tr><tr><td>MySQL 弱口令检测</td><td>MySQL 采用弱口令容易被黑客猜解从而获取数据权限，导致数据被黑客偷窃、删除等；同时，黑客可能再基于数据库进一步获取系统权限。</td><td>1. 改用更复杂的密码，推荐字母、数字、特殊符号组合，长度高于 10 位；2. 选择使用腾讯云 CDB。3. 如果直接删除账户，需执行 OPTIMIZE TABLE mysql.user; 命令进行优化。</td><td>MySQL 弱口令检测</td><td>高危</td></tr><tr><td>Xampp 默认 FTP 密码</td><td>Xampp 存在一个默认 FTP 账号密码 nobody / xampp、 nobody / lampp 或者 daemon / xampp。通过登陆 FTP 可以获取 Web 目录的读写权限，造成信息泄露、服务器被入侵。</td><td>修改 Xampp 默认账号密码。</td><td>Xampp 默认 FTP 密码</td><td>高危</td></tr><tr><td>Linux系统弱口令检测</td><td>系统存在弱口令，可以轻易被猜解，黑客可以通过暴力破解等方式进行密码爆破，从而获取系统用户密码，进而获得系统权限，导致服务器上的文件和数据泄露或者被用作其他攻击用途。</td><td>修改对应用户的密码为足够强度的密码。</td><td>Linux系统弱口令检测</td><td>高危</td></tr><tr><td>Linux空口令账号</td><td>系统存在空口令账号，用户不用口令认证就能进入系统，存在安全风险。</td><td>为空密码用户设置符合强度要求的密码。</td><td>Linux空口令账号</td><td>高危</td></tr><tr><td>ActiveMQ基线合规检测</td><td>ActiveMQ配置文件中需要开启认证，且不能使用默认口令，否则容易被黑客攻击，获取系统控制权，从而造成安全问题。</td><td>开启认证并配置强度较高的认证口令。</td><td>ActiveMQ基线合规检测</td><td>高危</td></tr><tr><td>Rsync 无密码访问</td><td>当 Rsync 无密码访问时，攻击者可以直接获取 Rsync 配置路径下的文件，若可写，会造成信息泄漏、信息丢失等情况，严重时可危害服务器安全。</td><td>增加认证信息</td><td>Rsync 无密码访问</td><td>高危</td></tr><tr><td>Windows 用户弱口令检测</td><td>系统存在弱口令，可以轻易被猜解，黑客可以通过暴力破解等方式进行密码爆破，从而获取系统用户密码，进而获得系统权限，导致服务器上的文件和数据泄露或者被用作其他攻击用途。</td><td>修改对应用户的密码为足够强度的密码。</td><td>Windows 用户弱口令检测</td><td>高危</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 安全运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全基线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker存储】Docker设置CPU和内存</title>
      <link href="/2023/09/28/%E3%80%90Docker%E5%AD%98%E5%82%A8%E3%80%91%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D/"/>
      <url>/2023/09/28/%E3%80%90Docker%E5%AD%98%E5%82%A8%E3%80%91%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h2 id="容器资源配置"><a href="#容器资源配置" class="headerlink" title="容器资源配置"></a>容器资源配置</h2><ul><li><p>CPU利用率控制</p></li><li><p>内存限额</p></li></ul><h3 id="构建容器时指定资源参数设置"><a href="#构建容器时指定资源参数设置" class="headerlink" title="构建容器时指定资源参数设置"></a>构建容器时指定资源参数设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">--build-arg=[] :</span><br><span class="line">设置镜像创建时的变量;</span><br><span class="line">--cpu-shares :</span><br><span class="line">设置cpu使用权重;</span><br><span class="line">--cpu-period :</span><br><span class="line">限制CPU CFS周期;</span><br><span class="line">--cpu-quota :</span><br><span class="line">限制cPU CFS配额;</span><br><span class="line">--cpuset-cpus :</span><br><span class="line">指定使用的CPU <span class="built_in">id</span>;</span><br><span class="line">--cpuset-mems :</span><br><span class="line">指定使用的内存<span class="built_in">id</span>;</span><br><span class="line">--disable-content-trust :忽略校验，默认开启;-f :</span><br><span class="line">指定要使用的Dockerfile路径;</span><br><span class="line">--force-rm :</span><br><span class="line">设置镜像过程中册删除中间容器;</span><br><span class="line">--isolation :</span><br><span class="line">使用容器隔离技术;</span><br><span class="line">--label=[ ] :</span><br><span class="line">设置镜像使用的元数据;</span><br><span class="line">-m :</span><br><span class="line">设置内存最大值;</span><br><span class="line">--memory-swap :</span><br><span class="line">设置Swap的最大值为内存+swap， <span class="string">&quot;-1&quot;</span>表示个/限swap;</span><br><span class="line">--no-cache :</span><br><span class="line">创建镜像的过程不使用缓存;</span><br><span class="line">--pull :</span><br><span class="line">尝试去更新镜像的新版本;</span><br><span class="line">--quiet, -q :</span><br><span class="line">安静模式，成功后只输出镜像工D;</span><br><span class="line">--<span class="built_in">rm</span> :</span><br><span class="line">设置镜像成功后删除中间容器;</span><br><span class="line">--shm-size :</span><br><span class="line">设置/dev/ shm的大小，默认值是64M;</span><br><span class="line">--<span class="built_in">ulimit</span> :</span><br><span class="line">Ulimit配置。</span><br><span class="line">--squash :</span><br><span class="line">将Dockerfile中所有的操作压缩为一层。</span><br><span class="line">--tag, -t:</span><br><span class="line">镜像的名字及标签，通常name: tag或者name</span><br><span class="line">格式;可以在一次构建中为一个镜像设置多个标签。</span><br><span class="line">--network :</span><br><span class="line">默认default。在构建期间设置RUN指令的网络模式</span><br></pre></td></tr></table></figure><h2 id="CPU利用率设置"><a href="#CPU利用率设置" class="headerlink" title="CPU利用率设置"></a>CPU利用率设置</h2><ul><li>CPU周期：ls为一个周期的定律，参数值一般为100000（秒）</li><li>用stress压力测试工具测试CPU和内存使用情况</li></ul><h2 id="内存限额"><a href="#内存限额" class="headerlink" title="内存限额"></a>内存限额</h2><ul><li><code>docker -m</code>或者<code>--memory</code> 设置内存使用限额</li><li><code>docker --memeory-swap</code> 设置swap使用限额</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>资源限制主要类型：CPU、磁盘、内存、IO</p></li><li><p>资源限制方式：构建镜像时指定镜像资源限制，构建容器时指定容器的资源限制，容器启动后在宿主机对应容器目录下修改资源限制</p></li><li><p>资源限制查询：docker inspect 镜像ID/容器ID，或者直接查看宿主机对应容器ID资源限制文件（/sys/fs/cgroup/*）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL性能优化之参数配置</title>
      <link href="/2023/09/27/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/09/27/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL是广泛使用的关系型数据库管理系统，对于保证数据库性能至关重要。在MySQL性能优化的过程中，参数配置是一个关键的步骤。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB 备忘单</title>
      <link href="/2023/09/11/MongoDB%20%E5%A4%87%E5%BF%98%E5%8D%95/"/>
      <url>/2023/09/11/MongoDB%20%E5%A4%87%E5%BF%98%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td><code>db</code></td><td>显示当前数据库的名称</td></tr><tr><td><code>mongod</code></td><td>启动数据库</td></tr><tr><td><code>mongo</code></td><td>连接到数据库</td></tr><tr><td><code>show dbs</code></td><td>显示数据库</td></tr><tr><td><code>use db</code></td><td>切换到数据库<code>db</code></td></tr><tr><td><code>show collec­tions</code></td><td>显示当前数据库集合</td></tr></tbody></table></div><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td><code>insert­(data)</code></td><td>插入文档 返回写入结果</td></tr><tr><td><code>insertOne (data, options)</code></td><td>插入一个文档</td></tr><tr><td><code>insert­Man­y(data, options)</code></td><td>插入许多文档</td></tr><tr><td><code>insert­Man­y([­&#123;&#125;,­&#123;&#125;,&#123;&#125;])</code></td><td>需要方括号</td></tr></tbody></table></div><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td><code>update­One­(fi­lter, data, options)</code></td><td>更改一份文档</td></tr><tr><td><code>update­Man­y(f­ilter, data, options)</code></td><td>更改许多文档</td></tr><tr><td><code>replac­eOn­e(f­ilter, data, options)</code></td><td>完全替换文档</td></tr></tbody></table></div><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td><code>delete­One­(fi­lter, options)</code></td><td>删除一个文档</td></tr><tr><td><code>delete­Man­y(f­ilter, options)</code></td><td>删除很多文档</td></tr></tbody></table></div><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td><code>&#123;&quot;ke­y&quot;: &quot;­val­ue&quot;&#125;</code></td><td>用于过滤集合的过滤参数</td></tr><tr><td><code>&#123;key: &#123;$oper­ator: value&#125; &#125;</code></td><td>查询数据的运算符</td></tr><tr><td><code>&#123;key: &#123;$exists: true&#125;&#125;</code></td><td>匹配所有包含子文档的文档<code>key</code></td></tr><tr><td><code>$eq</code></td><td>匹配等于指定值的值。</td></tr><tr><td><code>$gt</code></td><td>匹配大于指定值的值。</td></tr><tr><td><code>$gte</code></td><td>匹配大于或等于指定值的值。</td></tr><tr><td><code>$in</code></td><td>匹配数组中指定的任何值</td></tr><tr><td><code>syntax:</code></td><td><code>&#123;key:&#123;$in: [array of values] &#125; &#125;</code></td></tr><tr><td><code>$lt</code></td><td>匹配小于指定值的值。</td></tr><tr><td><code>$lte</code></td><td>匹配小于或等于指定值的值。</td></tr><tr><td><code>$ne</code></td><td>匹配所有不等于指定值的值。</td></tr><tr><td><code>$nin</code></td><td>不匹配数组中指定的任何值。</td></tr><tr><td><code>$and</code></td><td>执行 AND 运算</td></tr><tr><td><code>syntax:</code></td><td><code>&#123;$and: [ &#123;&#125;,&#123;&#125; ] &#125;</code></td></tr><tr><td><code>&#123;key: &#123;$op: filter&#125;, &#123;filter&#125;&#125;</code></td><td>当必须在多个表达式中指定相同的字段或运算符时，$and 运算符是必需的</td></tr><tr><td><code>find(&#123;­doc.su­bdo­c:v­alue&#125;)</code></td><td>过滤子文档</td></tr></tbody></table></div><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td><code>.count()</code></td><td>计算有多少个结果</td></tr><tr><td><code>.sort(­filter)</code></td><td>排序 升序：1 降序：-1</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker存储】容器迁移</title>
      <link href="/2023/08/31/%E3%80%90Docker%E5%AD%98%E5%82%A8%E3%80%91%E5%AE%B9%E5%99%A8%E8%BF%81%E7%A7%BB/"/>
      <url>/2023/08/31/%E3%80%90Docker%E5%AD%98%E5%82%A8%E3%80%91%E5%AE%B9%E5%99%A8%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li><p>迁移在许多情况下都是不可避免的。硬件升级、数据中心变化、过时的操作系统，所有这些都可能成为迁移的触发点。</p></li><li><p><code>Docker</code>容器迁移通常是迁移任务的一部分。今天我们将看到将<code>Docker</code>容器从现有服务器迁移到另一台服务器的不同方法。</p></li><li><p>如何将<code>Docker</code>容器迁移到另一台服务器，没有直接将<code>Docker</code>容器从一台服务器迁移到另一台服务器的方法，我们通过使用下面这些方法中的一个或多个来解决<code>Docker</code>容器迁移的问题。</p></li></ul><h2 id="Docker镜像迁移"><a href="#Docker镜像迁移" class="headerlink" title="Docker镜像迁移"></a>Docker镜像迁移</h2><p>通过将Docker镜像导出为文件，然后在目标环境中导入该文件，可以实现镜像的迁移。</p><p>导出镜像：在源环境中运行以下命令，将镜像导出为文件。</p><p>docker save -o image.tar image_name<br>导入镜像：将导出的镜像文件传输到目标环境，并在目标环境中运行以下命令，将镜像导入。</p><p>docker load -i image.tar</p><h2 id="Docker容器迁移"><a href="#Docker容器迁移" class="headerlink" title="Docker容器迁移"></a>Docker容器迁移</h2><p>容器迁移包括容器的<code>停止</code>、<code>导出</code>、<code>传输</code>和<code>导入</code>。</p><ul><li>停止容器：在源环境中停止容器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop container_name</span><br></pre></td></tr></table></figure><ul><li>导出容器：在源环境中运行以下命令，将容器导出为文件。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">export</span> -o container.tar container_name</span><br></pre></td></tr></table></figure><ul><li>传输容器：将导出的容器文件传输到目标环境。</li><li>导入容器：在目标环境中运行以下命令，将容器导入。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import container.tar</span><br></pre></td></tr></table></figure><ul><li>运行容器：在目标环境中启动导入的容器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run container_name</span><br></pre></td></tr></table></figure><h2 id="Docker容器数据卷迁移"><a href="#Docker容器数据卷迁移" class="headerlink" title="Docker容器数据卷迁移"></a>Docker容器数据卷迁移</h2><p>容器的数据卷可以存储容器中的数据。如果需要迁移包含数据卷的容器，可以使用以下步骤：</p><ul><li>创建数据卷容器：在源环境中创建一个仅用于数据卷的容器。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker create -v /data --name data_container busybox</span><br></pre></td></tr></table></figure><ul><li>将数据卷挂载到源容器：在源容器中使用 —volumes-from选项将数据卷容器挂载到源容器。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --volumes-from data_container --name source_container image_name</span><br></pre></td></tr></table></figure><ul><li>迁移数据卷：将数据卷容器的数据目录复制到目标环境。</li><li>创建目标容器：在目标环境中创建一个仅用于数据卷的容器。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker create -v /data --name data_container busybox</span><br></pre></td></tr></table></figure><p>将数据卷挂载到目标容器：在目标容器中使用 <code>--volumes-from</code>选项将数据卷容器挂载到目标容器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --volumes-from data_container --name target_container image_name</span><br></pre></td></tr></table></figure><p>通过以上方式，可以在不同的<code>Docker</code>环境中迁移容器和相关的数据。根据具体需求和环境情况，选择适合的迁移方式。</p>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker更新】使用watchtower自动更新容器</title>
      <link href="/2023/08/29/%E3%80%90Docker%E6%9B%B4%E6%96%B0%E3%80%91%E4%BD%BF%E7%94%A8watchtower%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%AE%B9%E5%99%A8/"/>
      <url>/2023/08/29/%E3%80%90Docker%E6%9B%B4%E6%96%B0%E3%80%91%E4%BD%BF%E7%94%A8watchtower%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>借助<code>Watchtower</code> ，只需将新映像推送到 <code>Docker Hub</code> 自己的映像注册表即可更新容器化应用程序的运行版本。<code>Watchtower</code> 将拉取的新映像，正常关闭现有容器，并使用最初部署时使用的相同选项重新启动它。</p><h5 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d \</span><br><span class="line">--name watchtower \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">containrrr/watchtower</span><br></pre></td></tr></table></figure><h5 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  watchtower:</span><br><span class="line">    image: containrrr/watchtower</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br></pre></td></tr></table></figure><h2 id="容器选择"><a href="#容器选择" class="headerlink" title="容器选择"></a>容器选择</h2><h3 id="完全排除更新"><a href="#完全排除更新" class="headerlink" title="完全排除更新"></a>完全排除更新</h3><p>如果需要排除某些容器，请将<code>com. centurylinklabs.watchtower.enable</code>标签设置为<code>false</code>。为了清楚起见，应该在您希望忽略的<strong>容器上</strong>设置此值，而不是在了<code>Watchtower</code>上设置此值。</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><h5 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LABEL com.centurylinklabs.watchtower.enable=<span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure><h5 id="docker-run-1"><a href="#docker-run-1" class="headerlink" title="docker run"></a>docker run</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --label=com.centurylinklabs.watchtower.enable=<span class="literal">false</span> someimage</span><br></pre></td></tr></table></figure><h5 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  someimage:</span><br><span class="line">    container_name: someimage</span><br><span class="line">    labels:</span><br><span class="line">      - <span class="string">&quot;com.centurylinklabs.watchtower.enable=false&quot;</span></span><br></pre></td></tr></table></figure><h3 id="启用更新"><a href="#启用更新" class="headerlink" title="启用更新"></a>启用更新</h3><p>相反，如果您只想包含带有<code>启用</code>标签的容器，请在启动时传递<code>--label-enable</code>标志或<code>WATCHTOWER_LABEL_ENABLE</code>环境变量给瞭望塔，并在要监视的容器上设置<code>com. centurylinklabs.watchtower.enable</code>标签，其值为。<code>true</code></p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><h5 id="dockerfile-1"><a href="#dockerfile-1" class="headerlink" title="dockerfile"></a>dockerfile</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LABEL com.centurylinklabs.watchtower.enable=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure><h5 id="docker-run-2"><a href="#docker-run-2" class="headerlink" title="docker run"></a>docker run</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --label=com.centurylinklabs.watchtower.enable=<span class="literal">true</span> someimage</span><br></pre></td></tr></table></figure><h5 id="docker-compose-1"><a href="#docker-compose-1" class="headerlink" title="docker-compose"></a>docker-compose</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  someimage:</span><br><span class="line">    container_name: someimage</span><br><span class="line">    labels:</span><br><span class="line">      - <span class="string">&quot;com.centurylinklabs.watchtower.enable=true&quot;</span></span><br></pre></td></tr></table></figure><p><code>Watchtower</code> 通过根据每个配置的标准进行测试来过滤正在运行的容器。如果满足所有标准，则对容器进行监控。例如： - 如果容器的名称在监控名称列表中（非空<code>--name</code>参数）但未启用（<code>centurylinklabs.watchtower.enable=false</code>），则不会被监控；- 如果容器的名称不在监控名称列表中（非空<code>--name</code>参数），即使启用（<code>centurnlinklabs.watchtower.enable=true</code>且<code>--label-enable</code>设置了<code>flag</code>），也不会被监控；</p><h3 id="仅监控"><a href="#仅监控" class="headerlink" title="仅监控"></a>仅监控</h3><p>单个容器可以标记为<code>仅受监视（而不更新）</code>。</p><p>为此，请在该容器上设置<code>com. centurylinklabs.watchtower.monitor-only</code>标签<code>true</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LABEL com.centurylinklabs.watchtower.monitor-only=&quot;true&quot;</span><br></pre></td></tr></table></figure><p>或者，可以将其指定为<code>docker run</code>命令行的一部分：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --label=com.centurylinklabs.watchtower.monitor-only=<span class="literal">true</span> someimage</span><br></pre></td></tr></table></figure><p>当在容器上指定标签时，了望塔会将该容器视为与已设置的标签完全相同<code>WATCHTOWER_MONITOR_ONLY</code>，但效果仅限于单个容器。</p>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Watchtower </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana设置免登陆访问</title>
      <link href="/2023/08/25/Grafana%E8%AE%BE%E7%BD%AE%E5%85%8D%E5%AF%86%E6%9F%A5%E7%9C%8B/"/>
      <url>/2023/08/25/Grafana%E8%AE%BE%E7%BD%AE%E5%85%8D%E5%AF%86%E6%9F%A5%E7%9C%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><h2 id="需求场景"><a href="#需求场景" class="headerlink" title="需求场景"></a>需求场景</h2><p>更方便查看Grafana监控数据，设置免登陆访问。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h4 id="修改Grafana配置文件"><a href="#修改Grafana配置文件" class="headerlink" title="修改Grafana配置文件"></a>修改Grafana配置文件</h4><p>在<code>Grafana</code>的配置文件<code>/etc/grafana/grafana.ini</code> 中，找到<code>[auth.anonymous]</code>配置块，将其下的匿名访问控制<code>enabled</code>设置为<code>true</code>，组织权限设置为<code>Viewer</code>。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">（Viewer：只读模式，Editor：可编辑模式，Admin：管理员模式）</span><br><span class="line"></span><br><span class="line"><span class="section">[auth.anonymous]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># enable anonymous access</span></span><br><span class="line"></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># specify organization name that should be used for unauthenticated users</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org_name</span> = Main Org.</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify role for unauthenticated users</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org_role</span> = Viewer</span><br></pre></td></tr></table></figure><h4 id="重启Grafana服务"><a href="#重启Grafana服务" class="headerlink" title="重启Grafana服务"></a>重启Grafana服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart grafana-server</span><br></pre></td></tr></table></figure><h4 id="验证测试"><a href="#验证测试" class="headerlink" title="验证测试"></a>验证测试</h4><p>访问<code>grafana</code></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana忘记密码解决</title>
      <link href="/2023/08/20/Grafana%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
      <url>/2023/08/20/Grafana%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><p><code>Grafana</code>登录密码忘记</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h4 id="一、基于命令修改"><a href="#一、基于命令修改" class="headerlink" title="一、基于命令修改"></a>一、基于命令修改</h4><h5 id="1）修改密码"><a href="#1）修改密码" class="headerlink" title="1）修改密码"></a>1）修改密码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grafana-cli admin reset-admin-password dosbat.com</span><br></pre></td></tr></table></figure><p>注意：dosbat.com表示新密码；</p><h5 id="2）重启服务"><a href="#2）重启服务" class="headerlink" title="2）重启服务"></a>2）重启服务</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart grafana-server</span><br></pre></td></tr></table></figure><hr><h4 id="二、基于修改数据库信息"><a href="#二、基于修改数据库信息" class="headerlink" title="二、基于修改数据库信息"></a>二、基于修改数据库信息</h4><h5 id="1）查看Grafana配置文件，确定grafana-db的路径"><a href="#1）查看Grafana配置文件，确定grafana-db的路径" class="headerlink" title="1）查看Grafana配置文件，确定grafana.db的路径"></a>1）查看Grafana配置文件，确定grafana.db的路径</h5><p>配置文件路径：/etc/grafana/grafana.ini</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[paths]</span><br><span class="line">;data = /var/lib/grafana</span><br><span class="line">[database]</span><br><span class="line"># For &quot;sqlite3&quot; only, path relative to data_path setting</span><br><span class="line">;path = grafana.db</span><br></pre></td></tr></table></figure><p>通过配置文件得知<code>grafana.db</code>的完整路径如下：</p><p><code>/var/lib/grafana/grafana.db</code></p><p>或可通过<code>find</code>直接全盘查找<code>grafana.db</code>的路径：</p><p><code>ind / -name &quot;grafana.db&quot;</code></p><hr><h5 id="2）使用sqlites修改admin密码"><a href="#2）使用sqlites修改admin密码" class="headerlink" title="2）使用sqlites修改admin密码"></a>2）使用sqlites修改admin密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">打开数据库</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">local</span>]# sqlite3 /var/lib/grafana/grafana.db</span><br><span class="line"></span><br><span class="line">修改user表admin用户的password</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据库中包含的表</span></span><br><span class="line"></span><br><span class="line">.tables</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看user表内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * from user;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重置admin用户的密码为默认admin</span></span><br><span class="line"></span><br><span class="line">update user <span class="built_in">set</span> password = <span class="string">&#x27;59acf18b94d7eb0694c61e60ce44c110c7a683ac6a8f09580d626f90f4a242000746579358d77dd9e570e83fa24faa88a8a6&#x27;</span>, salt = <span class="string">&#x27;F3FAxVm33R&#x27;</span> <span class="built_in">where</span> login = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出sqlite3</span></span><br><span class="line"></span><br><span class="line">.<span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">好了，可以使用admin、admin登录了</span><br></pre></td></tr></table></figure><hr><h5 id="3）修改指定用户为管理员"><a href="#3）修改指定用户为管理员" class="headerlink" title="3）修改指定用户为管理员"></a>3）修改指定用户为管理员</h5><p><code>update user set is_admin = 1 where login = &#39;xxxx&#39;;</code></p><p>修改完成并登录成功后不要忘记把<code>admin</code>用户名密码修改成自己的</p><h3 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h3><p><code>网页登录即可</code></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>隐藏Nginx标识和版本号：彻底消除安全隐患</title>
      <link href="/2023/08/14/%E9%9A%90%E8%97%8FNginx%E6%A0%87%E8%AF%86%E5%92%8C%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%9A%E5%BD%BB%E5%BA%95%E6%B6%88%E9%99%A4%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3/"/>
      <url>/2023/08/14/%E9%9A%90%E8%97%8FNginx%E6%A0%87%E8%AF%86%E5%92%8C%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%9A%E5%BD%BB%E5%BA%95%E6%B6%88%E9%99%A4%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为提升线上环境的安全性，常见的做法之一是隐藏<code>Nginx</code>的版本号，以减少潜在攻击者的信息收集。尽管可以通过 <code>server_tokens off</code> 参数来隐藏版本号，但这仍然会暴露当前使用的是<code>Nginx</code>服务。为了更彻底地解决这个问题，需要深入源代码进行处理。以下介绍具体操作</p><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><ul><li>下载源码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 ~]# <span class="built_in">mkdir</span> /opt/soft</span><br><span class="line">[root@C8_201 ~]# <span class="built_in">cd</span> /opt/soft</span><br><span class="line">[root@C8_201 soft]# wget http://nginx.org/download/nginx-1.16.1.tar.gz</span><br></pre></td></tr></table></figure><ul><li>解压至当前目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 soft]# tar -zxvf nginx-1.16.1.tar.gz </span><br></pre></td></tr></table></figure><h2 id="改源文件"><a href="#改源文件" class="headerlink" title="改源文件"></a>改源文件</h2><ul><li>我们将源码文件修改后，再进行编译安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 soft]# <span class="built_in">cd</span> nginx-1.16.1/</span><br><span class="line">[root@C8_201 nginx-1.16.1]# <span class="built_in">cd</span> src/core/</span><br><span class="line">[root@C8_201 core]# vim nginx.h <span class="comment">#修改13,14,22行。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">14 <span class="comment">#define NGINX_VER          &quot;nues&quot; NGINX_VERSION</span></span><br><span class="line"> 15 </span><br><span class="line"> 16 <span class="comment">#ifdef NGX_BUILD</span></span><br><span class="line"> 17 <span class="comment">#define NGINX_VER_BUILD    NGINX_VER &quot; (&quot; NGX_BUILD &quot;)&quot;</span></span><br><span class="line"> 18 <span class="comment">#else</span></span><br><span class="line"> 19 <span class="comment">#define NGINX_VER_BUILD    NGINX_VER</span></span><br><span class="line"> 20 <span class="comment">#endif</span></span><br><span class="line"> 21 </span><br><span class="line"> 22 <span class="comment">#define NGINX_VAR          &quot;nues&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 core]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@C8_201 src]# <span class="built_in">cd</span> http/</span><br><span class="line">[root@C8_201 http]# vi ngx_http_header_filter_module.c  <span class="comment">#修改第49行</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">49  static u_char ngx_http_server_string[] = <span class="string">&quot;Server: nues&quot;</span> CRLF;</span><br><span class="line">50  </span><br><span class="line">51  static u_char ngx_http_server_full_string[] = <span class="string">&quot;Server: &quot;</span> NGINX_VER CRLF;</span><br><span class="line">52  static u_char ngx_http_server_build_string[] = <span class="string">&quot;Server: &quot;</span> NGINX_VER_BUILD CRLF;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 http]# vi ngx_http_special_response.c <span class="comment">#修改第36行</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">35 static u_char ngx_http_error_tail[] =</span><br><span class="line">36 <span class="string">&quot;&lt;hr&gt;&lt;center&gt;nues&lt;/center&gt;&quot;</span> CRLF</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 ~]# yum install -y gcc make zlib-devel pcre-devel openssl-devel</span><br><span class="line">[root@C8_201 ~]# <span class="built_in">cd</span> /opt/soft/nginx-1.16.1/</span><br><span class="line">[root@C8_201 nginx-1.16.1]# ./configure --prefix=/usr/local/nginx --conf-path=/usr/local/nginx/nginx.conf --error-log-path=/usr/local/nginx/logs/error.log --http-log-path=/usr/local/nginx/logs/access.log --pid-path=/usr/local/nginx/nginx.pid --lock-path=/usr/local/nginx/nginx.lock --user=appadmin --group=appadmin --with-http_ssl_module --with-http_v2_module --with-http_dav_module --with-http_stub_status_module --with-threads --with-file-aio</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Configuration summary</span><br><span class="line">  + using threads</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + using system OpenSSL library</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix: <span class="string">&quot;/usr/local/nginx&quot;</span></span><br><span class="line">  nginx binary file: <span class="string">&quot;/usr/local/nginx/sbin/nginx&quot;</span></span><br><span class="line">  nginx modules path: <span class="string">&quot;/usr/local/nginx/modules&quot;</span></span><br><span class="line">  nginx configuration prefix: <span class="string">&quot;/usr/local/nginx&quot;</span></span><br><span class="line">  nginx configuration file: <span class="string">&quot;/usr/local/nginx/nginx.conf&quot;</span></span><br><span class="line">  nginx pid file: <span class="string">&quot;/usr/local/nginx/nginx.pid&quot;</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">&quot;/usr/local/nginx/logs/error.log&quot;</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">&quot;/usr/local/nginx/logs/access.log&quot;</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">&quot;client_body_temp&quot;</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">&quot;proxy_temp&quot;</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">&quot;fastcgi_temp&quot;</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">&quot;uwsgi_temp&quot;</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">&quot;scgi_temp&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 ~]# <span class="built_in">cd</span> /usr/local/nginx/sbin/</span><br><span class="line">[root@C8_201 sbin]# ./nginx</span><br><span class="line">nginx: [emerg] getpwnam(<span class="string">&quot;appadmin&quot;</span>) failed  <span class="comment">## 这里是个坑，需要把nginx.conf的\#user nobody; 改成注释删除，改成具体用户</span></span><br><span class="line">[root@C8_201 sbin]# <span class="built_in">ls</span></span><br><span class="line">nginx</span><br><span class="line">[root@C8_201 sbin]# vi /usr/local/nginx/nginx.conf</span><br><span class="line">[root@C8_201 sbin]# ./nginx </span><br><span class="line"></span><br><span class="line">[root@C8_201 sbin]# ps -C nginx --header</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line"> 264942 ?        00:00:00 nginx</span><br><span class="line"> 264943 ?        00:00:00 nginx</span><br><span class="line">[root@C8_201 sbin]# ss -tnlp|grep 80</span><br><span class="line">LISTEN    0         128                0.0.0.0:80               0.0.0.0:*        <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">264943</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">264942</span>,fd=<span class="number">9</span>))         </span><br></pre></td></tr></table></figure><h2 id="关闭防火墙或放行80端口"><a href="#关闭防火墙或放行80端口" class="headerlink" title="关闭防火墙或放行80端口"></a>关闭防火墙或放行80端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 sbin]# firewall-cmd --permanent --zone=public --add-port=80/tcp</span><br><span class="line">success</span><br><span class="line">[root@C8_201 sbin]# firewall-cmd --reload</span><br><span class="line">success</span><br></pre></td></tr></table></figure><h2 id="验证效果"><a href="#验证效果" class="headerlink" title="验证效果"></a>验证效果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@C8_201 sbin]# curl -I 127.0.0.1</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nues1.00</span><br><span class="line">Date: Wed, 30 Aug 2023 08:32:32 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Wed, 30 Aug 2023 08:26:07 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: <span class="string">&quot;64eefd1f-264&quot;</span></span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos8报错  Failed to set locale, defaulting to C.UTF-8</title>
      <link href="/2023/06/01/Centos8%E6%8A%A5%E9%94%99%20%20Failed%20to%20set%20locale,%20defaulting%20to%20C.UTF-8/"/>
      <url>/2023/06/01/Centos8%E6%8A%A5%E9%94%99%20%20Failed%20to%20set%20locale,%20defaulting%20to%20C.UTF-8/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><p>​    </p><p><code>CentOS 8</code>中执行<code>命令</code>，出现报错：<code>Failed to set locale, defaulting to C.UTF-8</code></p><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><ul><li>没有安装相应的语言包。</li><li>没有设置正确的语言环境。</li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><ul><li>设置语言环境需使用命令 locale</li><li><code>locale -a 命令，</code>查看目前系统已安装的语言包</li><li>安装中文语言包，命令<code>yum install glibc-langpack-zh</code></li><li><code>安装英文语言包，命令 dnf install glibc-langpack-en</code> 或 <code>dnf install langpacks-en glibc-all-langpacks -y</code></li></ul><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a><strong>方法2</strong></h3><p><strong>设置正确的语言环境</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;export LC_ALL=en_US.UTF-8&quot; &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>或使用命令<code>locale -gen en_US.UTF-8</code></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 错误日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx反代实现Kibana登录认证功能</title>
      <link href="/2023/04/21/Nginx%E5%8F%8D%E4%BB%A3%E5%AE%9E%E7%8E%B0Kibana%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/04/21/Nginx%E5%8F%8D%E4%BB%A3%E5%AE%9E%E7%8E%B0Kibana%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Kibana</code>是一个流行的开源数据可视化和分析平台，它通常与<code>Elasticsearch</code>一起使用。然而，<code>Kibana</code>并不提供内置的身份验证和授权机制，这就需要我们自己实现。<br><code>Nginx</code>是一款高性能的<code>Web</code>服务器和反向代理服务器，具有灵活、可扩展的特点。通过配置<code>Nginx</code>反向代理，我们可以为<code>Kibana</code>添加身份验证和授权的功能，从而限制访问和保护数据安全。</p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>使用命令行或者包管理器安装<code>Nginx</code>，并启动服务。例如，在<code>Ubuntu</code>系统上执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install nginx</span><br><span class="line"><span class="built_in">sudo</span> systemctl start nginx</span><br></pre></td></tr></table></figure><h3 id="配置Nginx反向代理"><a href="#配置Nginx反向代理" class="headerlink" title="配置Nginx反向代理"></a>配置Nginx反向代理</h3><p>编辑<code>Nginx</code>配置文件<code>/etc/nginx/nginx.conf</code>，在<code>http</code>块中增加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name kibana.example.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:5601/;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">        auth_basic <span class="string">&quot;Restricted Area&quot;</span>;</span><br><span class="line">        auth_basic_user_file /etc/nginx/.htpasswd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>listen</code>用于指定监听端口和协议；<code>server_name</code>用于指定域名；<code>proxy_pass</code>用于指定反向代理的地址和端口号；<code>auth_basic</code>用于启用基本身份验证；<code>auth_basic_user_file</code>用于指定存储用户名和密码的文件路径。</p><h2 id="创建用户账号"><a href="#创建用户账号" class="headerlink" title="创建用户账号"></a>创建用户账号</h2><p>使用<code>htpasswd</code>工具创建用户账号。例如，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install apache2-utils</span><br><span class="line"><span class="built_in">sudo</span> htpasswd -c /etc/nginx/.htpasswd username</span><br></pre></td></tr></table></figure><p>其中，<code>-c</code>用于创建新的文件，<code>username</code>是要创建的用户名。</p><h3 id="重启Nginx服务"><a href="#重启Nginx服务" class="headerlink" title="重启Nginx服务"></a>重启Nginx服务</h3><p>编辑完配置文件后，重启<code>Nginx</code>服务使新配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart nginx</span><br></pre></td></tr></table></figure><p>现在，访问<code>http://kibana.example.com/</code>将会出现身份验证提示框，输入用户名和密码后即可访问<code>Kibana</code>界面。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过<code>Nginx</code>反向代理实现<code>Kibana</code>登录认证功能，可以有效保护数据安全和隐私。需要注意的是，在生产环境中应该采用更加严格和复杂的身份验证和授权机制，以避免恶意攻击和数据泄露的风险。</p><h2 id="取消认证"><a href="#取消认证" class="headerlink" title="取消认证"></a>取消认证</h2><p>如果您想取消使用<code>Nginx</code>反向代理实现<code>Kibana</code>登录认证功能，可以按照以下步骤进行：</p><h3 id="编辑Nginx配置文件"><a href="#编辑Nginx配置文件" class="headerlink" title="编辑Nginx配置文件"></a>编辑Nginx配置文件</h3><p>使用文本编辑器打开<code>Nginx</code>配置文件<code>/etc/nginx/nginx.conf</code>，找到之前添加的<code>Kibana</code>反向代理的配置。<br>注释或删除相关配置<br>将之前添加的<code>Kibana</code>反向代理的配置注释掉或者直接删除。例如，将以下代码注释或删除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name kibana.example.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:5601/;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">        auth_basic <span class="string">&quot;Restricted Area&quot;</span>;</span><br><span class="line">        auth_basic_user_file /etc/nginx/.htpasswd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重启Nginx服务-1"><a href="#重启Nginx服务-1" class="headerlink" title="重启Nginx服务"></a>重启Nginx服务</h3><p>编辑完配置文件后，重启<code>Nginx</code>服务使新配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart nginx</span><br></pre></td></tr></table></figure><p>这样就成功取消了使用<code>Nginx</code>反向代理实现<code>Kibana</code>登录认证功能，现在可以直接访问<code>Kibana</code>界面而无需输入用户名和密码。<br>如果您不再需要使用<code>htpasswd</code>工具创建用户账号，可以直接删除其生成的.htpasswd文件。例如，执行以下命令删除该文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /etc/nginx/.htpasswd</span><br></pre></td></tr></table></figure><p>需要注意的是，如果您以后还需要使用<code>htpasswd</code>工具创建其他的基本身份验证账号，可以重新执行相应的命令。</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 安装和部署 Prometheus 和 Grafana 的简单教程</title>
      <link href="/2023/04/12/Docker%20%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2%20Prometheus%20%E5%92%8C%20Grafana%20%E7%9A%84%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/"/>
      <url>/2023/04/12/Docker%20%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2%20Prometheus%20%E5%92%8C%20Grafana%20%E7%9A%84%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>使用以下命令更新系统软件包并安装必要的依赖项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>添加 Docker 的 Yum 软件源，使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装 Docker CE（Community Edition）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker-ce</span><br></pre></td></tr></table></figure><p>启动 Docker 服务并将其设置为在开机时自动启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p>配置防火墙以允许 Prometheus 和 Grafana 流量通过。使用以下命令打开端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --add-port=9090/tcp --permanent</span><br><span class="line">sudo firewall-cmd --add-port=3000/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>创建一个名为 <code>prometheus_grafana</code> 的文件夹用于存储 Prometheus 和 Grafana 的配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir prometheus_grafana</span><br><span class="line">cd prometheus_grafana</span><br></pre></td></tr></table></figure><p>创建 Prometheus 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> prometheus.yml</span><br></pre></td></tr></table></figure><p>复制以下内容并粘贴到 <code>prometheus.yml</code> 文件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval: 15s</span><br><span class="line"></span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;prometheus&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;localhost:9090&#x27;]</span><br><span class="line"></span><br><span class="line">  - job_name: &#x27;node&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;localhost:9100&#x27;]</span><br></pre></td></tr></table></figure><p>创建 Grafana 配置文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch  grafana.ini</span><br></pre></td></tr></table></figure><p>复制以下内容并粘贴到 <code>grafana.ini</code> 文件中：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[server]</span></span><br><span class="line"><span class="attr">http_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">http_port</span> = <span class="number">3000</span></span><br><span class="line"><span class="attr">root_url</span> = %(protocol)s://%(domain)s:%(http_port)s/</span><br></pre></td></tr></table></figure><p>在 <code>prometheus_grafana</code> 文件夹中创建一个名为 <code>docker-compose.yml</code> 的文件，并将以下内容复制并粘贴到该文件中：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/prometheus</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9090:9090&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus.yml:/etc/prometheus/prometheus.yml</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./grafana.ini:/etc/grafana/grafana.ini</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">grafana-storage:/var/lib/grafana</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">grafana-storage:</span></span><br></pre></td></tr></table></figure><p>运行以下命令来启动 Prometheus 和 Grafana 容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><ol><li>在 <code>Web</code> 浏览器中访问 <code>http://&lt;your server&#39;s IP address&gt;:3000</code>，打开 <code>Grafana</code> 界面。</li><li>使用默认的管理员凭据登录 <code>Grafana</code>（用户名：<code>admin</code>，密码：<code>admin</code>）。</li><li>点击左侧菜单栏中的<code>“Configuration”</code>，然后选择<code>“Data Sources”</code>。</li><li>在<code>“Data Sources”</code>页面上，点击<code>“Add data source”</code>。</li><li>选择<code>“Prometheus”</code>作为数据源类型，并输入以下内容：</li></ol><ul><li><code>Name: Prometheus</code></li><li><code>HTTP URL:</code> <a href="http://prometheus:9090/">http://prometheus:9090</a></li></ul><p>点击<code>“Save &amp; Test”</code>以保存数据源并测试其连接性。</p><p>现在可以创建仪表板并开始监测指标了！</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grafana </tag>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维工程师学习计划</title>
      <link href="/2023/03/24/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
      <url>/2023/03/24/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><ul><li>[x] <strong>Linux</strong></li><li>[x] <strong>Shell</strong></li><li>[x] <strong>Nginx</strong></li><li>[x] <strong>Prometheus</strong></li><li>[x] <strong>Mysql</strong></li><li>[ ] <strong>Tomcat</strong></li><li>[ ] <strong>Ansible</strong></li><li>[ ] <strong>Golang</strong></li><li>[ ] <strong>Python</strong></li><li>[x] <strong>Docker</strong></li><li>[ ] <strong>Kubernetes</strong> </li></ul><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><h3 id="Linux学习计划"><a href="#Linux学习计划" class="headerlink" title="Linux学习计划"></a>Linux学习计划</h3><p>第一周：</p><ul><li>第一天：Linux 操作系统和基本组件</li><li>第二天：Linux 命令行介绍</li><li>第三天：Linux 目录结构和基本文件操作</li><li>第四天：文本编辑器和文件管理器</li><li>第五天：文件权限和所有权</li><li>第六天-第七天：复习和测试（例如Linux 系统的安装、配置和启动）</li></ul><p>第二周：</p><ul><li>第一天：Linux 进程和任务管理</li><li>第二天：软件包管理工具（例如 yum 和 apt-get）</li><li>第三天：Linux 用户和组</li><li>第四天：shell 脚本编程</li><li>第五天：文件系统和磁盘管理</li><li>第六天-第七天：复习和测试（例如远程管理、网络配置和备份）</li></ul><p>第三周：</p><ul><li>第一天：Linux 网络和网络工具</li><li>第二天：Linux 安全和加密</li><li>第三天：Linux 日志管理</li><li>第四天：Linux 内核和模块</li><li>第五天：Linux 虚拟化和容器化</li><li>第六天-第七天：复习和测试（例如 Linux 集成、自动化和性能调整）</li></ul><h3 id="Shell学习计划"><a href="#Shell学习计划" class="headerlink" title="Shell学习计划"></a>Shell学习计划</h3><p><strong>第一天</strong>：Shell基本概述，安装Shell/终端环境，Shell脚本的执行方式。</p><p><strong>第二天</strong>：Shell变量、特殊变量，命令行参数，输入/输出重定向。</p><p><strong>第三天</strong>：Shell运算符、表达式，算术运算、逻辑运算、关系运算符，if语句。</p><p><strong>第四天</strong>：Shell流程控制，循环语句，while循环、for循环、until循环。</p><p><strong>第五天</strong>：Shell函数，定义函数、返回值、参数传递，函数编写。</p><p><strong>第六天</strong>：Shell字符串，单引号和双引号字符串，字符串替换、字符串长度、字符串比较。</p><p><strong>第七天</strong>：Shell数组，定义、访问、遍历数组，数组成员操作、删除元素。</p><p><strong>第八天</strong>：Shell正则表达式，基本语法、元字符、正则表达式运算符和模式匹配。</p><p><strong>第九天</strong>：Shell文件包含、条件包含，source命令、source with arguments、test运算符。</p><p><strong>第十天</strong>：Shell命令行输入、命令输出处理，read命令、command substitution、管道符、操作符&amp;&amp;和||。</p><h3 id="Nginx学习计划"><a href="#Nginx学习计划" class="headerlink" title="Nginx学习计划"></a>Nginx学习计划</h3><p>第一周：</p><ul><li>第1天：了解Nginx的基础知识，如何进行安装和配置；</li><li>第2-3天：学习 Nginx 配置文件的基础语法，如 server、location、upstream 等配置块的使用方法；</li><li>第4-5天：学习一些基础的 Nginx 模块，如HTTP、HTTP SSL、反向代理等。</li></ul><p>第二周：</p><ul><li>第6-7天：深入学习HTTP核心模块，包括HTTP模块的基础知识、HTTP请求与响应、内部变量等；</li><li>第8-9天：学习Nginx各模块的高级配置，如文件传输、请求处理、日志、限速等；</li><li>第10天：学习Nginx集群环境下的配置方法，如反向代理、负载均衡等。</li></ul><p>第三周：</p><ul><li>第11天：学习Nginx的高可用性架构，如虚拟化、故障转移等；</li><li>第12-13天：了解常见的Nginx应用场景，如静态文件web服务器、负载均衡等；</li><li>第14-15天：进行练习和实战课程，使用Nginx进行搭建和部署，练习如何诊断和解决常见问题。</li></ul><h3 id="Prometheus学习计划"><a href="#Prometheus学习计划" class="headerlink" title="Prometheus学习计划"></a>Prometheus学习计划</h3><ol><li><p>第 1 ~ 2 周</p><p>1.1 学习 Prometheus 的基础知识：了解 Prometheus 的工作模式、基本组件、数据模型、指标和查询语言 (PromQL)。</p><p>1.2 学习如何安装和配置一个简单的 Prometheus 实例，掌握 Prometheus 的基本配置和参数选项。</p><p>1.3 研究 Prometheus 监控的目标类型：Node Exporter、Blackbox Exporter 和 Pushgateway。</p></li><li><p>第 3 ~ 4 周</p><p>2.1 学习如何使用 Prometheus 来收集各种类型的数据，如：CPU、内存、网络等指标。</p><p>2.2 掌握如何使用 Grafana 来可视化 Prometheus 收集的指标数据。</p><p>2.3 学习如何使用 Alertmanager 来设置和管理应用程序的警报规则。</p></li><li><p>第 5 ~ 6 周</p><p>3.1 深入学习 Prometheus 的高级功能：Prometheus Operator、Service Discovery 等。</p><p>3.2 研究 Prometheus 的生态系统，包括各种 Prometheus Exporter 的实现、作为数据来源的 API 接口和第三方工具。</p><p>3.3 学习如何使用 Prometheus 来监视分布式应用程序，包括 Kubernetes 和 Docker 等容器化环境的监视。</p></li><li><p>第 7 ~ 8 周</p><p>4.1 研究如何在 Prometheus 中使用数据持久化，以及在高可用性 (HA) 环境中群集化。</p><p>4.2 研究在 Prometheus 实时监视系统中，如何处理高度动态环境，如 AWS 等 API 驱动架构。</p><p>4.3 整理并分享 Prometheus 监控环境搭建和实践的经验和心得。</p></li></ol><h3 id="Mysql学习计划"><a href="#Mysql学习计划" class="headerlink" title="Mysql学习计划"></a>Mysql学习计划</h3><p>第1-2天：MySQL 基础知识</p><ul><li>了解 MySQL 数据库的概念、特点和架构</li><li>学习如何安装和配置 MySQL</li><li>学习如何使用 MySQL 命令和基本语法</li></ul><p>第3-4天：MySQL 数据库管理</p><ul><li>学习如何创建数据库和数据表</li><li>学习如何插入、更新和删除数据</li><li>学习如何管理表结构：字段类型、大小、约束等</li></ul><p>第5-6天：MySQL 数据查询</p><ul><li>学习如何使用 SELECT 语句查询数据</li><li>学习如何使用 WHERE 子句进行筛选</li><li>学习如何使用 ORDER BY 子句进行排序</li></ul><p>第7-8天：MySQL 数据查询（续）</p><ul><li>学习如何使用 JOIN 连接多个数据表</li><li>学习如何使用 GROUP BY 进行聚合计算</li><li>学习如何使用子查询和视图简化复杂查询</li></ul><p>第9-10天：MySQL 数据库性能优化</p><ul><li>学习如何使用索引提高查询效率</li><li>学习如何使用分区和缓存优化数据库性能</li><li>学习如何进行 SQL 语句优化</li></ul><h3 id="Tomcat学习计划"><a href="#Tomcat学习计划" class="headerlink" title="Tomcat学习计划"></a>Tomcat学习计划</h3><h4 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h4><ol><li>了解 Tomcat 与 Web 服务器的关系；</li><li>学习 Tomcat 的基本概念，如 Servlet、JSP、Session、Context、Connector 等；</li><li>掌握 Tomcat 的部署方式和基本配置；</li><li>安装 Tomcat、运行 Tomcat 和查看 Tomcat 日志；</li></ol><h4 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h4><ol><li>学习 Tomcat 的管理工具，包括 Tomcat Manager 和 JMX；</li><li>掌握 Tomcat 的安全设置，如通过 SSL 配置和身份验证配置来保护 Tomcat 安全；</li><li>研究如何将 Tomcat 集成到常见的 Web 架构中，如 Apache、Nginx 和 IIS 等；</li><li>学习如何调优 Tomcat 性能，包括连接池设置、缓存设置等。</li></ol><h4 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h4><ol><li>学习 Tomcat 的集群配置，包括 Session 共享和负载均衡；</li><li>掌握如何将 Tomcat 集成到云平台中，如 AWS、Azure 和 GCP 等；</li><li>深入了解 Tomcat 源代码结构和工作原理；</li><li>学习如何通过自定义 Valve 和 Listener 来扩展 Tomcat 功能。</li></ol><h4 id="第四周"><a href="#第四周" class="headerlink" title="第四周"></a>第四周</h4><ol><li>总结之前学到的知识，整理笔记或文档；</li><li>自行寻找一些 Tomcat 相关的问题进行实践和解决；</li><li>研究一些 Tomcat 最佳实践和优秀案例，进行学习和模仿；</li><li>参加一些 Tomcat 相关的在线课程或社区活动，与行业专家和同行交流。</li></ol><h3 id="Ansible学习计划"><a href="#Ansible学习计划" class="headerlink" title="Ansible学习计划"></a>Ansible学习计划</h3><p>第一周：简介及基础操作</p><ul><li>第1天：了解 Ansible，概述 Ansible 的特点和优势，以及 Ansible 的架构和运行模式。</li><li>第2天：安装 Ansible，并配置 Ansible 的基本设置，如 hosts（主机清单）等。</li><li>第3天：学习使用 ad-hoc 命令和命令模块，了解 Playbook 和 inventory 的概念。</li><li>第4天：继续学习 Playbook 和 inventory，介绍 Ansible 的变量和事实（facts）。</li></ul><p>第二周：进阶操作</p><ul><li>第5天：学习 Ansible 模块，并使用 Ansible 与远程主机进行文件管理、网络管理等。</li><li>第6天：熟悉 Ansible 模块的用法，并创建自定义模块。</li><li>第7天：介绍 Ansible 的 Jinja2 模板，在 Playbook 中使用模板。</li><li>第8天：学习如何处理远程主机的执行结果，了解 Ansible 的更高级特性，如错误处理和循环结构。</li></ul><p>第三周：实战练习</p><ul><li>第9天：通过 Ansible 实现基础架构自动化，演示用 Playbook 安装和配置 Web 服务器。</li><li>第10-13天：进行实战练习，例如创建基础设施、部署应用程序、升级中间件等。</li></ul><p>第四周：实践与优化</p><ul><li>第14天：将 Ansible 与其他工具（如 Docker、Kubernetes）集成，实现更复杂的自动化任务。</li><li>第15-17天：优化 Ansible 实践，最佳实践以及测试。</li><li>第18天：复习并总结。</li></ul><h3 id="Golang学习计划"><a href="#Golang学习计划" class="headerlink" title="Golang学习计划"></a>Golang学习计划</h3><h4 id="第一周-1"><a href="#第一周-1" class="headerlink" title="第一周"></a>第一周</h4><ul><li>了解 Golang 语言特性和基本语法<ul><li>学习变量、常量、基本类型、函数、条件语句、循环语句等基本语法。</li><li>重点掌握一些 Golang 独有的特性和优势，比如 goroutine 和 channel。</li></ul></li><li>阅读官方文档<ul><li>从Golang官方网站开始阅读文档，并了解如何下载、配置和安装 Golang。</li><li>熟悉标准库的组织结构和各个方面的文档，比如 os、net、http 等。</li></ul></li></ul><h4 id="第二周-1"><a href="#第二周-1" class="headerlink" title="第二周"></a>第二周</h4><ul><li>学习 Golang 的工具链<ul><li>熟悉 Golang 的工具链，包括 go 命令行工具、依赖管理器.</li><li>了解并使用 go mod 管理依赖。</li></ul></li><li>学习 Web 开发<ul><li>熟悉 Golang 的 Web 应用开发框架，如 Beego、Gin 等。</li></ul></li></ul><h4 id="第三周-1"><a href="#第三周-1" class="headerlink" title="第三周"></a>第三周</h4><ul><li>学习实例开发<ul><li>手写一些 Web 应用程序，如 API、web服务器、爬虫等等，加深对 Golang 的理解和应用。</li></ul></li></ul><h3 id="第四周-1"><a href="#第四周-1" class="headerlink" title="第四周"></a>第四周</h3><ul><li>学习项目实战<ul><li>通过阅读他人的开源项目进行实战参与，了解并学会如何参与到开源社区中。</li></ul></li></ul><h3 id="Python学习计划"><a href="#Python学习计划" class="headerlink" title="Python学习计划"></a>Python学习计划</h3><h4 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h4><ul><li>Day 1: Python 基础概述和编程环境安装</li><li>Day 2: 变量/数字/字符串</li><li>Day 3: 列表和循环</li><li>Day 4: 条件语句和函数</li><li>Day 5-7：复习练习</li></ul><h4 id="Week-2"><a href="#Week-2" class="headerlink" title="Week 2"></a>Week 2</h4><ul><li>Day 8: 面向对象编程基础</li><li>Day 9: 文件 I/O 和异常处理</li><li>Day 10: 模块和包管理</li><li>Day 11: 日期和时间</li><li>Day 12-14：复习练习</li></ul><h4 id="Week-3"><a href="#Week-3" class="headerlink" title="Week 3"></a>Week 3</h4><ul><li>Day 15: Web 开发基础</li><li>Day 16: 网络编程和 Socket 编程</li><li>Day 17: 爬虫编程基础</li><li>Day 18: 数据库编程基础</li><li>Day 19-21: 复习练习</li></ul><h4 id="Week-4"><a href="#Week-4" class="headerlink" title="Week 4"></a>Week 4</h4><ul><li>Day 22: 并行编程和多线程编程</li><li>Day 23: GUI 编程</li><li>Day 24: 图形和可视化编程</li><li>Day 25: 深度学习和科学计算基础</li><li>Day 26-28: 复习练习</li></ul><h3 id="Docker学习计划"><a href="#Docker学习计划" class="headerlink" title="Docker学习计划"></a>Docker学习计划</h3><h4 id="第一周-2"><a href="#第一周-2" class="headerlink" title="第一周"></a>第一周</h4><ul><li>第1天：学习 Docker 基本概念，包括容器、镜像、仓库等。熟悉 Docker 安装和配置，建立第一个 Docker 容器。</li><li>第2天：深入了解 Docker 镜像的创建、查看和删除操作，使用 Docker Hub 拉取镜像和推送自己的镜像。</li><li>第3天：掌握 Docker 构建工具和命令 <code>docker build</code>，学习如何使用 Dockerfile 来构建镜像，并推送到 Docker Hub。</li><li>第4天：学习容器的生命周期和管理，包括运行和停止容器，查看和管理容器资源，导出和导入容器。</li><li>第5天：了解 Docker 网络和数据卷，包括创建、管理和连接容器的网络，数据卷的使用和管理。</li></ul><h4 id="第二周-2"><a href="#第二周-2" class="headerlink" title="第二周"></a>第二周</h4><ul><li>第6天：学习 Docker Compose，创建和管理 Docker 多容器应用程序，使用 YAML 文件定义。</li><li>第7天：掌握 Docker Swarm，创建和管理 Docker 容器群集，包括部署服务和集群管理。</li><li>第8天：学习 Docker 数据管理，包括容器数据的备份和恢复、外部存储的使用和管理。</li><li>第9天：了解 Docker 安全和配置管理，包括 Docker 安全性和最佳实践，如何安全使用 Docker。</li><li>第10天：学习 Docker 监控和日志，包括容器的日志和监控，使用外部工具进行 Docker 容器的监控。</li></ul><h4 id="第三周-2"><a href="#第三周-2" class="headerlink" title="第三周"></a>第三周</h4><ul><li>第11天：了解 Docker API 和插件，包括 Docker API 的基本原理和使用方法，Docker 插件的创建和管理。</li><li>第12天：使用 Docker 云平台，包括 Docker Hub、Docker Cloud、Docker Enterprise 等。</li><li>第13天：掌握 Docker Kubernetes，学习 Kubernetes 的基本原理和使用方法，与 Docker 集成的方法。</li><li>第14天：使用 Docker Swarm，深入学习 Swarm 的原理和使用方法，部署和管理一个大规模的容器群集。</li><li>第15天：学习 Docker 应用场景和最佳实践，包括微服务、CI/CD、虚拟化、AI/ML 环境。</li></ul><h3 id="Kubernetes学习计划"><a href="#Kubernetes学习计划" class="headerlink" title="Kubernetes学习计划"></a>Kubernetes学习计划</h3><h4 id="第-1-个月学习计划："><a href="#第-1-个月学习计划：" class="headerlink" title="第 1 个月学习计划："></a>第 1 个月学习计划：</h4><ul><li>周 1-2：学习 Kubernetes 的基础知识，包括 Kubernetes 的核心概念、架构设计和主要组件。</li><li>周 3-4：安装和配置 Kubernetes，学习如何在本地环境上安装和配置单节点 Kubernetes 集群。</li></ul><h4 id="第-2-个月学习计划："><a href="#第-2-个月学习计划：" class="headerlink" title="第 2 个月学习计划："></a>第 2 个月学习计划：</h4><ul><li>周 1-2：学习 Kubernetes 的核心组件，如 API 服务器、Etcd、控制器和调度程序。</li><li>周 3-4：了解 Kubernetes 的管理操作，如部署 Pod、容器、服务、节点等。</li></ul><h4 id="第-3-个月学习计划："><a href="#第-3-个月学习计划：" class="headerlink" title="第 3 个月学习计划："></a>第 3 个月学习计划：</h4><ul><li>周 1-2：学习 Kubernetes 网络管理，包括 Kubernetes 节点之间的网络连接和服务发现。</li><li>周 3-4：学习如何使用 Kubernetes API，包括如何通过 API 服务器创建和管理 Kubernetes 对象。</li></ul><h4 id="第-4-个月学习计划："><a href="#第-4-个月学习计划：" class="headerlink" title="第 4 个月学习计划："></a>第 4 个月学习计划：</h4><ul><li>周 1-2：了解 Kubernetes 的存储管理和持久化，包括存储卷和存储卷声明。</li><li>周 3-4：学习 Kubernetes 的监控和日志管理，使用 Prometheus 和 EFK 等工具进行 Kubernetes 环境的日志和监控。</li></ul><h4 id="第-5-个月学习计划："><a href="#第-5-个月学习计划：" class="headerlink" title="第 5 个月学习计划："></a>第 5 个月学习计划：</h4><ul><li>周 1-2：学习 Kubernetes 中的安全策略，包括用户认证和授权、网络策略、Secret 管理等方面的内容。</li><li>周 3-4：熟悉 Kubernetes 的定制化和扩展，了解如何使用 Kubernetes 中的插件进行定制化扩展。</li></ul><h4 id="第-6-个月学习计划："><a href="#第-6-个月学习计划：" class="headerlink" title="第 6 个月学习计划："></a>第 6 个月学习计划：</h4><ul><li>周 1-2：学习如何在 Kubernetes 中部署 Web 应用、微服务。</li><li>周 3-4：练习 Kubernetes 大规模集群运组和容灾等方面的实践案例，建立和完善自己的实践能力。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3安装及设置环境变量</title>
      <link href="/2023/03/24/Python3%E5%AE%89%E8%A3%85%E5%8F%8A%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2023/03/24/Python3%E5%AE%89%E8%A3%85%E5%8F%8A%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><code>Python</code>由荷兰数学和计算机科学研究学会的吉多·范罗苏姆于<code>1990</code>年代初设计，作为一门叫做<code>ABC</code>语言的替代品。</p><h2 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h2><h3 id="检查当前系统是否已安装Python"><a href="#检查当前系统是否已安装Python" class="headerlink" title="检查当前系统是否已安装Python"></a>检查当前系统是否已安装Python</h3><p>在终端中输入以下命令来检查系统是否已安装Python：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure><p>如果<code>Python</code>已安装，终端将显示<code>Python</code>的版本号。如果未安装，将显示错误消息。</p><h3 id="安装Python环境"><a href="#安装Python环境" class="headerlink" title="安装Python环境"></a>安装Python环境</h3><p>如果<code>Python</code>未安装，可以通过以下命令来安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python3</span><br></pre></td></tr></table></figure><p>这将安装最新版本的<code>Python 3</code>。</p><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><p>一旦<code>Python</code>被安装，需要将其添加到系统的环境变量中，以便能够在终端中直接访问它。可以使用以下命令来打开<code>.bashrc</code>文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure><p>在文件的末尾添加以下行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/usr/bin/python3</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h3 id="重新加载环境变量"><a href="#重新加载环境变量" class="headerlink" title="重新加载环境变量"></a>重新加载环境变量</h3><p>使用以下命令重新加载环境变量，以便使更改生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="验证Python环境"><a href="#验证Python环境" class="headerlink" title="验证Python环境"></a>验证Python环境</h3><p>输入以下命令来验证<code>Python</code>环境是否正确设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure><p>终端将显示<code>Python</code>的版本号，表明<code>Python</code>环境已成功设置。</p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>在<code>Ubuntu</code>上安装<code>Python 3</code>并设置环境变量需要以下步骤：</p><ol><li><h3 id="检查当前系统是否已安装Python-1"><a href="#检查当前系统是否已安装Python-1" class="headerlink" title="检查当前系统是否已安装Python"></a>检查当前系统是否已安装Python</h3></li></ol><p>在终端中输入以下命令来检查系统是否已安装Python：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure><p>如果Python已安装，终端将显示Python的版本号。如果未安装，将显示错误消息。</p><h3 id="安装Python环境-1"><a href="#安装Python环境-1" class="headerlink" title="安装Python环境"></a>安装Python环境</h3><p>如果Python未安装，可以通过以下命令来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install python3</span><br></pre></td></tr></table></figure><p>这将安装最新版本的<code>Python 3</code>。</p><h3 id="设置环境变量-1"><a href="#设置环境变量-1" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><p>一旦<code>Python</code>被安装，需要将其添加到系统的环境变量中，以便能够在终端中直接访问它。可以使用以下命令来打开.bashrc文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure><p>在文件的末尾添加以下行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/bin/python3</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h3 id="重新加载环境变量-1"><a href="#重新加载环境变量-1" class="headerlink" title="重新加载环境变量"></a>重新加载环境变量</h3><p>使用以下命令重新加载环境变量，以便使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="验证Python环境-1"><a href="#验证Python环境-1" class="headerlink" title="验证Python环境"></a>验证Python环境</h3><p>输入以下命令来验证Python环境是否正确设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure><p>终端将显示<code>Python</code>的版本号，表明<code>Python</code>环境已成功设置。</p><p>这样，就可以在<code>Ubuntu</code>上安装<code>Python 3</code>并设置环境变量了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven 配置阿里源</title>
      <link href="/2023/03/24/Maven%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E6%BA%90/"/>
      <url>/2023/03/24/Maven%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是Maven"><a href="#什么是Maven" class="headerlink" title="什么是Maven?"></a>什么是Maven?</h2><p>如今我们构建一个项目需要用到很多第三方的类库，如写一个使用<code>Spring</code>的<code>Web</code>项目就需要引入大量的<code>jar</code>包。一个项目Jar包的数量之多往往让我们瞠目结舌，并且<code>Jar</code>包之间的关系错综复杂，一个<code>Jar</code>包往往又会引用其他<code>Ja</code>r包，缺少任何一个<code>Jar</code>包都会导致项目编译失败。</p><p>以往开发项目时，程序员往往需要花较多的精力在引用<code>Jar</code>包搭建项目环境上，而这一项工作尤为艰难，少一个<code>Jar</code>包、多一个<code>Jar</code>包往往会报一些让人摸不着头脑的异常。</p><p>而<code>Maven</code>就是一款帮助程序员构建项目的工具，我们只需要告诉<code>Maven</code>需要哪些<code>Jar</code> 包，它会帮助我们下载所有的<code>Jar</code>，极大提升开发效率。</p><h2 id="什么是Maven仓库？"><a href="#什么是Maven仓库？" class="headerlink" title="什么是Maven仓库？"></a>什么是Maven仓库？</h2><p><code>Maven</code>仓库用来存放<code>Maven</code>管理的所有<code>Jar</code>包。分为：<code>本地仓库</code> 和 <code>中央仓库</code>。</p><ul><li><p>本地仓库：<code>Maven</code>本地的<code>Jar</code>包仓库。</p></li><li><p>中央仓库： <code>Maven</code>官方提供的远程仓库。</p></li></ul><p>当项目编译时，<code>Maven</code>首先从本地仓库中寻找项目所需的<code>Jar</code>包，若本地仓库没有，再到<code>Maven</code>的中央仓库下载所需Jar包。</p><h2 id="阿里云的maven仓库列表"><a href="#阿里云的maven仓库列表" class="headerlink" title="阿里云的maven仓库列表"></a>阿里云的maven仓库列表</h2><p><a href="https://maven.aliyun.com/mvn/view">https://maven.aliyun.com/mvn/view</a></p><h2 id="maven-配置指南"><a href="#maven-配置指南" class="headerlink" title="maven 配置指南"></a>maven 配置指南</h2><p>打开 <code>maven</code> 的配置文件（ <code>windows</code> 机器一般在 <code>maven</code> 安装目录的 <strong>conf/settings.xml</strong> ），在<code>&lt;mirrors&gt;&lt;/mirrors&gt;</code>标签中添加 <code>mirror</code> 子节点:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解决无法下载<code>maven</code>依赖，如果想使用其它代理仓库，可在<code>&lt;repositories&gt;&lt;/repositories&gt;</code>节点中加入对应的仓库使用地址。以使用 <code>spring</code> 代理仓为例：</p><p>首先在  <a href="https://maven.aliyun.com/mvn/view">maven仓库列表</a>找对应仓库使用地址；</p><p>其次<code>&lt;repositories&gt;&lt;/repositories&gt;</code>节点中加入对应的仓库使用地址；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在你的 <strong>pom.xml</strong> 文件<code>&lt;denpendencies&gt;&lt;/denpendencies&gt;</code>节点中加入你要引用的文件信息：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>[GROUP_ID]<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>[ARTIFACT_ID]<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>[VERSION]<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>执行拉取命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.aliyun.com/mvn/guide">https://developer.aliyun.com/mvn/guide</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
            <tag> Spring </tag>
            
            <tag> Jar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 清理缓存和缓存内容</title>
      <link href="/2023/03/21/Linux%20%E6%B8%85%E7%90%86%E7%BC%93%E5%AD%98%E5%92%8C%E7%BC%93%E5%AD%98%E5%86%85%E5%AE%B9/"/>
      <url>/2023/03/21/Linux%20%E6%B8%85%E7%90%86%E7%BC%93%E5%AD%98%E5%92%8C%E7%BC%93%E5%AD%98%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在大多数情况下，<code>Linux</code>缓存耗用的内存量并不会对系统性能产生太大的影响，因为缓存可以提高系统的性能并加快访问速度。因此，除非你确实需要清除缓存以释放内存，否则最好不要将清理缓存作为常规操作。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul><li><code>sync</code> 命令将硬盘缓存数据同步到磁盘上，以保存文件。</li><li><code>echo 1 &gt; /proc/sys/vm/drop_caches</code> 这个命令会将页缓存清空。</li><li><code>echo 2 &gt; /proc/sys/vm/drop_caches</code> 这个命令将释放内存缓存和<code>inode</code>对象。</li><li><code>echo 3 &gt; /proc/sys/vm/drop_caches</code> 将清空缓存和内存缓存<code>inode</code>对象。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker搭建DNS服务器</title>
      <link href="/2023/03/20/Docker%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/03/20/Docker%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p> <code>DNS</code>服务器是(<code>Domain Name System</code>或者<code>Domain Name Service</code>)域名系统或者域名服务,域名系统为Internet上的主机分配域名地址和<code>IP</code>地址。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><div class="table-container"><table><thead><tr><th><strong>IP</strong></th><th><strong>系统版本</strong></th><th><strong>角色</strong></th></tr></thead><tbody><tr><td><strong>192.168.40.121</strong></td><td><strong>Ubuntu 22.10</strong></td><td><strong>DNS服务器</strong></td></tr><tr><td><strong>192.168.40.122</strong></td><td><strong>Ubuntu 22.10</strong></td><td><strong>测试机器</strong></td></tr></tbody></table></div><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><h4 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@121:~# apt-get update</span><br></pre></td></tr></table></figure><h4 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@121:~# apt-get install -y docker.io</span><br></pre></td></tr></table></figure><h4 id="创建文件存储文件"><a href="#创建文件存储文件" class="headerlink" title="创建文件存储文件"></a>创建文件存储文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@121:~#  <span class="built_in">mkdir</span> -p /opt/docker/dns-server</span><br></pre></td></tr></table></figure><h4 id="创建容器运行dns服务器"><a href="#创建容器运行dns服务器" class="headerlink" title="创建容器运行dns服务器"></a>创建容器运行dns服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@121:~# docker run --name dns-server -d --restart=always --publish 53:53/tcp --publish 53:53/udp --publish 10000:10000/tcp --volume /opt/docker/dns-server:/data sameersbn/bind:latest</span><br></pre></td></tr></table></figure><h5 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h5><ul><li><p><code>-p 53:53/udp</code> 绑定容器53端口到宿主机的<code>53</code>端口，<code>DNS</code>默认端口;</p></li><li><p><code>-p 10000:10000</code> 图形化界面管理器端口;</p></li><li><p><code>-volume /dns-server:/data</code> 挂载本地目录作为<code>dns</code>配置存储;</p></li></ul><h4 id="查看端口占用情况"><a href="#查看端口占用情况" class="headerlink" title="查看端口占用情况"></a>查看端口占用情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@121:~# lsof -i:53 <span class="comment">#查看53端口的进程</span></span><br></pre></td></tr></table></figure><p>如果被占用参考<a href="https://www.otakusay.com/866.html">https://www.otakusay.com/866.html</a></p><h3 id="访问DNS服务器"><a href="#访问DNS服务器" class="headerlink" title="访问DNS服务器"></a>访问DNS服务器</h3><ul><li><p>访问地址<a href="https://localhost:10000">https://localhost:10000</a> </p></li><li><p>默认账户和密码<code>root/password</code></p></li></ul><p><img src="https://s1.ax1x.com/2023/03/20/pptx82j.png" alt=""></p><h3 id="DNS服务器页面设置"><a href="#DNS服务器页面设置" class="headerlink" title="DNS服务器页面设置"></a>DNS服务器页面设置</h3><h4 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h4><p><img src="https://s1.ax1x.com/2023/03/20/pptxBiF.png" alt=""></p><h4 id="设置DNS-Server默认值"><a href="#设置DNS-Server默认值" class="headerlink" title="设置DNS-Server默认值"></a>设置DNS-Server默认值</h4><p><img src="https://s1.ax1x.com/2023/03/20/pptzCyn.png" alt=""></p><p><img src="https://s1.ax1x.com/2023/03/20/pptz9Qs.png" alt=""></p><h4 id="创建新的主区域-正向解析"><a href="#创建新的主区域-正向解析" class="headerlink" title="创建新的主区域-正向解析"></a>创建新的主区域-正向解析</h4><p><img src="https://s1.ax1x.com/2023/03/20/pptzNSH.png" alt=""></p><p><img src="https://s1.ax1x.com/2023/03/20/pptzYfe.png" alt=""></p><p><strong>注意：主服务器写<code>localhost</code>，避免重启后失效. 因为我们只做私网解析，指向本地即可</strong></p><p><strong>否则会报错如：无法创建主区域 : ‘7xxxxxxx..’不是有效的主服务器</strong></p><h4 id="在刚新建的域名下添加ip映射"><a href="#在刚新建的域名下添加ip映射" class="headerlink" title="在刚新建的域名下添加ip映射"></a>在刚新建的域名下添加<code>ip</code>映射</h4><p><img src="https://s1.ax1x.com/2023/03/20/ppNpSrn.png" alt=""></p><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@121:~#  docker restart dns-server</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="修改DNS"><a href="#修改DNS" class="headerlink" title="修改DNS"></a>修改DNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@122:~# vi /etc/systemd/resolved.conf</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">DNS=192.168.40.121 114.114.114.114     <span class="comment">#取消前面的注释，将dns服务器IP写在前面，后面作为备用DNS服务器</span></span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="重启systemd-resolved服务"><a href="#重启systemd-resolved服务" class="headerlink" title="重启systemd-resolved服务"></a>重启systemd-resolved服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@122:~# systemctl restart systemd-resolved</span><br><span class="line"></span><br><span class="line">root@122:~# systemctl <span class="built_in">enable</span> systemd-resolved</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ICMP测试"><a href="#ICMP测试" class="headerlink" title="ICMP测试"></a>ICMP测试</h3><p><img src="https://s1.ax1x.com/2023/03/20/ppN9ATP.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Dns </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 实现文件的上传与下载</title>
      <link href="/2023/03/20/Nginx%20%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD/"/>
      <url>/2023/03/20/Nginx%20%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Nginx</code>是一款高性能、可靠的Web服务器软件，同时用作文件上传和下载</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]# <span class="built_in">cat</span> /etc/redhat-release </span><br><span class="line">CentOS Linux release 8.5.2111</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]# useradd -s /sbin/nologin -M nginx  <span class="comment">#创建一个nginx用户，且不生成用户目录，和不能登录</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]# <span class="built_in">mkdir</span> -p /export/share/upload/</span><br><span class="line">[root@127 ~]# <span class="built_in">mkdir</span> -p /export/tmp/upload/</span><br><span class="line">[root@127 ~]# <span class="built_in">cd</span> /export/tmp/upload/</span><br><span class="line">[root@127 upload]# <span class="built_in">mkdir</span> 0  1  2  3  4  5  6  7  8  9  state</span><br><span class="line">[root@127 upload]# <span class="built_in">chown</span> -R nginx:nginx /export/  <span class="comment">#文件夹权限管理</span></span><br><span class="line"></span><br><span class="line">[root@127 <span class="built_in">export</span>]# tree</span><br><span class="line">.</span><br><span class="line">├── share</span><br><span class="line">│   └── upload</span><br><span class="line">└── tmp</span><br><span class="line">    └── upload</span><br><span class="line">        ├── 0</span><br><span class="line">        ├── 1</span><br><span class="line">        ├── 2</span><br><span class="line">        ├── 3</span><br><span class="line">        ├── 4</span><br><span class="line">        ├── 5</span><br><span class="line">        ├── 6</span><br><span class="line">        ├── 7</span><br><span class="line">        ├── 8</span><br><span class="line">        ├── 9</span><br><span class="line">        └── state</span><br><span class="line"></span><br><span class="line">15 directories, 0 files</span><br></pre></td></tr></table></figure><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]# yum remove nginx <span class="comment">#卸载旧版本</span></span><br><span class="line"></span><br><span class="line">[root@127 ~]# yum -y install gcc gcc-c++ autoconf automake gd gd-devel zlib zlib-devel openssl openssl-devel pcre-devel </span><br><span class="line"></span><br><span class="line">[root@127 ~]# <span class="built_in">mkdir</span> /root/thb</span><br><span class="line"></span><br><span class="line">[root@127 ~]# <span class="built_in">cd</span> /root/thb</span><br><span class="line"></span><br><span class="line">[root@127 thb]# wget http://nginx.org/download/nginx-1.17.7.tar.gz</span><br><span class="line"></span><br><span class="line">[root@127 thb]# git <span class="built_in">clone</span> https://github.com/hongzhidao/nginx-upload-module.git</span><br><span class="line"></span><br><span class="line">[root@127 thb]# git <span class="built_in">clone</span> https://github.com/masterzen/nginx-upload-progress-module.git</span><br><span class="line"></span><br><span class="line">[root@127 thb]# tar -zxvf nginx-1.17.7.tar.gz </span><br><span class="line"></span><br><span class="line">[root@127 thb]# <span class="built_in">cd</span> nginx-1.17.7/</span><br><span class="line"></span><br><span class="line">[root@127 nginx-1.17.7]# ./configure  --with-debug --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --add-module=/root/thb/nginx-upload-module --add-module=/root/thb/nginx-upload-progress-module --with-stream --with-http_image_filter_module --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-file-aio --with-cc-opt=<span class="string">&#x27;-Wno-format-security -Wno-unused-but-set-variable -Wno-unused-result -D NGX_HAVE_OPENSSL_MD5_H=1 -D NGX_OPENSSL_MD5=1 -D NGX_HAVE_OPENSSL_SHA1_H=1 -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2  -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic&#x27;</span></span><br><span class="line"></span><br><span class="line">[root@127 nginx-1.17.7]# make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">[root@127 nginx-1.17.7]# <span class="built_in">cd</span> /etc/nginx/</span><br><span class="line"></span><br><span class="line">[root@127 nginx]# vi nginx.conf</span><br><span class="line">worker_processes  4;  </span><br><span class="line"><span class="comment">#error_log  logs/error.log;  </span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;  </span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;  </span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;  </span></span><br><span class="line">events &#123;  </span><br><span class="line">    worker_connections  1024;  </span><br><span class="line">&#125;  </span><br><span class="line">http &#123;  </span><br><span class="line">    include       mime.types;  </span><br><span class="line">    default_type  application/octet-stream;  </span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;  </span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;  </span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;  </span></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;  </span></span><br><span class="line">    sendfile        on;  </span><br><span class="line">    <span class="comment">#tcp_nopush     on;  </span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;  </span></span><br><span class="line">    keepalive_timeout  65;  </span><br><span class="line">    upload_progress proxied 8m;  </span><br><span class="line">    <span class="comment">#gzip  on;  </span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        auth_basic <span class="string">&quot;Please input password&quot;</span>; <span class="comment">#这里是验证时的提示信息</span></span><br><span class="line">        auth_basic_user_file /etc/nginx/passwd/testpwd;</span><br><span class="line">        <span class="comment"># upload</span></span><br><span class="line">        client_max_body_size 100g; <span class="comment"># 这个配置表示最大上传大小，但是我没有验证过是否能传 100g 的文件</span></span><br><span class="line">        <span class="comment"># Upload form should be submitted to this location</span></span><br><span class="line">        location /upload &#123;</span><br><span class="line">                <span class="comment"># Pass altered request body to this location</span></span><br><span class="line">                upload_pass /upload.php;</span><br><span class="line">                <span class="comment"># 开启resumable</span></span><br><span class="line">                upload_resumable on;</span><br><span class="line">                <span class="comment"># Store files to this directory</span></span><br><span class="line">                <span class="comment"># The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist</span></span><br><span class="line">                <span class="comment"># 记得修改目录的读写权限</span></span><br><span class="line">                upload_store /export/tmp/upload 1;</span><br><span class="line">                upload_state_store /export/tmp/upload/state;</span><br><span class="line">                <span class="comment"># Allow uploaded files to be read by all</span></span><br><span class="line">                upload_store_access all:r;</span><br><span class="line">                <span class="comment"># Set specified fields in request body</span></span><br><span class="line">                upload_set_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_name&quot;</span> <span class="variable">$upload_file_name</span>;</span><br><span class="line">                upload_set_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_content_type&quot;</span> <span class="variable">$upload_content_type</span>;</span><br><span class="line">                upload_set_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_path&quot;</span> <span class="variable">$upload_tmp_path</span>;</span><br><span class="line">                <span class="comment"># Inform backend about hash and size of a file</span></span><br><span class="line">                upload_aggregate_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_md5&quot;</span> <span class="variable">$upload_file_md5</span>;</span><br><span class="line">                upload_aggregate_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_size&quot;</span> <span class="variable">$upload_file_size</span>;</span><br><span class="line">                upload_pass_form_field <span class="string">&quot;^submit$|^description$&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">           <span class="comment"># fastcgi_pass   unix:/run/php-fpm/php-fpm.sock;</span></span><br><span class="line">           fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">           fastcgi_index  index.php;</span><br><span class="line">           <span class="comment"># fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">           fastcgi_param   SCRIPT_FILENAME    $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">           include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">        location /myfiles &#123;</span><br><span class="line">            <span class="built_in">alias</span> /export/share/upload/;        <span class="comment"># 文件存放目录，注意要以 &#x27;/&#x27; 结尾；</span></span><br><span class="line">            index index.html;               <span class="comment"># 如果文件存放目录有 index.html，会跳转到 index.html；</span></span><br><span class="line">            autoindex on;               <span class="comment"># 自动列出目录下的文件；</span></span><br><span class="line">            autoindex_exact_size off;   <span class="comment"># 文件大小按 G、M 的格式显示，而不是 Bytes；</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="编辑上传文件"><a href="#编辑上传文件" class="headerlink" title="编辑上传文件"></a>编辑上传文件</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[root@127 nginx]<span class="comment"># cd /etc/nginx/html/</span></span><br><span class="line">[root@127 html]<span class="comment"># ls</span></span><br><span class="line">50x.<span class="attribute">html</span>  index.html</span><br><span class="line">[root@<span class="number">127</span> html]<span class="comment"># vi upload.php</span></span><br><span class="line">[root@<span class="number">127</span> html]<span class="comment"># cat upload.php </span></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$header_prefix</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">$<span class="attribute">slots</span> = <span class="number">6</span>;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;<span class="attribute">Test</span> upload&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if (<span class="variable">$_POST</span>)&#123;</span><br><span class="line">    <span class="attribute">echo</span> <span class="string">&quot;&lt;h3&gt;Uploaded files:&lt;/h3&gt;&quot;</span>;</span><br><span class="line">    <span class="attribute">echo</span> <span class="string">&quot;&lt;table border=\&quot;2\&quot; cellpadding=\&quot;2\&quot;&gt;&quot;</span>;</span><br><span class="line">    <span class="attribute">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Location&lt;/td&gt;&lt;td&gt;Content type&lt;/td&gt;&lt;td&gt;MD5&lt;/td&gt;&lt;td&gt;Size&lt;/td&gt;&lt;td&gt;Scp Command&lt;/td&gt;&lt;td&gt;Wget Command&lt;/tr&gt;&quot;</span>;</span><br><span class="line">    <span class="attribute">for</span> (<span class="variable">$i</span>=<span class="number">1</span>;$i&lt;=$slots;$i++)&#123;</span><br><span class="line">        $<span class="attribute">key</span> = <span class="variable">$header_prefix</span>.<span class="variable">$i</span>;</span><br><span class="line">        <span class="attribute">if</span> (array_key_exists(<span class="variable">$key</span>.<span class="string">&quot;_name&quot;</span>, <span class="variable">$_POST</span>) &amp;&amp; array_key_exists(<span class="variable">$key</span>.<span class="string">&quot;_path&quot;</span>,<span class="variable">$_POST</span>)) &#123;</span><br><span class="line">            $<span class="attribute">tmp_name</span> = <span class="variable">$_POST</span>[<span class="variable">$key</span>.<span class="string">&quot;_path&quot;</span>];</span><br><span class="line">            $<span class="attribute">name</span> = <span class="variable">$_POST</span>[<span class="variable">$key</span>.<span class="string">&quot;_name&quot;</span>];</span><br><span class="line">            $<span class="attribute">content_type</span> = <span class="variable">$_POST</span>[<span class="variable">$key</span>.<span class="string">&quot;_content_type&quot;</span>];</span><br><span class="line">            $<span class="attribute">md5</span> = <span class="variable">$_POST</span>[<span class="variable">$key</span>.<span class="string">&quot;_md5&quot;</span>];</span><br><span class="line">            $<span class="attribute">size</span> = <span class="variable">$_POST</span>[<span class="variable">$key</span>.<span class="string">&quot;_size&quot;</span>];</span><br><span class="line">            $<span class="attribute">final_path</span> = <span class="string">&quot;/export/share/upload&quot;</span>;</span><br><span class="line">            <span class="attribute">if</span> (copy(<span class="variable">$tmp_name</span>, <span class="string">&quot;<span class="variable">$final_path</span>/<span class="variable">$name</span>&quot;</span>)) &#123;</span><br><span class="line">                    <span class="attribute">echo</span> <span class="string">&quot;SUCCESS!&quot;</span>;</span><br><span class="line">            &#125; <span class="section">else</span> &#123;</span><br><span class="line">                    <span class="attribute">echo</span> <span class="string">&quot;FAIL!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $<span class="attribute">scp_cmd</span> = <span class="string">&quot;scp team@***:/export/share/upload/<span class="variable">$name</span> .&quot;</span>;</span><br><span class="line">            $<span class="attribute">wget_cmd</span> = <span class="string">&quot;wget http://***/files/upload/<span class="variable">$name</span>&quot;</span>;</span><br><span class="line">            <span class="attribute">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;<span class="variable">$name</span>&lt;/td&gt;&lt;td&gt;<span class="variable">$final_path</span>&lt;/td&gt;&lt;td&gt;<span class="variable">$content_type</span>&lt;/td&gt;&lt;td&gt;<span class="variable">$md5</span>&lt;/td&gt;&lt;td&gt;<span class="variable">$size</span>&lt;/td&gt;&lt;td&gt;<span class="variable">$scp_cmd</span>&lt;/td&gt;&lt;td&gt;<span class="variable">$wget_cmd</span>&lt;/td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">echo</span> <span class="string">&quot;&lt;/table&gt;&quot;</span>;</span><br><span class="line">&#125;else&#123;?&gt;</span><br><span class="line">&lt;h3&gt;<span class="attribute">Select</span> files to upload&lt;/h3&gt;</span><br><span class="line">&lt;form name=<span class="string">&quot;upload&quot;</span> method=<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> action=<span class="string">&quot;/upload&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file1&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file2&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file3&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file4&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file5&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file6&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Upload&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;test&quot;</span> value=<span class="string">&quot;value&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="增加nginx网页登录验证"><a href="#增加nginx网页登录验证" class="headerlink" title="增加nginx网页登录验证"></a>增加nginx网页登录验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]# yum  -y install httpd-tools</span><br><span class="line">[root@127 ~]# <span class="built_in">mkdir</span> -p /etc/nginx/passwd/</span><br><span class="line">[root@127 ~]# htpasswd -c /etc/nginx/passwd/testpwd user1</span><br><span class="line">New password: </span><br><span class="line">Re-<span class="built_in">type</span> new password: </span><br><span class="line">Adding password <span class="keyword">for</span> user user1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="增加nginx启动文件"><a href="#增加nginx启动文件" class="headerlink" title="增加nginx启动文件"></a>增加nginx启动文件</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]<span class="comment"># vi /lib/systemd/system/nginx.service</span></span><br><span class="line">[root@127 ~]<span class="comment"># cat /lib/systemd/system/nginx.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=<span class="attribute">The</span> nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line"><span class="comment"># Nginx will fail to start if /run/nginx.pid already exists but has the wrong</span></span><br><span class="line"><span class="comment"># SELinux context. This might happen when running `nginx -t` from the cmdline.</span></span><br><span class="line"><span class="comment"># https://bugzilla.redhat.com/show_bug.cgi?id=1268621</span></span><br><span class="line">ExecStartPre=/usr/bin/rm -f /run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=<span class="number">5</span></span><br><span class="line">KillMode=process</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="PHP安装"><a href="#PHP安装" class="headerlink" title="PHP安装"></a>PHP安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[root@127 thb]# yum -y install gcc automake autoconf libtool make</span><br><span class="line">[root@127 thb]# yum -y install gcc gcc-c++ glibc</span><br><span class="line">[root@127 thb]# yum -y install libmcrypt libmcrypt-devel mhash-devel libxslt-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel</span><br><span class="line">[root@127 thb]# <span class="built_in">cd</span> ~</span><br><span class="line">[root@127 ~]# wget https://museum.php.net/php5/php-5.4.7.tar.gz</span><br><span class="line">[root@127 ~]# tar -zxvf php-5.4.7.tar.gz </span><br><span class="line">[root@127 ~]# <span class="built_in">cd</span> php-5.4.7/</span><br><span class="line">[root@127 php-5.4.7]# ./configure --prefix=/usr/local/php  --enable-fpm --with-mcrypt --enable-mbstring --disable-pdo --with-curl --disable-debug  --disable-rpath --enable-inline-optimization --with-bz2  --with-zlib --enable-sockets --enable-sysvsem --enable-sysvshm --enable-pcntl --enable-mbregex --with-mhash --enable-zip --with-pcre-regex --with-mysql --with-Mysqli --with-gd --with-jpeg-dir</span><br><span class="line">[root@127 php-5.4.7]# make all install</span><br><span class="line">[root@127 ~]# php -m  <span class="comment">#如果没有php-fpm，需要进行安装</span></span><br><span class="line">[PHP Modules]</span><br><span class="line">Core</span><br><span class="line">ctype</span><br><span class="line"><span class="built_in">date</span></span><br><span class="line">dom</span><br><span class="line">ereg</span><br><span class="line">fileinfo</span><br><span class="line">filter</span><br><span class="line"><span class="built_in">hash</span></span><br><span class="line">iconv</span><br><span class="line">json</span><br><span class="line">libxml</span><br><span class="line">pcre</span><br><span class="line">PDO</span><br><span class="line">pdo_sqlite</span><br><span class="line">Phar</span><br><span class="line">posix</span><br><span class="line">Reflection</span><br><span class="line">session</span><br><span class="line">SimpleXML</span><br><span class="line">SPL</span><br><span class="line">sqlite3</span><br><span class="line">standard</span><br><span class="line">tokenizer</span><br><span class="line">xml</span><br><span class="line">xmlreader</span><br><span class="line">xmlwriter</span><br><span class="line"></span><br><span class="line">[Zend Modules]</span><br><span class="line"></span><br><span class="line">[root@127 ~]# yum install php-fpm</span><br><span class="line">[root@127 ~]# <span class="built_in">cd</span> /usr/local/php</span><br><span class="line">[root@127 php]# <span class="built_in">ls</span></span><br><span class="line">man</span><br><span class="line">[root@127 ~]# find / -name php-fpm.conf.default</span><br><span class="line">/usr/share/doc/php-fpm/php-fpm.conf.default</span><br><span class="line">[root@127 ~]# <span class="built_in">cd</span> /usr/share/doc/php-fpm/</span><br><span class="line">[root@127 php-fpm]# <span class="built_in">ls</span></span><br><span class="line">php-fpm.conf.default  www.conf.default</span><br><span class="line">[root@127 php-fpm]# <span class="built_in">cp</span> php-fpm.conf.default  php-fpm.conf </span><br><span class="line">[root@127 php-fpm]# vi php-fpm.conf</span><br><span class="line">[root@127 php-fpm]# <span class="built_in">cat</span> php-fpm.conf</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;;</span><br><span class="line">; FPM Configuration ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">; All relative paths <span class="keyword">in</span> this configuration file are relative to PHP<span class="string">&#x27;s install</span></span><br><span class="line"><span class="string">; prefix (/usr). This prefix can be dynamically changed by using the</span></span><br><span class="line"><span class="string">; &#x27;</span>-p<span class="string">&#x27; argument from the command line.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="string">; Global Options ;</span></span><br><span class="line"><span class="string">;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[global]</span></span><br><span class="line"><span class="string">; Pid file</span></span><br><span class="line"><span class="string">; Note: the default prefix is /var</span></span><br><span class="line"><span class="string">; Default Value: none</span></span><br><span class="line"><span class="string">;pid = run/php-fpm.pid</span></span><br><span class="line"><span class="string">user = nginx</span></span><br><span class="line"><span class="string">group = nginx</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="启动php-fpm服务"><a href="#启动php-fpm服务" class="headerlink" title="启动php-fpm服务"></a>启动php-fpm服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@127 php-fpm]# systemctl restart php-fpm.service <span class="comment">#重启php-fpm进程</span></span><br></pre></td></tr></table></figure><h4 id="启动nginx服务"><a href="#启动nginx服务" class="headerlink" title="启动nginx服务"></a>启动nginx服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@127 ~]# systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"></span><br><span class="line">[root@127 ~]# systemctl start nginx</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="https://s1.ax1x.com/2023/03/21/ppUEKWq.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员手记</title>
      <link href="/2023/03/15/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%89%8B%E8%AE%B0/"/>
      <url>/2023/03/15/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%89%8B%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="终端快捷键"><a href="#终端快捷键" class="headerlink" title="终端快捷键"></a>终端快捷键</h2><h3 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h3><p>| 快捷键    | 作用                               |<br>| ————- | ————————————————— |<br>| <code>crtl+a</code>  | 移动到开头                         |<br>| <code>crtl+e</code>  | 移动到结尾                         |<br>| <code>alt+b</code>   | 向左移动一个单词                   |<br>| <code>alt+f</code>   | 向右移动一个单词                   |<br>| <code>crtl+b</code>  | 向左移动一个字符                   |<br>| <code>crtl+f</code>  | 向右移动一个字符                   |<br>| <code>esc+b</code>   | 向左移动一个单词                   |<br>| <code>esc+f</code>   | 向右移动一个单词                   |<br>| <code>ctrl+XX</code> | 在上次光标和当前光标所在字符间跳转 |<br>| <code>esc+t</code>   | 交换光标位置钱的两个单词           |</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>| 快捷键   | 作用                     |<br>| ———— | ———————————— |<br>| <code>ctrl+k</code> | 删除光标后所有字符       |<br>| <code>ctrl+u</code> | 删除光标前所有字符       |<br>| <code>ctrl+w</code> | 删除光标前一个单词       |<br>| <code>ctrl+d</code> | 删除光标所在字符（右侧） |<br>| <code>ctrl+h</code> | 删除光标前字符（左侧）   |</p><h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><p>| 快捷键   | 作用                   |<br>| ———— | ——————————— |<br>| <code>ctrl+_</code> | 撤销操作               |<br>| <code>ctrl+y</code> | 粘贴ctrl+u/k剪切的内容 |<br>| <code>ctrl+?</code> | 撤销前一次输入         |<br>| <code>alt+r</code>  | 撤销前一次动作         |</p><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><p>| 快捷键   | 作用                           |<br>| ———— | ——————————————— |<br>| <code>ctrl+t</code> | 将光标当前字符与前一个字符替换 |</p><h3 id="历史命令编辑"><a href="#历史命令编辑" class="headerlink" title="历史命令编辑"></a>历史命令编辑</h3><p>| 快捷键   | 作用                           |<br>| ———— | ——————————————— |<br>| <code>ctrl+p</code> | 上一条历史命令                 |<br>| <code>ctrl+n</code> | 下一条历史命令                 |<br>| <code>alt+&gt;</code>  | 上一次执行的命令的最后一个单词 |<br>| <code>ctrl+r</code> | 搜索历史命令                   |</p><h3 id="控制命令"><a href="#控制命令" class="headerlink" title="控制命令"></a>控制命令</h3><p>| 快捷键       | 作用                   |<br>| —————— | ——————————— |<br>| <code>ctrl+l</code>     | 清除屏幕               |<br>| <code>ctrl+s</code>     | 锁住终端，阻止屏幕输出 |<br>| <code>ctrl+q</code>     | 解锁终端，允许屏幕输出 |<br>| <code>ctrl+c</code>     | 终止命令               |<br>| <code>ctrl+i</code>     | 补全，相当于tab        |<br>| <code>ctrl+o</code>     | 重复执行命令           |<br>| <code>alt+&lt;数字&gt;</code> | 操作的次数             |<br>| <code>ctrl+z</code>     | 挂起                   |</p><h3 id="命令"><a href="#命令" class="headerlink" title="!命令"></a>!命令</h3><p>| 快捷  | 作用          |<br>| ——- | ——————- |<br>| <code>!!</code>  | 执行上条命令  |<br>| <code>!-n</code> | 执行前n条命令 |</p><h2 id="shell中的-用法"><a href="#shell中的-用法" class="headerlink" title="shell中的 $ 用法"></a>shell中的 $ 用法</h2><p>| 特殊符号 | 含义                                                         |<br>| ———— | —————————————————————————————— |<br>| $#       | 传给脚本的参数个数                                           |<br>| $0       | shell脚本文件的名字                                          |<br>| $1       | 传递给该shell脚本的第一个参数                                |<br>| $2       | 传递给该shell脚本的第二个参数                                |<br>| $@       | 传给脚本的所有参数的列表                                     |<br>| $*       | 以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个 |<br>| $$       | 脚本运行的当前进程ID号，Shell本身的PID                       |<br>| $?       | 显示最后命令的退出状态，0表示没有错误，其他表示有错误        |<br>| $!       | Shell最后运行的后台Process的PID                              |<br>| $-       | 使用Set命令设定的Flag一览                                    |<br>| $()      | 相当于``，括号中放的是命令                                   |<br>| ${}      | 括号中放的是变量。例如echo P A T H 取 P A T H 变 量 的 值 并 打 印 ， 也 可 以 不 加 括 号 比 如 {PATH}取PATH变 量的值并打印，也可以不加括号比如PATH取PATH变量的值并打印，也可以不加括号比如PATH。 |<br>| $1~n     | 添加到Shell的各参数值。$1是第1参数、$2是第2参数…。           |</p><h3 id="的特殊用法"><a href="#的特殊用法" class="headerlink" title="${}的特殊用法"></a>${}的特殊用法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sh, dash 都不能使用该语法</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基础语法：<span class="variable">$&#123;parameter,,pattern&#125;</span> / <span class="variable">$&#123;parameter^^pattern&#125;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">另外这个语法不会改变原变量</span></span><br><span class="line">var=&quot;Hello,World&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第一个字符变为大写</span></span><br><span class="line">echo $&#123;var^&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所有字符变为大写</span></span><br><span class="line">echo $&#123;var^^&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第一个字符变为小写</span></span><br><span class="line">echo $&#123;var,&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所有字符变为小写</span></span><br><span class="line">echo $&#123;var,,&#125;</span><br></pre></td></tr></table></figure><h2 id="判断-比较"><a href="#判断-比较" class="headerlink" title="判断/比较"></a>判断/比较</h2><h3 id="语法（用例）"><a href="#语法（用例）" class="headerlink" title="语法（用例）"></a>语法（用例）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if [ $SYSTEM = &quot;Linux&quot; ] ; then # 如果是linux话输出linux字符串</span><br><span class="line">echo &quot;Linux&quot;</span><br><span class="line">elif [ $SYSTEM = &quot;FreeBSD&quot; ] ; then</span><br><span class="line">echo &quot;FreeBSD&quot;</span><br><span class="line">elif [ $SYSTEM = &quot;Solaris&quot; ] ; then</span><br><span class="line">echo &quot;Solaris&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;What?&quot;</span><br><span class="line">fi # 判断结束，以fi结尾</span><br></pre></td></tr></table></figure><h3 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h3><p>| 语法         | 含义                           |<br>| —————— | ——————————————— |<br>| str1 = str2  | 当两个串有相同内容、长度时为真 |<br>| str1 != str2 | 当串str1和str2不等时为真       |<br>| -n str1      | 当串的长度大于0时为真(串非空)  |<br>| -z str1      | 当串的长度为0时为真(空串)      |<br>| str1         | 当串str1为非空时为真           |</p><h3 id="数字的判断"><a href="#数字的判断" class="headerlink" title="数字的判断"></a>数字的判断</h3><p>| 语法          | 含义                 |<br>| ——————- | —————————— |<br>| int1 -eq int2 | 两数相等为真         |<br>| int1 -ne int2 | 两数不等为真         |<br>| int1 -gt int2 | int1大于int2为真     |<br>| int1 -ge int2 | int1大于等于int2为真 |<br>| int1 -lt int2 | int1小于int2为真     |<br>| int1 -le int2 | int1小于等于int2为真 |</p><h3 id="文件相关的if判断条件语句"><a href="#文件相关的if判断条件语句" class="headerlink" title="文件相关的if判断条件语句"></a>文件相关的if判断条件语句</h3><p>| 语法    | 含义                                        |<br>| ———- | —————————————————————- |<br>| -r file | 用户可读为真                                |<br>| -w file | 用户可写为真                                |<br>| -x file | 用户可执行为真                              |<br>| -f file | 文件为正规文件为真                          |<br>| -d file | 文件为目录为真                              |<br>| -c file | 文件为字符特殊文件为真                      |<br>| -b file | 文件为块特殊文件为真                        |<br>| -s file | 文件大小非0时为真                           |<br>| -t file | 当文件描述符(默认为1)指定的设备为终端时为真 |</p><h3 id="复杂逻辑判断"><a href="#复杂逻辑判断" class="headerlink" title="复杂逻辑判断"></a>复杂逻辑判断</h3><p>| 语法 | 含义 |<br>| —— | —— |<br>| -a   | 与   |<br>| -o   | 或   |<br>| !    | 非   |</p><h2 id="和-的区别"><a href="#和-的区别" class="headerlink" title="[] 和 [[]] 的区别"></a>[] 和 [[]] 的区别</h2><blockquote><p>if [[]] 要求括号里的表达式前后必须有一个空格，格式如 if [[ xxx ]]。<br>当 if [[]] 用于字符串常量或变量比较时，表达式本身的运算符，如 &lt;、&gt;、==、!= ，其前后可以不加空格；<br>但当 if [[]] 用于数值比较时，表达式本身的运算符前后必须加空格，否则会得到相反的结果。</p></blockquote><p>如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if [[ $1 != &quot;start&quot;  &amp;&amp;  $1 != &quot;stop&quot; ]]</span><br><span class="line"></span><br><span class="line">在if之后要用空格,[[ 之后要有一个空格,]]之前要有空格,不然会出错.</span><br><span class="line"></span><br><span class="line">elif [[ $1 == &quot;stop&quot; ]] </span><br><span class="line"></span><br><span class="line">双等号两边要有空格不然后会出错.</span><br></pre></td></tr></table></figure><h2 id="在shell中查看每条指令实际执行的结果"><a href="#在shell中查看每条指令实际执行的结果" class="headerlink" title="在shell中查看每条指令实际执行的结果"></a>在shell中查看每条指令实际执行的结果</h2><p><code>set +x</code>表示开始记录，<code>set -x</code>表示停止记录。</p><p>例子：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set +x</span><br><span class="line">name=&quot;test&quot;</span><br><span class="line">echo $name</span><br><span class="line">set -x</span><br></pre></td></tr></table></figure><h2 id="实用小技巧"><a href="#实用小技巧" class="headerlink" title="实用小技巧"></a>实用小技巧</h2><p>查找包含某个字符串的所有文件，可以用于后续的自动处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指令</span></span><br><span class="line">grep -r &quot;desktop\.&quot; | awk &#x27;&#123;print $1&#125;&#x27; | sed &#x27;s/://g&#x27; | uniq</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用途</span></span><br><span class="line">for script_name in `grep -r &quot;desktop\.&quot; | awk &#x27;&#123;print $1&#125;&#x27; | sed &#x27;s/://g&#x27; | uniq`</span><br><span class="line">do</span><br><span class="line">echo y | edopkg pull $script_name</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h2><p><code>dmesg</code>命令可以查看系统的整个启动日志</p><h1 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h1><h2 id="批量删除已合并分支"><a href="#批量删除已合并分支" class="headerlink" title="批量删除已合并分支"></a>批量删除已合并分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取已合并分支</span></span><br><span class="line">git branch --merged</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">筛选去除指定字符串（正则方式）</span></span><br><span class="line">grep -i -v -E &quot;master|dev&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以字符串结尾的</span></span><br><span class="line">grep -i -v -E &quot;x-master$|x-develop$|x-release$&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">批量执行（要用管道）</span></span><br><span class="line">xargs git branch -d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合起来</span></span><br><span class="line">git branch --merged | grep -i -v -E &quot;x-master$|x-develop$|x-release$&quot; | xargs git branch -d</span><br></pre></td></tr></table></figure><h2 id="删除远程跟踪分支"><a href="#删除远程跟踪分支" class="headerlink" title="删除远程跟踪分支"></a>删除远程跟踪分支</h2><p><code>git remote prune origin</code></p><h2 id="修改当前commit"><a href="#修改当前commit" class="headerlink" title="修改当前commit"></a>修改当前commit</h2><p><code>git add . &amp;&amp; git commit --amend --no-edit</code></p><p>该操作会修改当前最新commit并添加当前目录下所有修改了但未提交的文件。<br>如果最新commit已经push到远端，则需要再次强制推送到远端。</p><h2 id="查找某个commit被哪个branch和tag包含"><a href="#查找某个commit被哪个branch和tag包含" class="headerlink" title="查找某个commit被哪个branch和tag包含"></a>查找某个commit被哪个branch和tag包含</h2><p>查找被包含的branch：<code>git branch --contains commit_id --all</code><br>查找被包含的tag：<code>git tag --contains tag_name</code></p><h2 id="设置命令别名"><a href="#设置命令别名" class="headerlink" title="设置命令别名"></a>设置命令别名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.a add</span><br><span class="line">git config --global alias.c commit</span><br><span class="line">git config --global alias.o checkout</span><br></pre></td></tr></table></figure><p>也可以在config文件进行修改和查看，<br>在<code>~/.gitconfig</code>或项目的<code>.git/config</code>文件中，有以下信息，可以进行修改：</p><pre><code>[alias]a = addc = commito = checkout# ...</code></pre><p>还可以直接用别人写好的：<br><a href="https://github.com/GitAlias/gitalias" title="项目地址">项目地址</a><br>使用方法：</p><ol><li>首先将该开源项目中的<code>gitalias.txt</code>文件下载下来</li><li>然后在<code>.gitconfig</code>文件里面加入：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[include]</span><br><span class="line">path = gitalias.txt</span><br></pre></td></tr></table></figure><h2 id="获取两个commit之间更改的文件"><a href="#获取两个commit之间更改的文件" class="headerlink" title="获取两个commit之间更改的文件"></a>获取两个commit之间更改的文件</h2><p>可以方便在<code>shell</code>或者<code>bash</code>中执行自动化操作</p><p>以最新的更新为例：<code>git diff --name-only HEAD HEAD^</code><br>执行自动化操作：<code>for fp in `git diff --name-only HEAD HEAD^`; do echo $fp; done</code></p><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>删除虚悬镜像：<code>docker images --filter dangling=true</code><br>删除所有虚悬镜像：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images --filter dangling=true -q)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或</span></span><br><span class="line">docker image prune</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除24小时前的虚悬镜像，-a 标签还支持删除所有未使用的镜像</span></span><br><span class="line">docker image prune -f --filter until=24h</span><br></pre></td></tr></table></figure><p>列出latest镜像之前的所有镜像：<code>docker images aka-gm --filter before=aka-gm:latest</code><br>从以上输出中取出镜像的REPOSITORY与TAG：<code>docker images aka-gm --filter before=aka-gm:latest --format &quot;&#123;&#123;.Repository&#125;&#125;:&#123;&#123;.Tag&#125;&#125;&quot;</code><br>排除TAG为<none>的镜像并删除：<code>docker images aka-gm -f before=aka-gm:latest | grep aka-gm | grep -v &quot;&lt;none&gt;&quot; | awk &#39;&#123;printf &quot;%s:%s\n&quot;,$1,$2&#125;&#39; | xargs -r docker rmi</code><br>删除TAG为<none>的镜像：<code>docker images aka-gm -f before=aka-gm:latest | grep &quot;&lt;none&gt;&quot; | awk &#39;&#123;printf &quot;%s:%s\n&quot;,$1,$2&#125;&#39; | xargs -r docker rmi</code></p><p>找出容器对应的日志滤镜：<code>docker inspect --format=&#39;&#123;&#123;.LogPath&#125;&#125;&#39; containername</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序员手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统基线检查</title>
      <link href="/2023/03/11/Linux%20%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%BA%BF%E6%A3%80%E6%9F%A5/"/>
      <url>/2023/03/11/Linux%20%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%BA%BF%E6%A3%80%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="1查询系统信息"><a href="#1查询系统信息" class="headerlink" title="1查询系统信息"></a><u><em>1查询系统信息</em></u></h3><h5 id="1-Linux-查看内核版本（大于2-6）（I级）"><a href="#1-Linux-查看内核版本（大于2-6）（I级）" class="headerlink" title="1. Linux 查看内核版本（大于2.6）（I级）"></a>1. Linux 查看内核版本（大于2.6）（I级）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"><span class="built_in">cat</span> /proc/version</span><br></pre></td></tr></table></figure><h5 id="2-Linux-查看系统版本"><a href="#2-Linux-查看系统版本" class="headerlink" title="2. Linux 查看系统版本"></a>2. Linux 查看系统版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br><span class="line"><span class="built_in">cat</span> /etc/issue</span><br></pre></td></tr></table></figure><h3 id="2身份鉴别"><a href="#2身份鉴别" class="headerlink" title="2身份鉴别"></a><em><u>2身份鉴别</u></em></h3><h5 id="1-系统是否存在重复的-UID（II级）"><a href="#1-系统是否存在重复的-UID（II级）" class="headerlink" title="1. 系统是否存在重复的 UID（II级）"></a>1. 系统是否存在重复的 UID（II级）</h5><p><code>UID(UserID)</code>——用户标识号，它与用户名唯一对应，<code>Linux</code> 以 <code>UID</code> 作为用户的唯一标识，<code>Linux</code>中超级用户 <code>root</code> 的 <code>UID</code> 为 <code>0</code>，可以直接使用 <code>id</code> 命令查看当前用户的 <code>UID</code>。可以查看 <code>passwd</code> 文件以查看所有用户的 <code>UID</code> 等基本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="3密码审查"><a href="#3密码审查" class="headerlink" title="3密码审查"></a><u><em>3密码审查</em></u></h3><h5 id="密码的生命周期最大为-90-天（III级）"><a href="#密码的生命周期最大为-90-天（III级）" class="headerlink" title="密码的生命周期最大为 90 天（III级）"></a>密码的生命周期最大为 90 天（III级）</h5><h5 id="密码可以被立即修改（III级）"><a href="#密码可以被立即修改（III级）" class="headerlink" title="密码可以被立即修改（III级）"></a>密码可以被立即修改（III级）</h5><h5 id="密码的最小长度为-8-位（III级）"><a href="#密码的最小长度为-8-位（III级）" class="headerlink" title="密码的最小长度为 8 位（III级）"></a>密码的最小长度为 8 位（III级）</h5><h5 id="密码到期的提醒，一般建议-7-天（III级）"><a href="#密码到期的提醒，一般建议-7-天（III级）" class="headerlink" title="密码到期的提醒，一般建议 7 天（III级）"></a>密码到期的提醒，一般建议 7 天（III级）</h5><p>查看并修改 <code>login.defs</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/login.defs</span><br></pre></td></tr></table></figure><p>检查并修改如下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">PASS_MAX_DAYS</span> <span class="number">90</span> <span class="comment">#一个密码可使用的最大天数</span></span><br><span class="line"><span class="string">PASS_MIN_DAYS</span> <span class="number">0</span> <span class="comment">#两次密码修改之间最小的间隔天数</span></span><br><span class="line"><span class="string">PASS_MIN_LEN</span> <span class="number">8</span> <span class="comment">#密码最小长度</span></span><br><span class="line"><span class="string">PASS_WARN_AGE</span> <span class="number">7</span> <span class="comment">#密码过期前给出警告的天数</span></span><br></pre></td></tr></table></figure><h3 id="4访问控制"><a href="#4访问控制" class="headerlink" title="4访问控制"></a><u><em>4访问控制</em></u></h3><h5 id="1-系统已设定了正确的-umask-值-022-III级）"><a href="#1-系统已设定了正确的-umask-值-022-III级）" class="headerlink" title="1. 系统已设定了正确的 umask 值 022 (III级）"></a>1. 系统已设定了正确的 umask 值 022 (III级）</h5><p><code>umask</code> 用于指定目前用户在建立文件或目录时的权限默认值，<code>umask</code> 设置的是权限值的“补码”，而我们常用的<code>chmod</code>设置的是文件权限码,默认情况下的 <code>umask</code> 值是<code>022</code>(可以用<code>umask</code>命令查看），此时你建立的文件默认权限是<code>644(6-0,6-2,6-2)</code>，建立的目录的默认权限是<code>755(7-0,7-2,7-2)</code>。</p><h5 id="2-锁定系统中不必要的用户（IV级）"><a href="#2-锁定系统中不必要的用户（IV级）" class="headerlink" title="2. 锁定系统中不必要的用户（IV级）"></a>2. 锁定系统中不必要的用户（IV级）</h5><p>使用 <code>passwd</code> 命令锁定、解锁和检查 Linux 中用户账户的状</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd -l username <span class="comment">#锁定用户账户</span></span><br><span class="line">passwd -u username <span class="comment">#解锁用户账户</span></span><br><span class="line">passwd -S username <span class="comment">#检查用户账户锁定状态</span></span><br></pre></td></tr></table></figure><p>使用 <code>usermod</code> <code>命令锁定</code>、解锁和检查 <code>Linux</code> 中用户账户的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">usermod --lock username <span class="comment">#锁定用户账户</span></span><br><span class="line">usermod -L username <span class="comment">#锁定用户账户</span></span><br><span class="line">usermod -unlock username <span class="comment">#解锁用户账户</span></span><br><span class="line">usermod -U username <span class="comment">#解锁用户账户</span></span><br></pre></td></tr></table></figure><p>可以通过查看 <strong>/etc/shadow</strong> 文件来检查用户锁定状态，如果用户账户被锁定，密码前面将添加感叹号。</p><h5 id="3-删除不必要的系统用户组（IV级）"><a href="#3-删除不必要的系统用户组（IV级）" class="headerlink" title="3. 删除不必要的系统用户组（IV级）"></a>3. 删除不必要的系统用户组（IV级）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel groupname</span><br></pre></td></tr></table></figure><p>这个命令将会从 <code>/etc/group</code> 和 <code>/etc/gshadow</code> 文件中移除用户组条目，且成功时不会打印任何输出。可以通过使用下面的命令来验证用户组是否被移除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getent group</span><br></pre></td></tr></table></figure><h5 id="4-禁止-root-用户远程登录（II级）"><a href="#4-禁止-root-用户远程登录（II级）" class="headerlink" title="4. 禁止 root 用户远程登录（II级）"></a>4. 禁止 root 用户远程登录（II级）</h5><p>通过修改 <code>/etc/ssh/sshd_congig</code> 文件，将其中的 <code>PermitRootLogin</code> 改成 <code>no</code>，然后重新启动 <code>ssh</code> 服务就可以了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><h5 id="5-系统重要文件访问权限是否为-644-或-600（II级）"><a href="#5-系统重要文件访问权限是否为-644-或-600（II级）" class="headerlink" title="5. 系统重要文件访问权限是否为 644 或 600（II级）"></a>5. 系统重要文件访问权限是否为 644 或 600（II级）</h5><h3 id="5安全审计"><a href="#5安全审计" class="headerlink" title="5安全审计"></a><em><u>5安全审计</u></em></h3><h5 id="1-系统是否启用安全审计（III级"><a href="#1-系统是否启用安全审计（III级" class="headerlink" title="1. 系统是否启用安全审计（III级)"></a>1. 系统是否启用安全审计（III级)</h5><p><code>Linux audit</code> 子系统是一个用于收集记录系统、内核、用户进程发生的行为事件的一种安全审计系统，该系统可以可靠的收集有关的任何与安全相关（或与安全无关）事件的信息，它可以帮助跟踪系统上执行过的一些操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auditctl -s <span class="comment">#查看系统是否启用 audit，enabled 值为 1 表示开启</span></span><br><span class="line">systemctl start auditd <span class="comment">#启动 auditd 服务</span></span><br></pre></td></tr></table></figure><p>开启了 <code>auditd</code> 服务后，所有的审计日志会被记录在 <code>/var/log/audit/audit.log</code>文件中，该文件记录格式是每行以 <code>type</code> 开头。</p><h5 id="2-是否启用审计策略（III级）"><a href="#2-是否启用审计策略（III级）" class="headerlink" title="2. 是否启用审计策略（III级）"></a>2. 是否启用审计策略（III级）</h5><p>一般针对系统的目录、退出、创建/删除目录、修改密码、添加组、计划任务等。<code>audit</code> 可以自定义对指定的文件或命令进行审计（如监视 <code>rm</code> 命令被执行、<code>/etc/passwd</code> 文件内容被改变），只要配置号对应规则即可，配置规则可以通过命令行（临时生效）或编辑配置文件（永久生效）两种方式实现。<code>auditd</code> 的配置文件为 <code>/etc/audit/audit</code> 下的 <code>auditd.conf</code> 和 <code>audit.rules</code>, <code>auditd.conf</code> 主要定义了 <code>auditd</code> 服务日志的性能等相关配置，<code>audit.rules</code> 才是定义规则的文件。</p><h3 id="6剩余价值保护"><a href="#6剩余价值保护" class="headerlink" title="6剩余价值保护"></a><u><em>6剩余价值保护</em></u></h3><h5 id="1-系统的命令行数是否保存为-30-条（IV级）"><a href="#1-系统的命令行数是否保存为-30-条（IV级）" class="headerlink" title="1. 系统的命令行数是否保存为 30 条（IV级）"></a>1. 系统的命令行数是否保存为 30 条（IV级）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$HISTSIZE</span> <span class="comment">#查看历史命令保存条数</span></span><br></pre></td></tr></table></figure><p>修改历史命令保存条数，修改 <code>/etc/profile</code> 中的 <code>HISTSIZE</code> 变量即可。</p><h3 id="7不必要服务启动项"><a href="#7不必要服务启动项" class="headerlink" title="7不必要服务启动项"></a><u><em>7不必要服务启动项</em></u></h3><h5 id="1-chargen-chargen-udp、daytime-daytime-udp、echo-echo-udp、time-time-udp-等服务已被禁用（III级）"><a href="#1-chargen-chargen-udp、daytime-daytime-udp、echo-echo-udp、time-time-udp-等服务已被禁用（III级）" class="headerlink" title="1. chargen/chargen-udp、daytime/daytime-udp、echo/echo-udp、time/time-udp 等服务已被禁用（III级）"></a>1. chargen/chargen-udp、daytime/daytime-udp、echo/echo-udp、time/time-udp 等服务已被禁用（III级）</h5><p><code>chargen</code> 服务：最初设计用于测试网络状态，监听<code>19</code>端口（包括<code>TCP</code>和<code>UDP</code>），其中<code>UDP</code>协议存在“<code>Chargen UDP服务远程拒绝服务攻击漏洞</code>”。<code>chargen</code>一般不会使用，所以直接将该服务关闭即可。</p><p><code>daytime</code> 服务：使用<code>TCP</code> 协议的 <code>Daytime</code> 守护进程，该协议为客户机实现从远程服务器获取日期和时间的功能。<br><code>daytime-udp</code> 服务：使用 <code>UDP</code> 协议的 <code>Daytime</code> 守护进程。</p><p><code>echo</code> 服务：使用 <code>TCP</code> 协议的服务器回显服务守护进程；<br><code>echo-udp 服</code>务：使用 <code>UDP</code> 协议的服务器回显服务守护进程。</p><p><code>time</code> 服务：采用 <code>TCP</code> 协议的从远程主机获取时间和日期的守护进程；<br><code>time-udp</code> 服务： 是一种基于 <code>UDP</code> 协议进行通信的服务，它用于向远程主机发送时间戳信息。当客户端向 <code>time-udp</code> 服务请求时间戳时，服务器会返回当前时间的二进制表示形式，以方便对时间的比较和计算。由于 <code>time-udp</code> 服务的实现相对简单，因此在网络诊断和调试中经常用于测试网络传输延迟和响应时间。</p><h5 id="2-cpus-lpd-服务已被禁用（III级）"><a href="#2-cpus-lpd-服务已被禁用（III级）" class="headerlink" title="2. cpus-lpd 服务已被禁用（III级）"></a>2. cpus-lpd 服务已被禁用（III级）</h5><p><code>cups</code> 服务：通用 <code>UNIX</code> 打印守护进程，为<code>Linux</code>提供第三代打印功能；<br><code>cups-lpd</code> 服务：<code>cups</code> 行打印守护进程。</p><h5 id="3-finger-服务已被禁用（III级）"><a href="#3-finger-服务已被禁用（III级）" class="headerlink" title="3. finger 服务已被禁用（III级）"></a>3. finger 服务已被禁用（III级）</h5><p><code>finger</code> 服务：<code>finger</code> 服务器提供一项查询本地或远程主机用户公开信息的服务。</p><h5 id="4-rexec-服务已被禁用（III级）"><a href="#4-rexec-服务已被禁用（III级）" class="headerlink" title="4. rexec 服务已被禁用（III级）"></a>4. rexec 服务已被禁用（III级）</h5><p><code>rexec</code> 服务：允许网络用户远程执行命令。由于<code>rexecd</code>并没有提供好的认证方式，认证体系相当简单而易受攻击，因此它可能被攻击者用来扫描第三方的主机，攻击者可以通过该服务远程暴力穷举猜测用户名、口令，也可以监听其它授权用户的通信过程以获取口令明文，可以使用<code>nmap</code> 等工具进行扫描检测。</p><h5 id="5-rlogin-服务已被禁用（III级）"><a href="#5-rlogin-服务已被禁用（III级）" class="headerlink" title="5. rlogin 服务已被禁用（III级）"></a>5. rlogin 服务已被禁用（III级）</h5><p><code>rlogin</code> 服务：远程登陆服务，通过 <code>rlogin</code> 命令，可以登录到远程系统。<code>rlogin</code>服务的认证体系相当简单而易受攻击，攻击者可以通过该服务远程暴力穷举猜测用户名、口令，也可以监听其它授权用户的通信过程以获取口令明文。</p><h5 id="6-rsh-服务已被禁用（III级）"><a href="#6-rsh-服务已被禁用（III级）" class="headerlink" title="6. rsh 服务已被禁用（III级）"></a>6. rsh 服务已被禁用（III级）</h5><p><code>rsh</code> 服务：远程 <code>shell</code> 服务，通过 <code>rsh</code> 命令，可以在指定的远程主机上启动一个 shell 并执行用户在 <code>rsh</code> 命令行中指定的命令，如果用户没有给出要执行的命令，<code>rsh</code>就用 <code>rlogin</code> 命令使用户登录到远程机上。</p><h5 id="7-rsync-服务已被禁用（II级）"><a href="#7-rsync-服务已被禁用（II级）" class="headerlink" title="7. rsync 服务已被禁用（II级）"></a>7. rsync 服务已被禁用（II级）</h5><p><code>rsync</code> 服务：远程数据同步服务，通过 <code>rsync</code> 命令，可以通过<code>LAN/WAN</code>快速同步多台主机间的文件。<code>rsync</code>使用所谓的<code>“rsync算法”</code>来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。</p><h5 id="8-ntalk-服务已被禁用（III级）"><a href="#8-ntalk-服务已被禁用（III级）" class="headerlink" title="8. ntalk 服务已被禁用（III级）"></a>8. ntalk 服务已被禁用（III级）</h5><p><code>ntalk</code> 服务：网络交谈<code>（ntalk）</code>，远程对话服务和客户。</p><h5 id="9-talk-服务已被禁用（III级）"><a href="#9-talk-服务已被禁用（III级）" class="headerlink" title="9. talk 服务已被禁用（III级）"></a>9. talk 服务已被禁用（III级）</h5><p><code>talk</code> 服务：远程对话服务和客户。</p><h5 id="10-wu-ftpd-服务已被禁用（II级）"><a href="#10-wu-ftpd-服务已被禁用（II级）" class="headerlink" title="10. wu-ftpd 服务已被禁用（II级）"></a>10. wu-ftpd 服务已被禁用（II级）</h5><p><code>Wu-ftpd</code> 服务：<code>Internet</code>上最流行的<code>FTP</code>守护程序。<code>Wu-ftpd</code>功能十分强大，可以构建多种类型<code>FTP</code>服务器。<code>Wu-ftpd</code>菜单可以帮助用户轻松地实现对FTP服务器的配置：支持构造安全方式的匿名<code>FTP</code>的访问，可以控制同时访问的用户的数量，限制可以允许访问的<code>IP</code>网段，并可以在一台主机上设置多个虚拟目录。</p><h5 id="11-tftp-服务已被禁用（III级）"><a href="#11-tftp-服务已被禁用（III级）" class="headerlink" title="11. tftp 服务已被禁用（III级）"></a>11. tftp 服务已被禁用（III级）</h5><p><code>tftp</code> 服务：<code>TCP/IP</code>协议族中的一个用来在客户机与服务器之间进行简单文件传输的协议，提供不复杂、开销不大的文件传输服务。基于 <code>UDP</code> 协议实现，端口号为<code>69</code>。</p><h5 id="12-ipop2-服务已被禁用（III级）"><a href="#12-ipop2-服务已被禁用（III级）" class="headerlink" title="12. ipop2 服务已被禁用（III级）"></a>12. ipop2 服务已被禁用（III级）</h5><p><code>ipop2</code> 服务：<code>POP2</code> 邮件服务器。</p><h5 id="13-ipop3-服务已被禁用（III级）"><a href="#13-ipop3-服务已被禁用（III级）" class="headerlink" title="13. ipop3 服务已被禁用（III级）"></a>13. ipop3 服务已被禁用（III级）</h5><p><code>ipop3</code> 服务：<code>POP3</code> 邮件服务器。</p><h5 id="14-telnet-服务已被禁用（III级）"><a href="#14-telnet-服务已被禁用（III级）" class="headerlink" title="14. telnet 服务已被禁用（III级）"></a>14. telnet 服务已被禁用（III级）</h5><p><code>telnet</code> 服务：<code>Internet</code> 远程登录服务。</p><h5 id="15-xinetd-服务已被禁用（IV级）"><a href="#15-xinetd-服务已被禁用（IV级）" class="headerlink" title="15. xinetd 服务已被禁用（IV级）"></a>15. xinetd 服务已被禁用（IV级）</h5><p><code>xinted</code> 服务：新一代的网络守护进程服务程序，又叫超级<code>Internet</code>服务器，常用来管理多种轻量级<code>Internet</code>服务。</p><h3 id="8其它配置检查"><a href="#8其它配置检查" class="headerlink" title="8其它配置检查"></a><em><u>8其它配置检查</u></em></h3><h5 id="1-系统已经加固了-TCP-IP-协议栈（IV级）"><a href="#1-系统已经加固了-TCP-IP-协议栈（IV级）" class="headerlink" title="1. 系统已经加固了 TCP/IP 协议栈（IV级）"></a>1. 系统已经加固了 TCP/IP 协议栈（IV级）</h5><p>检查<code>/etc/sysctl.conf</code>是否存在以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_max_syn_backlog=4096</span><br><span class="line">net.ipv4.conf.all.rp_filter=1</span><br><span class="line">net.ipv4.conf.accept_source_route=0</span><br><span class="line">net.ipv4.conf.all.accept_redirects=0</span><br><span class="line">net.ipv4.conf.secure_redirects=0</span><br><span class="line">net.ipv4.conf.default.accept_source_route=0</span><br><span class="line">net.ipv4.conf.default.accept_redirects=0</span><br><span class="line">net.ipv4.conf.default.secure_redirects=0</span><br></pre></td></tr></table></figure><h5 id="2-系统禁用-X-Windows-系统（III级）"><a href="#2-系统禁用-X-Windows-系统（III级）" class="headerlink" title="2. 系统禁用 X-Windows 系统（III级）"></a><strong>2. 系统禁用 X-Windows 系统（III级）</strong></h5><h5 id="3-移动介质使用-nosuid-挂载（IV级）"><a href="#3-移动介质使用-nosuid-挂载（IV级）" class="headerlink" title="3. 移动介质使用 nosuid 挂载（IV级）"></a>3. 移动介质使用 nosuid 挂载（IV级）</h5><p>检查与 <code>/etc/fstab</code> 文件夹、<code>/dev/floppy</code> 和 <code>/dev/cdrom</code> 相关的条目</p><h5 id="4-tmp-和-var-tmp-目录具有粘滞位-II级"><a href="#4-tmp-和-var-tmp-目录具有粘滞位-II级" class="headerlink" title="4. /tmp 和 /var/tmp 目录具有粘滞位(II级)"></a>4. /tmp 和 /var/tmp 目录具有粘滞位(II级)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al/ | grep tmp</span><br></pre></td></tr></table></figure><h5 id="5-root-PATH-环境变量，不包含当前目录（II级）"><a href="#5-root-PATH-环境变量，不包含当前目录（II级）" class="headerlink" title="5. root PATH 环境变量，不包含当前目录（II级）"></a>5. root PATH 环境变量，不包含当前目录（II级）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 安全运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基线检查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 如何设置访问权限</title>
      <link href="/2023/03/07/Nginx%20%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/"/>
      <url>/2023/03/07/Nginx%20%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Nginx</code>是一款高性能、可靠的<code>Web</code>服务器软件，同时也是一款功能丰富的反向代理服务器。在使用<code>Nginx</code>搭建<code>Web</code>服务时，有时需要对访问权限进行设置，以保障服务器的安全性。本文将介绍如何使用<code>Nginx</code>设置访问权限。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="使用基本身份验证"><a href="#使用基本身份验证" class="headerlink" title="使用基本身份验证"></a>使用基本身份验证</h3><p>基本身份验证<code>（Basic Authentication</code>）是一种简单但有效的身份验证方式，通过在<code>HTTP</code>请求头中添加用户名和密码信息，来验证用户身份。<code>Nginx</code>提供了基本身份验证的功能，可以在<code>nginx.conf</code>文件中进行配置。具体步骤如下：</p><h4 id="安装Apache工具包"><a href="#安装Apache工具包" class="headerlink" title="安装Apache工具包"></a>安装<code>Apache</code>工具包</h4><p>基本身份验证需要使用<code>htpasswd</code>工具，该工具可以生成密码文件，记录用户名和密码的加密信息。在<code>Ubuntu</code>系统中，可以使用以下命令安装<code>Apache</code>工具包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install apache2-utils</span><br></pre></td></tr></table></figure><h4 id="生成密码文件"><a href="#生成密码文件" class="headerlink" title="生成密码文件"></a>生成密码文件</h4><p>使用以下命令生成密码文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> htpasswd -c /etc/nginx/.htpasswd username</span><br></pre></td></tr></table></figure><h4 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置<code>Nginx</code></h4><p>在<code>nginx.conf</code>文件中添加以下配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">auth_basic</span> <span class="string">&quot;Restricted&quot;</span>; <span class="comment"># 自定义验证信息</span></span><br><span class="line">    <span class="attribute">auth_basic_user_file</span> /etc/nginx/.htpasswd; <span class="comment"># 密码文件路径</span></span><br><span class="line">    <span class="comment"># other configuration</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>auth_basic</code>指定验证信息，<code>auth_basic_user_file</code>指定密码文件路径。保存配置文件后，使用以下命令重载<code>Nginx</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="使用IP地址限制"><a href="#使用IP地址限制" class="headerlink" title="使用IP地址限制"></a>使用IP地址限制</h3><p><code>IP</code>地址限制是一种限制访问来源的方式，只有在白名单中的<code>IP</code>地址才能够访问服务器。<code>Nginx</code>也提供了<code>IP</code>地址限制的功能，可以在<code>nginx.conf</code>文件中进行配置。具体步骤如下：</p><h4 id="编辑nginx-conf文件"><a href="#编辑nginx-conf文件" class="headerlink" title="编辑nginx.conf文件"></a>编辑nginx.conf文件</h4><p>在nginx.conf文件中添加以下配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">allow</span> <span class="number">192.168.1.0</span>/<span class="number">24</span>; <span class="comment"># 允许访问的IP地址范围</span></span><br><span class="line">    <span class="attribute">deny</span> all; <span class="comment"># 拒绝其他IP地址的访问</span></span><br><span class="line">    <span class="comment"># other configuration</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>allow</code>指定允许访问的IP地址范围，<code>deny all</code>指定拒绝其他<code>IP</code>地址的访问。保存配置文件后，使用以下命令重载<code>Nginx</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="使用SSL-TLS加密通信"><a href="#使用SSL-TLS加密通信" class="headerlink" title="使用SSL/TLS加密通信"></a>使用SSL/TLS加密通信</h3><p><code>SSL/TLS</code>是一种常用的加密通信方式，可以保障客户端与服务器之间的通信安全。<code>Nginx</code>可以通过配置<code>SSL/TLS</code>证书来启用加密通信。具体步骤如下：</p><h4 id="获取SSL-TLS证书"><a href="#获取SSL-TLS证书" class="headerlink" title="获取SSL/TLS证书"></a>获取SSL/TLS证书</h4><p>可以从证书颁发机构<code>（CA）</code>或自己创建一个自签名证书。在<code>Ubuntu</code>系统中，可以使用以下命令生成自签名证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/cert.key -out /etc/nginx/cert.crt</span><br></pre></td></tr></table></figure><p>该命令将生成一个自签名证书，有效期为<code>365</code>天，私钥存储在<code>/etc/nginx/cert.key</code>文件中，证书存储在<code>/etc/nginx/cert.crt</code>文件中。可以根据实际情况修改参数。</p><h4 id="配置Nginx-1"><a href="#配置Nginx-1" class="headerlink" title="配置Nginx"></a>配置Nginx</h4><p>在<code>nginx.conf</code>文件中添加以下配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> example.com; <span class="comment"># 服务器域名</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/nginx/cert.crt; <span class="comment"># 证书路径</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/nginx/cert.key; <span class="comment"># 私钥路径</span></span><br><span class="line">    <span class="comment"># other configuration</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>listen</code>指定监听端口和使用<code>SSL/TLS</code>加密，<code>server_name</code>指定服务器域名，<code>ssl_certificate</code>和<code>ssl_certificate_key</code>指定证书和私钥的路径。保存配置文件后，使用以下命令重载<code>Nginx</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文介绍了使用<code>Nginx</code>设置访问权限的三种方式：基本身份验证、<code>IP</code>地址限制和<code>SSL/TLS</code>加密通信。这些方式都可以有效地保障服务器的安全性，可以根据实际需求选择适合的方式。在配置<code>Nginx</code>时，需要仔细检查配置文件，确保配置正确无误，以避免不必要的安全风险。</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-策略路由静态路由实例与NQA联动</title>
      <link href="/2023/03/03/%E5%8D%8E%E4%B8%BA-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E4%BE%8B/"/>
      <url>/2023/03/03/%E5%8D%8E%E4%B8%BA-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="NQA概念"><a href="#NQA概念" class="headerlink" title="NQA概念"></a>NQA概念</h2><p><code>NAQ（Network Quality Analysis,网络质量分析）</code>是系统提供的一个特性，位于链路层之上，覆盖网络层、传输层和应用层，独立于底层硬件，可实时监视网络性能状况，在网络发生故障时进行故障诊断和定位。</p><h2 id="NQA联动目的"><a href="#NQA联动目的" class="headerlink" title="NQA联动目的"></a>NQA联动目的</h2><p>静态路由/策略路由本身并没有检测机制，如果非本机直连链路发生了故障，静态路由/策略路由不会自动改变（不会从<code>IP</code>路由表中自动删除），需要管理员介入，这就无法保证及时进行链路切换，可能造成较长时间的业务中断。</p><p>静态路由/策略路由与<code>NQA</code>联动可以解决非本机直连链路发生故障后可以及时进行链路切换。</p><h2 id="组网要求"><a href="#组网要求" class="headerlink" title="组网要求"></a>组网要求</h2><ul><li><p>如下图所示，<code>LSW1</code>作为用户的网关，<code>PC1</code>、<code>PC2</code>和<code>PC3</code>分别属于<code>vlan10</code>、<code>vlan20</code>和<code>vlan40</code>，通过<code>LSW1</code>介入<code>AR1</code>路由器。</p></li><li><p>实现各网段<code>PC</code>间的互访，并且制定<code>192.168.10.0/24</code>网段走ISP1链路上网，<code>192.168.20.0/24</code>网段走<code>ISP2</code>链路上网，默认路由是<code>ISP</code>链路，<code>192.168.40.0/24</code>走默认路由。</p></li><li><p>当一条链路发生故障时，不同网段地址的报文都走无故障的链路，避免长时间的业务中断。当故障解决后，各网段按原来指定的链路上网。</p></li></ul><h2 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h2><p><img src="https://s1.ax1x.com/2023/03/03/ppkgbFA.png" alt=""></p><h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ul><li><p>默认路由是<code>ISP2</code></p></li><li><p><code>192.168.10.0/24</code>走上面路径</p></li><li><code>192.168.20.0/24</code>走下面路径</li><li><code>192.168.40.0/24</code>走默认路径</li><li><code>192.168.10/20/40.0/24</code>内部可以互访</li><li>当一条链路发生故障时，不同网段地址的报文都走无故障的链路，避免长时间的业务中断。当故障解决后，各网段按原来指定的链路上网。</li></ul><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="基本网络配置"><a href="#基本网络配置" class="headerlink" title="基本网络配置"></a>基本网络配置</h3><p><code>参照拓扑图规划，保障网络互通</code></p><h3 id="配置NQA测试例"><a href="#配置NQA测试例" class="headerlink" title="配置NQA测试例"></a>配置NQA测试例</h3>]]></content>
      
      
      <categories>
          
          <category> 网络技术 </category>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态路由 </tag>
            
            <tag> 策略路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx高可用集群（keepalived+双机热备）</title>
      <link href="/2023/03/03/Nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%EF%BC%88keepalived+%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%EF%BC%89/"/>
      <url>/2023/03/03/Nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%EF%BC%88keepalived+%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 集群 </tag>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux While循环常用脚本案例及使用事项</title>
      <link href="/2023/02/21/Linux%20while%E5%BE%AA%E7%8E%AF%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B%E5%8F%8A%E4%BD%BF%E7%94%A8%E4%BA%8B%E9%A1%B9/"/>
      <url>/2023/02/21/Linux%20while%E5%BE%AA%E7%8E%AF%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B%E5%8F%8A%E4%BD%BF%E7%94%A8%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在<code>Linux</code>中，<code>while</code>循环是一种常见的循环结构，它可以通过测试条件的真假来重复执行代码块。</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="持续监控应用状态"><a href="#持续监控应用状态" class="headerlink" title="持续监控应用状态"></a>持续监控应用状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 持续监控应用状态，直到应用运行正常</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> systemctl status myapp | grep -q <span class="string">&quot;active (running)&quot;</span>; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">sleep</span> 10</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="持续检查服务器负载"><a href="#持续检查服务器负载" class="headerlink" title="持续检查服务器负载"></a>持续检查服务器负载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 持续检查服务器负载，如果负载过高则发送警报邮件</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    load=$(<span class="built_in">uptime</span> | awk <span class="string">&#x27;&#123;print $10&#125;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> [ $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$load</span> &gt; 1.0&quot;</span> | bc -l) -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Warning: server load is high: <span class="variable">$load</span>&quot;</span> | mail -s <span class="string">&quot;Server load warning&quot;</span> admin@example.com</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">sleep</span> 300</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="持续检查应用日志"><a href="#持续检查应用日志" class="headerlink" title="持续检查应用日志"></a>持续检查应用日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 持续检查应用日志，如果有错误日志则发送警报邮件</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> grep -q <span class="string">&quot;Error&quot;</span> /var/log/myapp.log; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Warning: Error log found in myapp.log&quot;</span> | mail -s <span class="string">&quot;Application error&quot;</span> admin@example.com</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">sleep</span> 600</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="持续同步文件夹"><a href="#持续同步文件夹" class="headerlink" title="持续同步文件夹"></a>持续同步文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 持续将本地文件夹同步到远程服务器上</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    rsync -avz /local/folder/ user@remote-server:/remote/folder/</span><br><span class="line">    <span class="built_in">sleep</span> 3600</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="持续备份数据库"><a href="#持续备份数据库" class="headerlink" title="持续备份数据库"></a>持续备份数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 持续备份数据库，每天备份一次</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    now=$(<span class="built_in">date</span> +<span class="string">&quot;%Y-%m-%d_%H-%M-%S&quot;</span>)</span><br><span class="line">    mysqldump -u root -p password mydb &gt; <span class="string">&quot;/backup/mydb_<span class="variable">$now</span>.sql&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 86400</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="从文件中读取行，直到文件末尾"><a href="#从文件中读取行，直到文件末尾" class="headerlink" title="从文件中读取行，直到文件末尾"></a>从文件中读取行，直到文件末尾</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span> &lt; filename.txt</span><br></pre></td></tr></table></figure><h3 id="计数器循环"><a href="#计数器循环" class="headerlink" title="计数器循环"></a>计数器循环</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">counter=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$counter</span> -lt 10 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$counter</span></span><br><span class="line">    counter=$((counter+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="循环处理命令行参数"><a href="#循环处理命令行参数" class="headerlink" title="循环处理命令行参数"></a>循环处理命令行参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="监听文件变化"><a href="#监听文件变化" class="headerlink" title="监听文件变化"></a>监听文件变化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> inotifywait -e modify /path/to/file</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;File changed&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="使用事项"><a href="#使用事项" class="headerlink" title="使用事项"></a>使用事项</h2><ul><li><code>while</code>循环的语法为：<code>while test command；do；done</code>。</li><li><code>test command</code>是测试条件的命令，可以是任何<code>Linux</code>命令或逻辑表达式。</li><li><code>while</code>循环中的代码块必须用<code>do</code>和<code>done</code>包围。</li><li>在循环内部需要使用变量时，变量名前必须加上<code>$</code>符号。</li><li>当使用<code>while</code>循环读取文件时，要确保文件中没有特殊字符或格式问题。</li><li>在<code>while</code>循环中使用计数器时，要确保计数器的初始值和每次增量都是整数。</li><li>在循环内部使用<code>sleep</code>命令可以使循环暂停一段时间，避免资源占用过多。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> while </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux For循环常用脚本案例及使用事项</title>
      <link href="/2023/02/21/Linux%20for%E5%BE%AA%E7%8E%AF%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B%E5%8F%8A%E4%BD%BF%E7%94%A8%E4%BA%8B%E9%A1%B9/"/>
      <url>/2023/02/21/Linux%20for%E5%BE%AA%E7%8E%AF%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B%E5%8F%8A%E4%BD%BF%E7%94%A8%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Linux</code>的<code>for</code>循环是一种常用的控制结构，它可以在<code>Shell</code>脚本中重复执行一系列命令，以便对一组数据进行操作。以下是一些常用的<code>for</code>循环案例及使用事项</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="遍历文件列表：可以使用for循环来遍历一个目录中的所有文件"><a href="#遍历文件列表：可以使用for循环来遍历一个目录中的所有文件" class="headerlink" title="遍历文件列表：可以使用for循环来遍历一个目录中的所有文件"></a>遍历文件列表：可以使用for循环来遍历一个目录中的所有文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /path/to/directory/*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="遍历数字列表：for循环可以用于遍历数字列表"><a href="#遍历数字列表：for循环可以用于遍历数字列表" class="headerlink" title="遍历数字列表：for循环可以用于遍历数字列表"></a>遍历数字列表：for循环可以用于遍历数字列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="遍历命令输出：可以使用for循环来遍历一个命令的输出结果"><a href="#遍历命令输出：可以使用for循环来遍历一个命令的输出结果" class="headerlink" title="遍历命令输出：可以使用for循环来遍历一个命令的输出结果"></a>遍历命令输出：可以使用for循环来遍历一个命令的输出结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">cat</span> /etc/passwd | awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$user</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="多重循环：for循环可以嵌套使用，实现多重循环"><a href="#多重循环：for循环可以嵌套使用，实现多重循环" class="headerlink" title="多重循环：for循环可以嵌套使用，实现多重循环"></a>多重循环：for循环可以嵌套使用，实现多重循环</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="keyword">for</span> j <span class="keyword">in</span> &#123;1..3&#125;</span><br><span class="line">   <span class="keyword">do</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>,<span class="variable">$j</span>&quot;</span></span><br><span class="line">   <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="输出1到100之间所有质数的和"><a href="#输出1到100之间所有质数的和" class="headerlink" title="输出1到100之间所有质数的和"></a>输出1到100之间所有质数的和</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;2..100&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  is_prime=1</span><br><span class="line">  <span class="keyword">for</span> ((j=<span class="number">2</span>; j&lt;i; j++))</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $((i % j)) -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">      is_prime=0</span><br><span class="line">      <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$is_prime</span> -eq 1 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">sum</span>=$((sum + i))</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The sum of prime numbers from 1 to 100 is: <span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="打印给定目录下的文件数"><a href="#打印给定目录下的文件数" class="headerlink" title="打印给定目录下的文件数"></a>打印给定目录下的文件数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">dir</span>=<span class="string">&quot;/path/to/directory&quot;</span></span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="variable">$dir</span>/*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$file</span> ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    count=$((count + <span class="number">1</span>))</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The number of files in <span class="variable">$dir</span> is: <span class="variable">$count</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="批量修改文件名"><a href="#批量修改文件名" class="headerlink" title="批量修改文件名"></a>批量修改文件名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 将当前目录下所有的 .txt 文件名中的 &quot;abc&quot; 替换成 &quot;def&quot;</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.txt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">mv</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;file/abc/def&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="批量复制文件"><a href="#批量复制文件" class="headerlink" title="批量复制文件"></a>批量复制文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 复制当前目录下所有的 .txt 文件到 /tmp 目录下</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.txt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">cp</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span> /tmp/</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="批量压缩文件"><a href="#批量压缩文件" class="headerlink" title="批量压缩文件"></a>批量压缩文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 将当前目录下所有的 .txt 文件压缩成 .tar.gz 格式</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.txt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    tar czf <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>.tar.gz&quot;</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="批量解压文件"><a href="#批量解压文件" class="headerlink" title="批量解压文件"></a>批量解压文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 将当前目录下所有的 .tar.gz 文件解压到 /tmp 目录下</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.tar.gz</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    tar xzf <span class="string">&quot;<span class="variable">$file</span>&quot;</span> -C /tmp/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="批量部署应用"><a href="#批量部署应用" class="headerlink" title="批量部署应用"></a>批量部署应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 部署多个应用到不同的目录下</span></span><br><span class="line">apps=(app1 app2 app3 app4 app5)</span><br><span class="line"><span class="keyword">for</span> app <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;apps[@]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">mkdir</span> <span class="string">&quot;/var/www/<span class="variable">$&#123;app&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">cp</span> -r <span class="string">&quot;/tmp/<span class="variable">$&#123;app&#125;</span>&quot;</span>/* <span class="string">&quot;/var/www/<span class="variable">$&#123;app&#125;</span>/&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="使用事项"><a href="#使用事项" class="headerlink" title="使用事项"></a>使用事项</h2><ul><li><code>for</code>循环语法：<code>for variable in values</code>; <code>do commands</code>; <code>done</code></li><li>变量可以是任何字符序列，但通常是单个字符</li><li>值可以是一组文件、数字、命令输出等</li><li>多个值之间使用空格分隔</li><li>命令输出必须使用<code>$(command)</code>或反引号来括起来</li><li>在执行循环体时，必须使用<code>done</code>关键字来结束循环体</li></ul><p>总之，<code>for</code>循环是一个非常实用的Linux脚本结构，可以帮助您遍历文件、数字、命令输出等。使用它可以简化重复的任务，提高工作效率。</p>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> for </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux until循环常用脚本案例及使用事项</title>
      <link href="/2023/02/21/Linux%20until%E5%BE%AA%E7%8E%AF%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B%E5%8F%8A%E4%BD%BF%E7%94%A8%E4%BA%8B%E9%A1%B9/"/>
      <url>/2023/02/21/Linux%20until%E5%BE%AA%E7%8E%AF%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B%E5%8F%8A%E4%BD%BF%E7%94%A8%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在<code>Linux</code>中，<code>until</code>循环是一种常见的循环结构，用于重复执行代码块，直到某个条件为真为止。</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="等待网络服务启动"><a href="#等待网络服务启动" class="headerlink" title="等待网络服务启动"></a>等待网络服务启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待 MySQL 服务启动</span></span><br><span class="line"><span class="keyword">until</span> mysqladmin ping &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MySQL 服务已启动&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待 <code>MySQL</code> 服务启动，每隔 <code>1</code> 秒钟检查一次 <code>MySQL</code> 是否已经启动。当 <code>MySQL</code> 服务已经启动，脚本会输出一条消息。</p><h3 id="等待某个命令执行成功"><a href="#等待某个命令执行成功" class="headerlink" title="等待某个命令执行成功"></a>等待某个命令执行成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待命令执行成功</span></span><br><span class="line"><span class="keyword">until</span> some_command</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;命令执行成功&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待 <code>some_command</code> 命令执行成功，每隔 1 秒钟检查一次命令执行状态。当命令执行成功，脚本会输出一条消息。</p><h3 id="等待用户输入"><a href="#等待用户输入" class="headerlink" title="等待用户输入"></a>等待用户输入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待用户输入</span></span><br><span class="line"><span class="keyword">until</span> <span class="built_in">read</span> -p <span class="string">&quot;请输入您的姓名：&quot;</span> name &amp;&amp; [ -n <span class="string">&quot;<span class="variable">$name</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;姓名不能为空&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;您的姓名是：<span class="variable">$name</span>&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待用户输入姓名，如果输入为空，则提示用户重新输入。当输入不为空时，脚本会输出用户输入的姓名。</p><h3 id="等待文件被删除"><a href="#等待文件被删除" class="headerlink" title="等待文件被删除"></a>等待文件被删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待文件被删除</span></span><br><span class="line"><span class="keyword">until</span> [ ! -f /path/to/file ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件已删除&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待文件 <code>/path/to/file</code> 被删除，每隔 <code>1</code> 秒钟检查一次文件是否存在。当文件不存在时，脚本会输出一条消息。</p><h3 id="等待某个目录存在"><a href="#等待某个目录存在" class="headerlink" title="等待某个目录存在"></a>等待某个目录存在</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待目录存在</span></span><br><span class="line"><span class="keyword">until</span> [ -d /path/to/dir ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;目录已存在&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待目录 <code>/path/to/dir</code> 存在，每隔 1 秒钟检查一次目录是否存在。当目录存在时，脚本会输出一条消息。</p><h3 id="等待用户按下某个键"><a href="#等待用户按下某个键" class="headerlink" title="等待用户按下某个键"></a>等待用户按下某个键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待用户按下某个键</span></span><br><span class="line"><span class="keyword">until</span> <span class="built_in">read</span> -n1 -p <span class="string">&quot;按下任意键继续...&quot;</span> key &amp;&amp; [ <span class="string">&quot;<span class="variable">$key</span>&quot;</span> != <span class="string">&quot;&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;无效的键值：<span class="variable">$key</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;您按下了键：<span class="variable">$key</span>&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待用户按下任意键，如果用户按下了无效的键，则提示用户重新输入。当用户按下有效的键时，脚本会输出用户按下的键值。</p><h3 id="等待某个文件夹中有文件"><a href="#等待某个文件夹中有文件" class="headerlink" title="等待某个文件夹中有文件"></a>等待某个文件夹中有文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待文件夹中有文件</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="string">&quot;<span class="subst">$(ls -A /path/to/folder)</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件夹中有文件&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待目录 <code>/path/to/folder</code> 中有文件，每隔 <code>1</code> 秒钟检查一次目录中是否有文件。当目录中有文件时，脚本会输出一条消息。</p><h3 id="等待某个进程退出"><a href="#等待某个进程退出" class="headerlink" title="等待某个进程退出"></a>等待某个进程退出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 等待进程退出</span><br><span class="line">until ! pgrep -x &quot;some_process&quot; &gt; /dev/null</span><br><span class="line">do</span><br><span class="line">    sleep 1</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;进程已退出&quot;</span><br></pre></td></tr></table></figure><p>这个脚本等待进程 <code>some_process</code> 退出，每隔 <code>1</code> 秒钟检查一次进程是否存在。当进程退出后，脚本会输出一条消息。</p><h3 id="等待某个端口开放"><a href="#等待某个端口开放" class="headerlink" title="等待某个端口开放"></a>等待某个端口开放</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待端口开放</span></span><br><span class="line"><span class="keyword">until</span> nc -z localhost 8080</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;端口已开放&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待本地的 <code>8080</code> 端口开放，每隔 <code>1</code> 秒钟检查一次端口是否开放。当端口开放后，脚本会输出一条消息。</p><h3 id="等待某个服务启动"><a href="#等待某个服务启动" class="headerlink" title="等待某个服务启动"></a>等待某个服务启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 等待服务启动</span></span><br><span class="line"><span class="keyword">until</span> systemctl status some_service | grep <span class="string">&quot;Active: active (running)&quot;</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务已启动&quot;</span></span><br></pre></td></tr></table></figure><p>这个脚本等待服务 <code>some_service</code> 启动，每隔 1 秒钟检查一次服务的状态。当服务启动后，脚本会输出一条消息。</p><h2 id="使用事项"><a href="#使用事项" class="headerlink" title="使用事项"></a>使用事项</h2><ul><li><code>until</code> 循环与 <code>while</code> 循环类似，不同之处在于 <code>until</code> 循环会一直循环，直到条件为真才会停止，而 <code>while</code> 循环会一直循环，直到条件为假才会停止。</li><li><code>until</code> 循环的语法格式为：<code>until condition; do commands; done</code>，其中 <code>condition</code> 表示循环条件，<code>commands</code> 表示需要执行的命令。</li><li>在 <code>until</code> 循环中，可以使用 <code>sleep</code> 命令来延迟循环执行的时间，避免过度消耗系统资源。</li><li>在循环条件中使用 <code>&amp;&amp;</code> 运算符可以将多个条件组合起来，只有当所有条件都满足时，循环才会结束。</li><li>在循环条件中使用 <code>||</code> 运算符可以将多个条件组合起来，只有当任意一个条件满足时，循环才会结束。</li><li>在循环体中使用 <code>break</code> 命令可以提前结束循环。</li><li>在循环体中使用 <code>continue</code> 命令可以跳过当前循环，直接执行下一次循环。</li><li>在使用 <code>until</code> 循环时，要确保循环条件最终能够被满足，否则循环会一直执行下去，直到被手动中断。</li><li>在循环条件中，要使用测试命令或者其他命令来判断条件是否为真，比如使用 <code>[</code> 或者 <code>test</code> 命令来进行比较或者测试。</li><li>在循环体中，可以使用各种 Shell 命令和语句来执行一系列操作，比如打印输出、文件操作、进程管理、网络通信等等。</li><li><code>until</code> 循环可以用于各种场景，比如等待某个操作完成、等待某个资源可用、等待某个服务启动等等，只需要根据具体需求编写相应的脚本即可。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> while </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx常用模板与配置案例</title>
      <link href="/2023/02/21/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E6%9D%BF%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2023/02/21/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E6%9D%BF%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="ngx-http-proxy-module"><a href="#ngx-http-proxy-module" class="headerlink" title="ngx_http_proxy_module"></a>ngx_http_proxy_module</h2><p>该模块提供了<code>Nginx</code>作为反向代理服务器的功能，常用于将请求代理到其他<code>Web</code>服务器上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有请求代理到本地<code>8080</code>端口的<code>Web</code>服务器上。</p><h2 id="ngx-http-rewrite-module"><a href="#ngx-http-rewrite-module" class="headerlink" title="ngx_http_rewrite_module"></a>ngx_http_rewrite_module</h2><p>该模块允许通过正则表达式修改或重写<code>URL</code>，常用于将旧的URL重定向到新的<code>URL</code>上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /old-url &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/old-url(.*)$</span> /new-url<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有以<code>/old-url</code>开头的URL重定向到<code>/new-url</code>上。</p><h2 id="ngx-http-gzip-module"><a href="#ngx-http-gzip-module" class="headerlink" title="ngx_http_gzip_module"></a>ngx_http_gzip_module</h2><p>该模块提供了对响应内容的压缩功能，可以大幅减少传输数据量，加快网站的加载速度。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_types</span> text/plain text/css application/json;</span><br></pre></td></tr></table></figure><p>上述配置启用了gzip压缩，并指定了需要压缩的文件类型。</p><h2 id="ngx-http-access-module"><a href="#ngx-http-access-module" class="headerlink" title="ngx_http_access_module"></a>ngx_http_access_module</h2><p>该模块提供了访问控制功能，允许根据<code>IP</code>地址或其他条件来限制或允许访问。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /admin &#123;</span><br><span class="line">    <span class="attribute">allow</span> <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置只允许<code>192.168.1.0/24</code>网段的IP地址访问<code>/admin</code>目录。<code>ngx_http_proxy_module</code></p><p>该模块提供了<code>Nginx</code>作为反向代理服务器的功能，常用于将请求代理到其他<code>Web</code>服务器上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有请求代理到本地<code>8080</code>端口的<code>Web</code>服务器上。</p><h2 id="ngx-http-rewrite-module-1"><a href="#ngx-http-rewrite-module-1" class="headerlink" title="ngx_http_rewrite_module"></a>ngx_http_rewrite_module</h2><p>该模块允许通过正则表达式修改或重写<code>URL</code>，常用于将旧的<code>URL</code>重定向到新的<code>URL</code>上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /old-url &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/old-url(.*)$</span> /new-url<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有以/old-url开头的URL重定向到/new-url上。</p><h2 id="ngx-http-gzip-module-1"><a href="#ngx-http-gzip-module-1" class="headerlink" title="ngx_http_gzip_module"></a>ngx_http_gzip_module</h2><p>该模块提供了对响应内容的压缩功能，可以大幅减少传输数据量，加快网站的加载速度。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_types</span> text/plain text/css application/json;</span><br></pre></td></tr></table></figure><p>上述配置启用了<code>gzip</code>压缩，并指定了需要压缩的文件类型。</p><h2 id="ngx-http-access-module-1"><a href="#ngx-http-access-module-1" class="headerlink" title="ngx_http_access_module"></a>ngx_http_access_module</h2><p>该模块提供了访问控制功能，允许根据<code>IP</code>地址或其他条件来限制或允许访问。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /admin &#123;</span><br><span class="line">    <span class="attribute">allow</span> <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置只允许<code>192.168.1.0/24</code>网段的<code>IP</code>地址访问<code>/admin</code>目录。</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx常用模板与配置案例</title>
      <link href="/2023/02/21/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E6%9D%BF%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B/"/>
      <url>/2023/02/21/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E6%9D%BF%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="ngx-http-proxy-module"><a href="#ngx-http-proxy-module" class="headerlink" title="ngx_http_proxy_module"></a>ngx_http_proxy_module</h2><p>该模块提供了<code>Nginx</code>作为反向代理服务器的功能，常用于将请求代理到其他<code>Web</code>服务器上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有请求代理到本地<code>8080</code>端口的<code>Web</code>服务器上。</p><h2 id="ngx-http-rewrite-module"><a href="#ngx-http-rewrite-module" class="headerlink" title="ngx_http_rewrite_module"></a>ngx_http_rewrite_module</h2><p>该模块允许通过正则表达式修改或重写<code>URL</code>，常用于将旧的URL重定向到新的<code>URL</code>上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /old-url &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/old-url(.*)$</span> /new-url<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有以<code>/old-url</code>开头的URL重定向到<code>/new-url</code>上。</p><h2 id="ngx-http-gzip-module"><a href="#ngx-http-gzip-module" class="headerlink" title="ngx_http_gzip_module"></a>ngx_http_gzip_module</h2><p>该模块提供了对响应内容的压缩功能，可以大幅减少传输数据量，加快网站的加载速度。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_types</span> text/plain text/css application/json;</span><br></pre></td></tr></table></figure><p>上述配置启用了gzip压缩，并指定了需要压缩的文件类型。</p><h2 id="ngx-http-access-module"><a href="#ngx-http-access-module" class="headerlink" title="ngx_http_access_module"></a>ngx_http_access_module</h2><p>该模块提供了访问控制功能，允许根据<code>IP</code>地址或其他条件来限制或允许访问。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /admin &#123;</span><br><span class="line">    <span class="attribute">allow</span> <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置只允许<code>192.168.1.0/24</code>网段的IP地址访问<code>/admin</code>目录。<code>ngx_http_proxy_module</code></p><p>该模块提供了<code>Nginx</code>作为反向代理服务器的功能，常用于将请求代理到其他<code>Web</code>服务器上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有请求代理到本地<code>8080</code>端口的<code>Web</code>服务器上。</p><h2 id="ngx-http-rewrite-module-1"><a href="#ngx-http-rewrite-module-1" class="headerlink" title="ngx_http_rewrite_module"></a>ngx_http_rewrite_module</h2><p>该模块允许通过正则表达式修改或重写<code>URL</code>，常用于将旧的<code>URL</code>重定向到新的<code>URL</code>上。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /old-url &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/old-url(.*)$</span> /new-url<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置将所有以/old-url开头的URL重定向到/new-url上。</p><h2 id="ngx-http-gzip-module-1"><a href="#ngx-http-gzip-module-1" class="headerlink" title="ngx_http_gzip_module"></a>ngx_http_gzip_module</h2><p>该模块提供了对响应内容的压缩功能，可以大幅减少传输数据量，加快网站的加载速度。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_types</span> text/plain text/css application/json;</span><br></pre></td></tr></table></figure><p>上述配置启用了<code>gzip</code>压缩，并指定了需要压缩的文件类型。</p><h2 id="ngx-http-access-module-1"><a href="#ngx-http-access-module-1" class="headerlink" title="ngx_http_access_module"></a>ngx_http_access_module</h2><p>该模块提供了访问控制功能，允许根据<code>IP</code>地址或其他条件来限制或允许访问。</p><p>示例配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /admin &#123;</span><br><span class="line">    <span class="attribute">allow</span> <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置只允许<code>192.168.1.0/24</code>网段的<code>IP</code>地址访问<code>/admin</code>目录。</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCSA认证考试-第二台机器</title>
      <link href="/2023/02/20/RHCSA%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95-%E7%AC%AC%E4%BA%8C%E5%8F%B0%E6%9C%BA%E5%99%A8/"/>
      <url>/2023/02/20/RHCSA%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95-%E7%AC%AC%E4%BA%8C%E5%8F%B0%E6%9C%BA%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h2><p>将 <code>venus</code> 的 <code>root</code> 密码设置为 <code>flectrag</code> 。您需要获得系统访问权限才能进行此操作。</p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><ol><li>打开主机venus</li><li>点击Send key </li><li>选择 Ctrl+Alt+Del 重新启动</li><li>开机导航页面按e键</li></ol><p><img src="https://s1.ax1x.com/2023/02/20/pSOdnun.png" alt=""></p><p><img src="https://s1.ax1x.com/2023/02/20/pSOdQEV.png" alt=""></p><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><ol><li>将光标移到Linux 那一行末尾添加如下内容： <code>console=tty0 rd.break</code></li></ol><p><img src="https://s1.ax1x.com/2023/02/20/pSOduBq.png" alt=""></p><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><ol><li>第二步添加修改完成后，按下：<code>Ctrl + X</code>进入<code>grup</code>救援模式进修配置</li></ol><p><img src="https://s1.ax1x.com/2023/02/20/pSOdKH0.png" alt=""></p><p><strong>第三步：按下：Ctrl + X进入grup救援模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新挂载/目录 </span></span><br><span class="line"></span><br><span class="line">switch_root:/# mount -o rw,remount /sysroot </span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入/目录 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># switch_root:/# chroot /sysroot  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置root密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sh-4.4# echo &quot;flectrag&quot;|passwd --stdin root </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在根目录下创建重新刷新SELinux 安全上下文标记的文件 </span></span><br><span class="line"></span><br><span class="line">sh-4.4# <span class="built_in">touch</span> /.autorelabel  </span><br><span class="line"></span><br><span class="line"><span class="comment">#退出重启系统 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sh-4.4# exit </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># switch_root:/# reboot</span></span><br></pre></td></tr></table></figure><h2 id="配置您的系统以使用默认存储库"><a href="#配置您的系统以使用默认存储库" class="headerlink" title="配置您的系统以使用默认存储库"></a>配置您的系统以使用默认存储库</h2><p><code>YUM</code> 存储库已可以从 <code>http://content/rhel8.0/x86_64/dvd/BaseOS</code> 和<code>http://content/rhel8.0/x86_64/dvd/AppStream</code> 使用配置您的系统，以将这些位置用作默认存储库。</p><h3 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">从第一个虚拟机复制过来</span><br><span class="line"></span><br><span class="line">[root@mars ~]# scp /etc/yum.repos.d/rhcsa.repo</span><br><span class="line"></span><br><span class="line">root@172.25.250.200:/etc/yum.repods.d/</span><br><span class="line"></span><br><span class="line">[root@venus ~]# yum install -y vim</span><br><span class="line">#或者重新配置</span><br></pre></td></tr></table></figure><h2 id="调整逻辑卷大小"><a href="#调整逻辑卷大小" class="headerlink" title="调整逻辑卷大小"></a>调整逻辑卷大小</h2><p>将逻辑卷 <code>vo</code> 及其文件系统的大小调整到 <code>230 MiB</code>。确保文件系统内容保持不变。注：分区大小很少与请求的大小完全相同，因此可以接受范围为 <code>217 MiB</code> 到 <code>243 MiB</code> 的大小。</p><h3 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h3><h4 id="查看需要调整的逻辑卷所挂载的路径和现有的大小、名字"><a href="#查看需要调整的逻辑卷所挂载的路径和现有的大小、名字" class="headerlink" title="查看需要调整的逻辑卷所挂载的路径和现有的大小、名字"></a>查看需要调整的逻辑卷所挂载的路径和现有的大小、名字</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lvscan </span><br><span class="line">  ACTIVE            <span class="string">&#x27;/dev/vgroup/swap&#x27;</span> [512.00 MiB] inherit</span><br><span class="line">  ACTIVE            <span class="string">&#x27;/dev/myvol/vo&#x27;</span> [184.00 MiB] inherit</span><br></pre></td></tr></table></figure><h4 id="查看卷组的容量有多大"><a href="#查看卷组的容量有多大" class="headerlink" title="查看卷组的容量有多大"></a>查看卷组的容量有多大</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# vgs</span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  myvol    1   1   0 wz--n- 508.00m 324.00m</span><br><span class="line">  vgroup   1   1   0 wz--n-  &lt;2.00g  &lt;1.50g</span><br></pre></td></tr></table></figure><h4 id="使用lvextend进行扩容"><a href="#使用lvextend进行扩容" class="headerlink" title="使用lvextend进行扩容"></a>使用lvextend进行扩容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lvextend -rL 230M /dev/myvol/vo</span><br></pre></td></tr></table></figure><h4 id="检查lvm大小是否符合"><a href="#检查lvm大小是否符合" class="headerlink" title="检查lvm大小是否符合"></a>检查lvm大小是否符合</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lvscan</span><br><span class="line">  ACTIVE            <span class="string">&#x27;/dev/vgroup/swap&#x27;</span> [512.00 MiB] inherit</span><br><span class="line">  ACTIVE            <span class="string">&#x27;/dev/myvol/vo&#x27;</span> [232.00 MiB] inherit</span><br><span class="line"></span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -Th</span><br><span class="line">Filesystem           Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs             devtmpfs  887M     0  887M   0% /dev</span><br><span class="line">tmpfs                tmpfs     914M     0  914M   0% /dev/shm</span><br><span class="line">tmpfs                tmpfs     914M   17M  897M   2% /run</span><br><span class="line">tmpfs                tmpfs     914M     0  914M   0% /sys/fs/cgroup</span><br><span class="line">/dev/vda3            xfs       9.9G  1.6G  8.4G  16% /</span><br><span class="line">/dev/vda2            vfat      100M  6.8M   94M   7% /boot/efi</span><br><span class="line">/dev/mapper/myvol-vo ext4      221M  2.1M  204M   1% /reports<span class="comment">#这里显示的不是230M没有关系存在误差</span></span><br><span class="line">tmpfs                tmpfs     183M     0  183M   0% /run/user/0</span><br></pre></td></tr></table></figure><h3 id="解题2"><a href="#解题2" class="headerlink" title="解题2"></a>解题2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lvs</span><br><span class="line"></span><br><span class="line">LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync</span><br><span class="line"></span><br><span class="line">Convert</span><br><span class="line"></span><br><span class="line">vo myvol -wi-ao---- 184.00m</span><br><span class="line"></span><br><span class="line">swap vgroup -wi-ao---- 512.00m</span><br><span class="line"></span><br><span class="line">[root@venus ~]# lvextend -L 230M /dev/</span><br><span class="line"></span><br><span class="line">[root@venus ~]# lvextend -L 230M /dev/myvol/vo</span><br><span class="line"></span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line"></span><br><span class="line">devtmpfs 388M 0 388M 0% /dev</span><br><span class="line"></span><br><span class="line">tmpfs 411M 0 411M 0% /dev/shm</span><br><span class="line"></span><br><span class="line">tmpfs 411M 16M 395M 4% /run</span><br><span class="line"></span><br><span class="line">tmpfs 411M 0 411M 0% /sys/fs/cgroup</span><br><span class="line"></span><br><span class="line">/dev/vda1 10G 1.5G 8.6G 15% /</span><br><span class="line"></span><br><span class="line">/dev/mapper/myvol-vo 175M 1.6M 160M 1% /reports</span><br><span class="line"></span><br><span class="line">tmpfs 83M 0 83M 0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@venus ~]# lsblk -f</span><br><span class="line"></span><br><span class="line">[root@venus ~]# resize2fs /dev/myvol/vo</span><br><span class="line"></span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line"></span><br><span class="line">devtmpfs 388M 0 388M 0% /dev</span><br><span class="line"></span><br><span class="line">tmpfs 411M 0 411M 0% /dev/shm</span><br><span class="line"></span><br><span class="line">tmpfs 411M 16M 395M 4% /run</span><br><span class="line"></span><br><span class="line">tmpfs 411M 0 411M 0% /sys/fs/cgroup</span><br><span class="line"></span><br><span class="line">/dev/vda1 10G 1.5G 8.6G 15% /</span><br><span class="line"></span><br><span class="line">/dev/mapper/myvol-vo 221M 2.1M 204M 1% /reports</span><br><span class="line"></span><br><span class="line">tmpfs 83M 0 83M 0% /run/user/0</span><br><span class="line"></span><br><span class="line"><span class="comment">#ext4同步文件系统大小 resize2fs, xfs的话用 xfs_growfs</span></span><br></pre></td></tr></table></figure><h2 id="添加交换分区"><a href="#添加交换分区" class="headerlink" title="添加交换分区"></a>添加交换分区</h2><p>向您的系统添加一个额外的交换分区 <code>756MiB</code> 。交换分区应在系统 启动时自动挂载 。不要删除或以任何方式改动系统上的任何现有交换分区。</p><h3 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h3><h4 id="fdisk分区"><a href="#fdisk分区" class="headerlink" title="fdisk分区"></a>fdisk分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# fdisk /dev/vdb</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line"></span><br><span class="line">Partition number (2-128, default 2):</span><br><span class="line"></span><br><span class="line">First sector (1000001-10485726, default 1001472):</span><br><span class="line"></span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (1001472-10485726, default</span><br><span class="line"></span><br><span class="line">10485726): +756M</span><br><span class="line"></span><br><span class="line">Created a new partition 2 of <span class="built_in">type</span> <span class="string">&#x27;Linux filesystem&#x27;</span> and of size 756 MiB.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 5 GiB, 5368709120 bytes, 10485760 sectors</span><br><span class="line"></span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">Disklabel <span class="built_in">type</span>: gpt</span><br><span class="line"></span><br><span class="line">Disk identifier: CBD519C0-D1F2-4E98-B8D3-C4F4B60C025A</span><br><span class="line"></span><br><span class="line">Device Start End Sectors Size Type</span><br><span class="line"></span><br><span class="line">/dev/vdb1 1024 1000000 998977 487.8M Linux filesystem</span><br><span class="line"></span><br><span class="line">/dev/vdb2 1001472 2549759 1548288 756M Linux filesystem</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line"></span><br><span class="line">The partition table has been altered.</span><br><span class="line"></span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# mkswap /dev/vdb2</span><br><span class="line"></span><br><span class="line">Setting up swapspace version 1, size = 756 MiB (792719360 bytes)</span><br><span class="line"></span><br><span class="line">no label, UUID=4e337981-b8c7-48ee-86c6-1a11fd7dbb82</span><br></pre></td></tr></table></figure><h4 id="永久挂载"><a href="#永久挂载" class="headerlink" title="永久挂载"></a>永久挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@system1 ~]# vim /etc/fstab</span><br><span class="line"></span><br><span class="line">/dev/vdb2 swap swap defaults 0 0</span><br><span class="line"></span><br><span class="line">[root@venus ~]# mount -a</span><br></pre></td></tr></table></figure><h4 id="激活交换分区"><a href="#激活交换分区" class="headerlink" title="激活交换分区"></a>激活交换分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# swapon -a</span><br><span class="line"></span><br><span class="line">[root@venus ~]# swapon --show</span><br><span class="line"></span><br><span class="line">NAME TYPE SIZE USED PRIO</span><br><span class="line"></span><br><span class="line">/dev/dm-0 partition 512M 0B -2</span><br><span class="line"></span><br><span class="line">/dev/vdb2 partition 756M 0B -3</span><br><span class="line"></span><br><span class="line">[root@venus ~]# free -m</span><br><span class="line"></span><br><span class="line">total used free shared buff/cache</span><br><span class="line"></span><br><span class="line">available</span><br><span class="line"></span><br><span class="line">Mem: 821 175 328 15 316</span><br><span class="line"></span><br><span class="line">500</span><br><span class="line"></span><br><span class="line">Swap: 1267 0 1267</span><br></pre></td></tr></table></figure><h3 id="解题2-1"><a href="#解题2-1" class="headerlink" title="解题2"></a>解题2</h3><h4 id="查看一下磁盘空间分配情况"><a href="#查看一下磁盘空间分配情况" class="headerlink" title="查看一下磁盘空间分配情况"></a>查看一下磁盘空间分配情况</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lsblk</span><br><span class="line"><span class="variable constant_">NAME</span>            <span class="attr">MAJ</span>:<span class="variable constant_">MIN</span> <span class="variable constant_">RM</span>  <span class="variable constant_">SIZE</span> <span class="variable constant_">RO</span> <span class="variable constant_">TYPE</span> <span class="variable constant_">MOUNTPOINT</span></span><br><span class="line">vda             <span class="number">252</span>:<span class="number">0</span>    <span class="number">0</span>   10G  <span class="number">0</span> disk </span><br><span class="line">├─vda1          <span class="number">252</span>:<span class="number">1</span>    <span class="number">0</span>    1M  <span class="number">0</span> part </span><br><span class="line">├─vda2          <span class="number">252</span>:<span class="number">2</span>    <span class="number">0</span>  100M  <span class="number">0</span> part /boot/efi</span><br><span class="line">└─vda3          <span class="number">252</span>:<span class="number">3</span>    <span class="number">0</span>  <span class="number">9.</span>9G  <span class="number">0</span> part /</span><br><span class="line">vdb             <span class="number">252</span>:<span class="number">16</span>   <span class="number">0</span>    5G  <span class="number">0</span> disk </span><br><span class="line">├─vdb1          <span class="number">252</span>:<span class="number">17</span>   <span class="number">0</span>  510M  <span class="number">0</span> part </span><br><span class="line">│ └─myvol-vo    <span class="number">253</span>:<span class="number">0</span>    <span class="number">0</span>  232M  <span class="number">0</span> lvm  /reports</span><br><span class="line">└─vdb2          <span class="number">252</span>:<span class="number">18</span>   <span class="number">0</span>    2G  <span class="number">0</span> part </span><br><span class="line">  └─vgroup-swap <span class="number">253</span>:<span class="number">1</span>    <span class="number">0</span>  512M  <span class="number">0</span> lvm  [<span class="variable constant_">SWAP</span>]</span><br><span class="line">vdc             <span class="number">252</span>:<span class="number">32</span>   <span class="number">0</span>   10G  <span class="number">0</span> disk </span><br></pre></td></tr></table></figure><h4 id="使用磁盘分区分出一个swap"><a href="#使用磁盘分区分出一个swap" class="headerlink" title="使用磁盘分区分出一个swap"></a>使用磁盘分区分出一个swap</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# fdisk /dev/vdb</span><br><span class="line">Welcome to fdisk (util-linux 2.32.1).</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, <span class="keyword">until</span> you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p<span class="comment"># 首先p打印一下现在的分区信息</span></span><br><span class="line">Disk /dev/vdb: 5 GiB, 5368709120 bytes, 10485760 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0xdf110c4a</span><br><span class="line"></span><br><span class="line">Device     Boot   Start     End Sectors  Size Id Type</span><br><span class="line">/dev/vdb1          2048 1046528 1044481  510M 83 Linux</span><br><span class="line">/dev/vdb2       1046529 5240833 4194305    2G 83 Linux</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n<span class="comment"># 然后按n新建分区 </span></span><br><span class="line">Partition <span class="built_in">type</span></span><br><span class="line">   p   primary (2 primary, 0 extended, 2 free)</span><br><span class="line">   e   extended (container <span class="keyword">for</span> logical partitions)</span><br><span class="line">Select (default p): p<span class="comment"># 再按p添加主分区</span></span><br><span class="line">Partition number (3,4, default 3): <span class="comment"># 然后是让你选择主分区代码3,4默认就可以（3）</span></span><br><span class="line">First sector (5240834-10485759, default 5242880): <span class="comment"># 之后是选择分区起始位置的大小默认就可以</span></span><br><span class="line">Last sector,+sectors or +size&#123;K,M,G,T,P&#125; (5242880-10485759, default 10485759): +756M <span class="comment">#最后是选择增加的大小+756M</span></span><br><span class="line"></span><br><span class="line">Created a new partition 3 of <span class="built_in">type</span> <span class="string">&#x27;Linux&#x27;</span> and of size 756 MiB.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p<span class="comment"># 现在按p再查看一下分区信息</span></span><br><span class="line">Disk /dev/vdb: 5 GiB, 5368709120 bytes, 10485760 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0xdf110c4a</span><br><span class="line"></span><br><span class="line">Device     Boot   Start     End Sectors  Size Id Type</span><br><span class="line">/dev/vdb1          2048 1046528 1044481  510M 83 Linux</span><br><span class="line">/dev/vdb2       1046529 5240833 4194305    2G 83 Linux</span><br><span class="line">/dev/vdb3       5242880 6791167 1548288  756M 83 Linux</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了以后方便正常工作中查看将标识号更改为82（交换分区）</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t<span class="comment"># 按t</span></span><br><span class="line">Partition number (1-3, default 3): 3<span class="comment"># 选择3 </span></span><br><span class="line">Hex code (<span class="built_in">type</span> L to list all codes): 82<span class="comment"># 再输入82</span></span><br><span class="line"></span><br><span class="line">Changed <span class="built_in">type</span> of partition <span class="string">&#x27;Linux&#x27;</span> to <span class="string">&#x27;Linux swap / Solaris&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p<span class="comment"># 再按p再查看一下分区信息</span></span><br><span class="line">Disk /dev/vdb: 5 GiB, 5368709120 bytes, 10485760 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0xdf110c4a</span><br><span class="line"></span><br><span class="line">Device     Boot   Start     End Sectors  Size Id Type</span><br><span class="line">/dev/vdb1          2048 1046528 1044481  510M 83 Linux</span><br><span class="line">/dev/vdb2       1046529 5240833 4194305    2G 83 Linux</span><br><span class="line">/dev/vdb3       5242880 6791167 1548288  756M 82 Linux swap / Solaris<span class="comment"># 更改成功</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w<span class="comment"># 按w保存退出</span></span><br><span class="line">The partition table has been altered.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h4 id="查看分区信息"><a href="#查看分区信息" class="headerlink" title="查看分区信息"></a>查看分区信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lsblk </span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">vda             252:0    0   10G  0 disk </span><br><span class="line">├─vda1          252:1    0    1M  0 part </span><br><span class="line">├─vda2          252:2    0  100M  0 part /boot/efi</span><br><span class="line">└─vda3          252:3    0  9.9G  0 part /</span><br><span class="line">vdb             252:16   0    5G  0 disk </span><br><span class="line">├─vdb1          252:17   0  510M  0 part </span><br><span class="line">│ └─myvol-vo    253:0    0  232M  0 lvm  /reports</span><br><span class="line">├─vdb2          252:18   0    2G  0 part </span><br><span class="line">│ └─vgroup-swap 253:1    0  512M  0 lvm  [SWAP]</span><br><span class="line">└─vdb3          252:19   0  756M  0 part </span><br><span class="line">vdc             252:32   0   10G  0 disk </span><br></pre></td></tr></table></figure><h4 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# mkswap /dev/vdb3</span><br><span class="line">Setting up swapspace version 1, size = 756 MiB (792719360 bytes)</span><br><span class="line">no label, UUID=dd5e8738-83a0-45fb-9014-4533d7a94e8e</span><br></pre></td></tr></table></figure><h4 id="编辑fstab设置开机自动挂载"><a href="#编辑fstab设置开机自动挂载" class="headerlink" title="编辑fstab设置开机自动挂载"></a>编辑fstab设置开机自动挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看UUID</span></span><br><span class="line">[root@venus ~]# blkid /dev/vdb3 </span><br><span class="line">/dev/vdb3: UUID=<span class="string">&quot;dd5e8738-83a0-45fb-9014-4533d7a94e8e&quot;</span> TYPE=<span class="string">&quot;swap&quot;</span> PARTUUID=<span class="string">&quot;df110c4a-03&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在末行插入</span></span><br><span class="line">[root@venus ~]# vim /etc/fstab </span><br><span class="line">UUID=<span class="string">&quot;dd5e8738-83a0-45fb-9014-4533d7a94e8e&quot;</span> swap swap defaults 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">[root@venus ~]# swapon -a</span><br><span class="line">[root@venus ~]# swapon -s</span><br><span class="line">FilenameTypeSizeUsedPriority</span><br><span class="line">/dev/dm-1                              partition5242840-2</span><br><span class="line">/dev/vdb3                              partition7741400-3</span><br></pre></td></tr></table></figure><h2 id="创建逻辑卷"><a href="#创建逻辑卷" class="headerlink" title="创建逻辑卷"></a>创建逻辑卷</h2><p>根据如下要求，创建新的逻辑卷：</p><ul><li><p>逻辑卷取名为 <code>qa</code> ，属于 <code>qagroup</code> 卷组，大小为 <code>60</code> 个扩展块</p></li><li><p><code>qagroup</code> 卷组中逻辑卷的扩展块大小应当为 <code>16 MiB</code></p></li><li><p>使用 <code>ext3</code> 文件系统格式化新逻辑卷。该逻辑卷应在系统启动时自动挂载到 <code>/mnt/qa</code> 下</p></li></ul><h3 id="解题1-2"><a href="#解题1-2" class="headerlink" title="解题1"></a>解题1</h3><h4 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# fdisk /dev/vdb</span><br><span class="line"></span><br><span class="line">Welcome to fdisk (util-linux 2.32.1).</span><br><span class="line"></span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, <span class="keyword">until</span> you decide to write them.</span><br><span class="line"></span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line"></span><br><span class="line">Partition number (3-128, default 3):</span><br><span class="line"></span><br><span class="line">First sector (2549760-10485726, default 2549760):</span><br><span class="line"></span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2549760-10485726, default</span><br><span class="line"></span><br><span class="line">10485726): +1G</span><br><span class="line"></span><br><span class="line">Created a new partition 3 of <span class="built_in">type</span> <span class="string">&#x27;Linux filesystem&#x27;</span> and of size 1 GiB.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line"></span><br><span class="line">The partition table has been altered.</span><br><span class="line"></span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h4 id="创建pv-vg-lv"><a href="#创建pv-vg-lv" class="headerlink" title="创建pv vg lv"></a>创建pv vg lv</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# pvcreate /dev/vdb3</span><br><span class="line"></span><br><span class="line">[root@venus ~]# vgcreate -s 16M qagroup /dev/vdb3</span><br><span class="line"></span><br><span class="line">[root@venus ~]# lvcreate -l 60 -n qa qagroup</span><br><span class="line"></span><br><span class="line">[root@venus ~]# lvs</span><br><span class="line"></span><br><span class="line">LV VG Attr LSize Pool Origin Data% Meta% Move Log</span><br><span class="line"></span><br><span class="line">Cpy%Sync Convert</span><br><span class="line"></span><br><span class="line">vo myvol -wi-ao---- 232.00m</span><br><span class="line"></span><br><span class="line">qa qagroup -wi-a----- 960.00m</span><br><span class="line"></span><br><span class="line">swap vgroup -wi-ao---- 512.00m</span><br><span class="line"></span><br><span class="line">[root@venus ~]# lvdisplay</span><br></pre></td></tr></table></figure><h4 id="创建挂载路径"><a href="#创建挂载路径" class="headerlink" title="创建挂载路径"></a>创建挂载路径</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# <span class="built_in">mkdir</span> /mnt/qa</span><br></pre></td></tr></table></figure><h4 id="格式化-1"><a href="#格式化-1" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# mkfs.ext3 /dev/qagroup/qa</span><br></pre></td></tr></table></figure><h4 id="开机挂载"><a href="#开机挂载" class="headerlink" title="开机挂载"></a>开机挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# vim /etc/fstab</span><br><span class="line"></span><br><span class="line">/dev/qagroup/qa /mnt/qa ext3 defaults 0 0</span><br><span class="line"></span><br><span class="line">[root@venus ~]# mount -a</span><br><span class="line"></span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line"></span><br><span class="line">devtmpfs 388M 0 388M 0% /dev</span><br><span class="line"></span><br><span class="line">tmpfs 411M 0 411M 0% /dev/shm</span><br><span class="line"></span><br><span class="line">tmpfs 411M 16M 395M 4% /run</span><br><span class="line"></span><br><span class="line">tmpfs 411M 0 411M 0% /sys/fs/cgroup</span><br><span class="line"></span><br><span class="line">/dev/vda1 10G 1.5G 8.6G 15% /</span><br><span class="line"></span><br><span class="line">/dev/mapper/myvol-vo 221M 2.1M 204M 1% /reports</span><br><span class="line"></span><br><span class="line">tmpfs 83M 0 83M 0% /run/user/0</span><br><span class="line"></span><br><span class="line">/dev/mapper/qagroup-qa 929M 1.2M 880M 1% /mnt/q</span><br></pre></td></tr></table></figure><h3 id="解题2-2"><a href="#解题2-2" class="headerlink" title="解题2"></a>解题2</h3><h4 id="先将所有剩余空间给扩展分区"><a href="#先将所有剩余空间给扩展分区" class="headerlink" title="先将所有剩余空间给扩展分区"></a>先将所有剩余空间给扩展分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在这里解释一下为什么给全部容量，而不是60个拓展块*16M=960M 因为红帽考试存在bug尽量在已知条件给更大的空间</span></span><br><span class="line">[root@venus ~]# fdisk /dev/vdb</span><br><span class="line"></span><br><span class="line">Welcome to fdisk (util-linux 2.32.1).</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, <span class="keyword">until</span> you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span></span><br><span class="line">   p   primary (3 primary, 0 extended, 1 free)</span><br><span class="line">   e   extended (container <span class="keyword">for</span> logical partitions)</span><br><span class="line">Select (default e): </span><br><span class="line"></span><br><span class="line">Using default response e.</span><br><span class="line">Selected partition 4</span><br><span class="line">First sector (5240834-10485759, default 6791168): </span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (6791168-10485759, default 10485759): </span><br><span class="line"></span><br><span class="line">Created a new partition 4 of <span class="built_in">type</span> <span class="string">&#x27;Extended&#x27;</span> and of size 1.8 GiB.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Syncing disks.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">All primary partitions are <span class="keyword">in</span> use.</span><br><span class="line">Adding logical partition 5</span><br><span class="line">First sector (6793216-10485759, default 6793216): </span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (6793216-10485759, default 10485759): </span><br><span class="line"></span><br><span class="line">Created a new partition 5 of <span class="built_in">type</span> <span class="string">&#x27;Linux&#x27;</span> and of size 1.8 GiB.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/vdb: 5 GiB, 5368709120 bytes, 10485760 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0xdf110c4a</span><br><span class="line"></span><br><span class="line">Device     Boot   Start      End Sectors  Size Id Type</span><br><span class="line">/dev/vdb1          2048  1046528 1044481  510M 83 Linux</span><br><span class="line">/dev/vdb2       1046529  5240833 4194305    2G 83 Linux</span><br><span class="line">/dev/vdb3       5242880  6791167 1548288  756M 82 Linux swap / Solaris</span><br><span class="line">/dev/vdb4       6791168 10485759 3694592  1.8G  5 Extended</span><br><span class="line">/dev/vdb5       6793216 10485759 3692544  1.8G 83 Linux</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Failed to add partition 5 to system: Device or resource busy</span><br><span class="line"></span><br><span class="line">The kernel still uses the old partitions. The new table will be used at the next reboot. </span><br><span class="line">Syncing disks.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在模拟环境中显示需要重启</span></span><br><span class="line">[root@venus ~]# reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启后查看之前创建的vdb5已经创建完成</span></span><br><span class="line">[root@venus ~]# lsblk </span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">vda             252:0    0   10G  0 disk </span><br><span class="line">├─vda1          252:1    0    1M  0 part </span><br><span class="line">├─vda2          252:2    0  100M  0 part /boot/efi</span><br><span class="line">└─vda3          252:3    0  9.9G  0 part /</span><br><span class="line">vdb             252:16   0    5G  0 disk </span><br><span class="line">├─vdb1          252:17   0  510M  0 part </span><br><span class="line">│ └─myvol-vo    253:0    0  232M  0 lvm  /reports</span><br><span class="line">├─vdb2          252:18   0    2G  0 part </span><br><span class="line">│ └─vgroup-swap 253:1    0  512M  0 lvm  [SWAP]</span><br><span class="line">├─vdb3          252:19   0  756M  0 part [SWAP]</span><br><span class="line">├─vdb4          252:20   0    1K  0 part </span><br><span class="line">└─vdb5          252:21   0  1.8G  0 part </span><br><span class="line">vdc             252:32   0   10G  0 disk </span><br></pre></td></tr></table></figure><h4 id="创建pv物理卷"><a href="#创建pv物理卷" class="headerlink" title="创建pv物理卷"></a>创建pv物理卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]#  pvcreate /dev/vdb5 </span><br><span class="line">  Physical volume <span class="string">&quot;/dev/vdb5&quot;</span> successfully created.</span><br></pre></td></tr></table></figure><h4 id="创建vg逻辑卷组"><a href="#创建vg逻辑卷组" class="headerlink" title="创建vg逻辑卷组"></a>创建vg逻辑卷组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]#  vgcreate qagroup /dev/vdb5 -s 16M</span><br><span class="line">  Volume group <span class="string">&quot;qagroup&quot;</span> successfully created</span><br></pre></td></tr></table></figure><h4 id="创建lv逻辑卷"><a href="#创建lv逻辑卷" class="headerlink" title="创建lv逻辑卷"></a>创建lv逻辑卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# lvcreate -l 60 -n qa qagroup</span><br><span class="line">  Logical volume <span class="string">&quot;qa&quot;</span> created.</span><br></pre></td></tr></table></figure><h4 id="格式化文件系统"><a href="#格式化文件系统" class="headerlink" title="格式化文件系统"></a>格式化文件系统</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# mkfs.ext3 /dev/qagroup/qa</span><br><span class="line">mke2fs 1.45.4 (23-Sep-2019)</span><br><span class="line">Creating filesystem with 245760 4k blocks and 61440 inodes</span><br><span class="line">Filesystem UUID: 04a9f331-7f7d-4b0d-945e-12d48fdba124</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">32768, 98304, 163840, 229376</span><br><span class="line"></span><br><span class="line">Allocating group tables: <span class="keyword">done</span>                            </span><br><span class="line">Writing inode tables: <span class="keyword">done</span>                            </span><br><span class="line">Creating journal (4096 blocks): <span class="keyword">done</span></span><br><span class="line">Writing superblocks and filesystem accounting information: <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="创建挂载的路径"><a href="#创建挂载的路径" class="headerlink" title="创建挂载的路径"></a>创建挂载的路径</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# <span class="built_in">mkdir</span> /mnt/qa</span><br></pre></td></tr></table></figure><h4 id="编辑fstab设置开机自动挂载-1"><a href="#编辑fstab设置开机自动挂载-1" class="headerlink" title="编辑fstab设置开机自动挂载"></a>编辑fstab设置开机自动挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看UUID</span></span><br><span class="line">[root@venus ~]# blkid /dev/qagroup/qa</span><br><span class="line">/dev/qagroup/qa: UUID=<span class="string">&quot;04a9f331-7f7d-4b0d-945e-12d48fdba124&quot;</span> SEC_TYPE=<span class="string">&quot;ext2&quot;</span> TYPE=<span class="string">&quot;ext3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在末行插入</span></span><br><span class="line">[root@venus ~]# vim /etc/fstab</span><br><span class="line">UUID=<span class="string">&quot;04a9f331-7f7d-4b0d-945e-12d48fdba124&quot;</span> /mnt/qa ext3 defaults 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">[root@venus ~]# mount -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查</span></span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -Th</span><br><span class="line">Filesystem             Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs               devtmpfs  887M     0  887M   0% /dev</span><br><span class="line">tmpfs                  tmpfs     914M     0  914M   0% /dev/shm</span><br><span class="line">tmpfs                  tmpfs     914M   17M  897M   2% /run</span><br><span class="line">tmpfs                  tmpfs     914M     0  914M   0% /sys/fs/cgroup</span><br><span class="line">/dev/vda3              xfs       9.9G  1.7G  8.3G  17% /</span><br><span class="line">/dev/mapper/myvol-vo   ext4      221M  2.1M  204M   1% /reports</span><br><span class="line">/dev/vda2              vfat      100M  6.8M   94M   7% /boot/efi</span><br><span class="line">tmpfs                  tmpfs     183M     0  183M   0% /run/user/0</span><br><span class="line">/dev/mapper/qagroup-qa ext3      929M  1.2M  880M   1% /mnt/qa</span><br></pre></td></tr></table></figure><h2 id="创建-VDO-卷"><a href="#创建-VDO-卷" class="headerlink" title="创建 VDO 卷"></a>创建 VDO 卷</h2><p>根据如下要求，创建新的 <code>VDO</code> 卷：</p><ul><li><p>使用未分区的磁盘</p></li><li><p>该卷的名称为 <code>vdough</code></p></li><li><p>该卷的逻辑大小为 <code>50G</code></p></li><li><p>该卷使用 <code>xfs</code> 文件系统格式化</p></li><li><p>该卷（在系统启动时）挂载到 <code>/vbread</code> 下</p></li></ul><h3 id="解题1-3"><a href="#解题1-3" class="headerlink" title="解题1"></a>解题1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# yum install -y vdo</span><br><span class="line"></span><br><span class="line">[root@venus ~]# man vdo</span><br><span class="line"></span><br><span class="line">[root@venus ~]# vdo create --name=vdough --device=/dev/vdc --</span><br><span class="line"></span><br><span class="line">vdoLogicalSize=50G</span><br><span class="line"></span><br><span class="line">[root@venus ~]# mkfs.xfs /dev/mapper/vdough</span><br><span class="line"></span><br><span class="line">[root@venus ~]# <span class="built_in">mkdir</span> /vbread</span><br><span class="line"></span><br><span class="line">[root@venus ~]# vim /etc/fstab</span><br><span class="line"></span><br><span class="line">/dev/mapper/vdough /vbread xfs defaults,_netdev 0 0</span><br><span class="line"></span><br><span class="line">[root@venus ~]# mount -a</span><br><span class="line"></span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">[root@venus ~]# systemctl start vdo</span><br><span class="line"></span><br><span class="line">[root@venus ~]# systemctl <span class="built_in">enable</span> vdo</span><br><span class="line"></span><br><span class="line"><span class="comment">#在新版本8.4中，man vdo有fstab文件的提示</span></span><br><span class="line"></span><br><span class="line">/dev/mapper/vdo0 /vdo xfs defaults,x-systemd.requires=vdo.service 0 0</span><br></pre></td></tr></table></figure><h3 id="解题2-3"><a href="#解题2-3" class="headerlink" title="解题2"></a>解题2</h3><h4 id="安装VDO工具"><a href="#安装VDO工具" class="headerlink" title="安装VDO工具"></a>安装VDO工具</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# yum -y install vdo kmod-kvdo</span><br></pre></td></tr></table></figure><h4 id="创建VDO虚拟磁盘"><a href="#创建VDO虚拟磁盘" class="headerlink" title="创建VDO虚拟磁盘"></a>创建VDO虚拟磁盘</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 查看创建<span class="variable constant_">VDO</span>的命令</span><br><span class="line">[root@venus ~]# man vdo | grep \#</span><br><span class="line">       # vdo create --name=vdo0 --device=<span class="regexp">/dev/</span>sdb1 --vdoLogicalSize=10T</span><br><span class="line">       #</span><br><span class="line">       </span><br><span class="line">[root@venus ~]# vdo create --name=vdough --device=<span class="regexp">/dev/</span>vdc --vdoLogicalSize=50G</span><br><span class="line"><span class="title class_">Creating</span> <span class="variable constant_">VDO</span> vdough</span><br><span class="line">      <span class="title class_">The</span> <span class="variable constant_">VDO</span> volume can address <span class="number">6</span> <span class="variable constant_">GB</span> <span class="keyword">in</span> <span class="number">3</span> data slabs, each <span class="number">2</span> <span class="variable constant_">GB</span>.</span><br><span class="line">      <span class="title class_">It</span> can grow to address at most <span class="number">16</span> <span class="variable constant_">TB</span> <span class="keyword">of</span> physical storage <span class="keyword">in</span> <span class="number">8192</span> slabs.</span><br><span class="line">      <span class="title class_">If</span> a larger maximum size might be needed, use bigger slabs.</span><br><span class="line"><span class="title class_">Starting</span> <span class="variable constant_">VDO</span> vdough</span><br><span class="line"><span class="title class_">Starting</span> compression on <span class="variable constant_">VDO</span> vdough</span><br><span class="line"><span class="variable constant_">VDO</span> instance <span class="number">0</span> volume is ready at /dev/mapper/vdough</span><br></pre></td></tr></table></figure><h4 id="格式化VDO"><a href="#格式化VDO" class="headerlink" title="格式化VDO"></a>格式化VDO</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]#  mkfs.xfs -K /dev/mapper/vdough</span><br><span class="line">meta-data=/dev/mapper/vdough     isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=4096  attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=4096  sunit=1 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h4 id="创建挂载的路径-1"><a href="#创建挂载的路径-1" class="headerlink" title="创建挂载的路径"></a>创建挂载的路径</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@venus ~]# <span class="built_in">mkdir</span> /vbread</span><br></pre></td></tr></table></figure><h4 id="编辑fstab设置开机自动挂载-2"><a href="#编辑fstab设置开机自动挂载-2" class="headerlink" title="编辑fstab设置开机自动挂载"></a>编辑fstab设置开机自动挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看UUID</span></span><br><span class="line">[root@venus ~]# blkid /dev/mapper/vdough </span><br><span class="line">/dev/mapper/vdough: UUID=<span class="string">&quot;93e995d3-e334-4735-98c4-f69820ef22ef&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在末行插入</span></span><br><span class="line">[root@venus ~]# vim /etc/fstab </span><br><span class="line">UUID=<span class="string">&quot;93e995d3-e334-4735-98c4-f69820ef22ef&quot;</span> /vbread xfs defaults,x-systemd.requires=vdo.service 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">[root@venus ~]# mount -a</span><br><span class="line">[root@venus ~]# <span class="built_in">df</span> -Th</span><br><span class="line">Filesystem             Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs               devtmpfs  887M     0  887M   0% /dev</span><br><span class="line">tmpfs                  tmpfs     914M     0  914M   0% /dev/shm</span><br><span class="line">tmpfs                  tmpfs     914M   17M  897M   2% /run</span><br><span class="line">tmpfs                  tmpfs     914M     0  914M   0% /sys/fs/cgroup</span><br><span class="line">/dev/vda3              xfs       9.9G  1.7G  8.3G  17% /</span><br><span class="line">/dev/mapper/myvol-vo   ext4      221M  2.1M  204M   1% /reports</span><br><span class="line">/dev/vda2              vfat      100M  6.8M   94M   7% /boot/efi</span><br><span class="line">tmpfs                  tmpfs     183M     0  183M   0% /run/user/0</span><br><span class="line">/dev/mapper/qagroup-qa ext3      929M  1.2M  880M   1% /mnt/qa</span><br><span class="line">/dev/mapper/vdough     xfs        50G  390M   50G   1% /vbread</span><br><span class="line"></span><br><span class="line"><span class="comment">## 挂载时defaults后的参数通过man vdo 查找fstab找到</span></span><br><span class="line">For  /etc/fstab  mounting,  <span class="keyword">in</span> order to make sure the mount waits <span class="keyword">for</span> the VDO to start, use the mount</span><br><span class="line">       option x-systemd.requires=vdo.service For example, an /etc/fstab line involving VDO could be the fol‐</span><br><span class="line">       lowing:</span><br><span class="line"></span><br><span class="line">       /dev/mapper/vdo0 /vdo xfs defaults,x-systemd.requires=vdo.service 0 0</span><br></pre></td></tr></table></figure><h2 id="配置系统调优"><a href="#配置系统调优" class="headerlink" title="配置系统调优"></a>配置系统调优</h2><p>为您的系统选择建议的 <code>tuned</code> 配置集并将它设为默认设置</p><h3 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@venus ~]# tuned-adm recommend  <span class="comment"># 查看tuned目前推荐使用的策略</span></span><br><span class="line"></span><br><span class="line">virtual-guest</span><br><span class="line"></span><br><span class="line">[root@venus ~]# tuned-adm profile virtual-guest  设置profile为推荐值</span><br><span class="line"></span><br><span class="line">[root@venus ~]# tuned-adm active  查看是否配置成功</span><br><span class="line"></span><br><span class="line">Current active profile: virtual-guest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 考试认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 交互权限 /bin/false 与/sbin/nologin区别？</title>
      <link href="/2023/02/18/Linux%20%E4%BA%A4%E4%BA%92%E6%9D%83%E9%99%90%20binfalse%20%E4%B8%8Esbinnologin%E5%8C%BA%E5%88%AB/"/>
      <url>/2023/02/18/Linux%20%E4%BA%A4%E4%BA%92%E6%9D%83%E9%99%90%20binfalse%20%E4%B8%8Esbinnologin%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>在Linux系统中，<code>/bin/false</code>和<code>/sbin/nologin</code>是两个常用的用于限制用户登录的交互权限。它们的区别如下：</p><h2 id="bin-false"><a href="#bin-false" class="headerlink" title="/bin/false:"></a>/bin/false:</h2><p><code>/bin/false</code>是一个占位符命令，它会立即返回一个假值，表示命令执行失败，因此用户无法登录系统进行交互式会话。当用户尝试使用该账户登录系统时，系统将立即关闭连接。用户可以通过<code>ssh</code>或<code>telnet</code>等网络服务连接到系统，但是无法执行任何操作。可以将<code>/bin/false</code>用于一些需要存在系统账户，但不允许该用户进行任何操作的情况，如<code>web</code>服务器中的<code>www-data</code>用户。</p><h2 id="sbin-nologin"><a href="#sbin-nologin" class="headerlink" title="/sbin/nologin:"></a>/sbin/nologin:</h2><p><code>/sbin/nologin</code>命令会在用户尝试登录系统时显示一条拒绝登录的消息，并立即关闭连接。与<code>/bin/false</code>不同，<code>/sbin/nologin</code>可以为用户显示一条自定义的消息。通常，这条消息用于告诉用户为什么不能登录系统，并提供一些相关的信息，例如联系管理员的电子邮件地址。<code>/sbin/nologin</code>常用于禁止shell登录，并限制用户只能通过<code>sftp</code>或<code>scp</code>等特定的服务进行访问的情况。</p><p>综上所述，<code>/bin/false</code>和<code>/sbin/nologin</code>都是用于限制用户交互权限的命令，但<code>/bin/false</code>只是简单地关闭连接，而<code>/sbin/nologin</code>则会显示自定义消息并关闭连接。因此，在选择哪种方式限制用户登录时，需要根据实际情况来进行选择。</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCSA认证考试-第一台机器</title>
      <link href="/2023/02/15/RHCSA%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95-%E7%AC%AC%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8/"/>
      <url>/2023/02/15/RHCSA%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95-%E7%AC%AC%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="配置网络设置"><a href="#配置网络设置" class="headerlink" title="配置网络设置"></a>配置网络设置</h2><p>在<code>mars.domain250.example.com</code> 上执行以下任务，配置网络络设置<br>将 <code>mars</code> 配置为具有以下网络配置：</p><ul><li>主机名： mars.domain250.example.com</li><li>IP 地址： 172.25.250.100</li><li>子网掩码： 255.255.255.0</li><li>网关： 172.25.250.254</li></ul><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">设置主机名</span><br><span class="line"><span class="comment"># hostnamectl set-hostname node1.domain250.example.com</span></span><br><span class="line">查看所有网络接口信息</span><br><span class="line"><span class="comment"># nmcli connection show</span></span><br><span class="line">设置静态IP、配置开机自动激活</span><br><span class="line"><span class="comment"># nmcli connection modify &quot;Wired connection 1&quot; ipv4.addresses 172.25.250.100/24 ipv4.gateway 172.25.250.254 ipv4.dns 172.25.250.254 ipv4.method manual connection.autoconnect yes</span></span><br><span class="line">激活配置</span><br><span class="line"><span class="comment"># nmcli connection up &quot;Wired connection 1&quot;</span></span><br><span class="line">检查网卡是否配置成功</span><br><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">检查主机名是否配置成功</span><br><span class="line"><span class="comment"># hostname</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>如果默认connection没有自动连接还需要加上选项 connection.autoconnect yes</li><li>网络配置完成后，后续的题就可以通过ssh远程操作完成。</li><li>如果题要求配置DNS，则还需要指定ipv4.dns选项</li><li>设置网卡时需注意网卡名是否带有特殊符号， 包括含有空格， 都需要用引号把名字括起来</li><li>设置网卡时需注意前面是要有的</li></ul><h2 id="配置您的系统以使用默认存储库"><a href="#配置您的系统以使用默认存储库" class="headerlink" title="配置您的系统以使用默认存储库"></a>配置您的系统以使用默认存储库</h2><p><code>YUM</code> 存储库已可以从 <code>http://content/rhel8.0/x86_64/dvd/BaseOS</code> 和<br><code>http://content/rhel8.0/x86_64/dvd/AppStream</code> 使用配置您的系统，以将这些位置用作默认存储库。</p><h3 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line">[root@mars yum.repos.d]# vi rhcsa.repo</span><br><span class="line">[base]</span><br><span class="line">name=base</span><br><span class="line">baseurl=http://content/rhel8.0/x86_64/dvd/BaseOS</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[app]</span><br><span class="line">name=app</span><br><span class="line">baseurl=http://content/rhel8.0/x86_64/dvd/AppStream</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@mars yum.repos.d]# yum clean all <span class="comment">#清空yum源</span></span><br><span class="line">[root@mars yum.repos.d]# yum repolist  <span class="comment">#初始化列出所有可用的yum源</span></span><br><span class="line">[root@mars yum.repos.d]# yum install -y vim  <span class="comment">#考试机可能没有vim,安装vim测试yum源是否正常使用</span></span><br></pre></td></tr></table></figure><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>源库的名字可以自定义， 除非题目有要求.</li><li>baseurl全部小写.</li><li>填写源的路径时能复制尽量复制别手敲,避免错误.</li></ul><h2 id="调试-SELinux"><a href="#调试-SELinux" class="headerlink" title="调试 SELinux"></a>调试 SELinux</h2><p>非标准端口 <code>82</code> 上运行的 <code>Web</code> 服务器在提供内容时遇到问题。根据需要调试并解决问题，使其满足以<br>下条件：</p><ul><li>系统上的 <code>Web</code> 服务器能够提供 <code>/var/www/html</code> 中所有现有的 <code>HTML</code><br>文件（注：不要删除或以其他方式改动现有的文件内容）</li><li><code>Web</code> 服务器在端口 <code>82</code> 上提供此内容</li><li><code>Web</code> 服务器在系统启动时自动启动</li></ul><h3 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h3><h4 id="检查selinux"><a href="#检查selinux" class="headerlink" title="检查selinux"></a>检查selinux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># egrep -i selinux /etc/sysconfig/selinux |egrep -v &quot;#&quot;</span></span><br><span class="line">selinux未开启就需要进配置文件把selinux设置为enforcing</span><br><span class="line"><span class="comment"># vim /etc/sysconfig/selinux</span></span><br><span class="line">SELINUX=enforcing</span><br><span class="line">重启使其生效</span><br><span class="line"><span class="comment"># reboot</span></span><br><span class="line">检查semanage是否有安装</span><br><span class="line"><span class="comment"># semanage -h</span></span><br><span class="line">如果没有需安装semanage</span><br><span class="line"><span class="comment"># yum install policycoreutils-python -y</span></span><br></pre></td></tr></table></figure><h4 id="selinux-运行82-非标端口运行"><a href="#selinux-运行82-非标端口运行" class="headerlink" title="selinux 运行82 非标端口运行"></a>selinux 运行82 非标端口运行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# systemctl start httpd</span><br><span class="line">Job for httpd.service failed because the control process exited with error</span><br><span class="line">code.</span><br><span class="line">See &quot;systemctl status httpd.service&quot; and &quot;journalctl -xe&quot; for details.</span><br><span class="line">[root@mars ~]# journalctl -xe ##查看报错信息</span><br><span class="line"># semanage port -a -t PORT_TYPE -p tcp 82  ##提示的解决方案</span><br><span class="line">[root@mars ~]# semanage port -l |grep http</span><br><span class="line">http_cache_port_t tcp 8080, 8118, 8123, 10001-10010</span><br><span class="line">http_cache_port_t udp 3130</span><br><span class="line">http_port_t tcp 80, 81, 443, 488, 8008, 8009, 8443,</span><br><span class="line">9000</span><br><span class="line">pegasus_http_port_t tcp 5988</span><br><span class="line">pegasus_https_port_t tcp 5989</span><br><span class="line">[root@mars ~]# semanage port -a -t http_port_t -p tcp 82 #参考journalctl -xe提示解决方案</span><br><span class="line">[root@mars ~]# semanage port -l |grep http</span><br><span class="line">[root@mars ~]# systemctl start httpd  ##开启httpd</span><br><span class="line">[root@mars ~]# systemctl enable httpd  ##开机自启httpd</span><br></pre></td></tr></table></figure><h4 id="SELINUX类型上下文"><a href="#SELINUX类型上下文" class="headerlink" title="SELINUX类型上下文"></a>SELINUX类型上下文</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">cd</span> /var/www/html/</span><br><span class="line">[root@mars html]# <span class="built_in">ls</span></span><br><span class="line">file1 file2 file3</span><br><span class="line">[root@mars html]# ll -Z</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--. 1 root root unconfined_u:object_r:default_t:s0 14 Nov</span><br><span class="line">26 13:43 file1</span><br><span class="line">-rw-r--r--. 1 root root unconfined_u:object_r:httpd_sys_content_t:s0 14 Nov</span><br><span class="line">26 13:43 file2</span><br><span class="line">-rw-r--r--. 1 root root unconfined_u:object_r:httpd_sys_content_t:s0 14 Nov</span><br><span class="line">26 13:43 file3</span><br><span class="line">[root@mars html]# <span class="built_in">cd</span></span><br><span class="line">[root@mars ~]# curl 127.0.0.1:82/file1</span><br><span class="line">[root@mars ~]# man semanage fcontext</span><br><span class="line">[root@mars ~]# [root@mars ~]# semanage fcontext -m -t httpd_sys_content_t</span><br><span class="line"><span class="string">&quot;/var/www/html/file1&quot;</span></span><br><span class="line">[root@mars ~]# restorecon -Rv /var/www/html/</span><br><span class="line">[root@mars ~]# ll -Z /var/www/html/</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--. 1 root root unconfined_u:object_r:httpd_sys_content_t:s0 14 Nov</span><br><span class="line">26 13:43 file1</span><br><span class="line">-rw-r--r--. 1 root root unconfined_u:object_r:httpd_sys_content_t:s0 14 Nov</span><br><span class="line">26 13:43 file2</span><br><span class="line">-rw-r--r--. 1 root root unconfined_u:object_r:httpd_sys_content_t:s0 14 Nov</span><br><span class="line">26 13:43 file3</span><br><span class="line">[root@mars ~]# curl 127.0.0.1:82/file1</span><br><span class="line">EX200 Testing</span><br></pre></td></tr></table></figure><h4 id="防火墙放行"><a href="#防火墙放行" class="headerlink" title="防火墙放行"></a>防火墙放行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# firewall-cmd --add-port=82/tcp --permanent</span><br><span class="line">success</span><br><span class="line">[root@mars ~]# firewall-cmd --reload</span><br><span class="line">success</span><br><span class="line"><span class="comment">###验证</span></span><br><span class="line">[kiosk@foundation0 ~]$ curl 172.25.250.100:82/file1</span><br><span class="line">EX200 Testing</span><br></pre></td></tr></table></figure><h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><code>Selinux</code>从做题开始必须一直开着,不然容易被机器判定为0分;</li><li><code>firewall</code>必须放行<code>httpd</code>端口;</li><li><code>Selinux</code>联系上下文 <code>file</code>所有文件权限必须一致;</li><li><code>semanage fcontext</code>命令记不准确,可以用<code>man semanage fcontext</code>查看使用样例;</li><li><code>semanage fcontext</code>修改了<code>Selinux</code>文件权限后,必须用<code>restorecon -Rv</code><br><code>/var/www/html/</code>刷新目录生效;</li></ul><hr><h2 id="创建用户帐户"><a href="#创建用户帐户" class="headerlink" title="创建用户帐户"></a>创建用户帐户</h2><p>创建下列用户、组和组成员资格：</p><ul><li>名为 <code>sysmgrs</code> 的组</li><li>用户 <code>natasha</code> ，作为次要组从属于 <code>sysmgrs</code></li><li>用户 <code>harry</code> ，作为次要组还从属于 <code>sysmgrs</code></li><li>用户 <code>sarah</code> ，无权访问系统上的交互式 <code>shell</code> 且不是 <code>sysmgrs</code> 的成员</li><li><code>natasha</code> 、 <code>harry</code> 和 <code>sarah</code> 的密码应当都是 <code>flectrag</code></li></ul><h3 id="解题-3"><a href="#解题-3" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# groupadd sysmgrs</span><br><span class="line">[root@mars ~]# useradd -G sysmgrs natasah </span><br><span class="line">[root@mars ~]# useradd -G sysmgrs harry </span><br><span class="line">[root@mars ~]# useradd -s /sbin/nolgin sarah</span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="string">&quot;flectrag&quot;</span> |passwd --stdin natasha</span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="string">&quot;flectrag&quot;</span> |passwd --stdin harry</span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> <span class="string">&quot;flectrag&quot;</span> |passwd --stdin sarah</span><br><span class="line">检查密码是否设置成功</span><br><span class="line"><span class="comment"># su - natasha</span></span><br><span class="line">$ su - harry</span><br><span class="line">$ su - natasha</span><br><span class="line">$ su - sarah</span><br><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>无权访问系统上的交互式是 <code>/sbin/nologin</code>.</li><li>从<code>root</code> 用户<code>su</code> 到其他用户不需要密码,可以用其他用户<code>su</code>到其他用户检测密码是否正确.</li><li>账户和密码用复制粘贴避免手动输入错误.</li></ul><h2 id="计划任务cron"><a href="#计划任务cron" class="headerlink" title="计划任务cron"></a>计划任务cron</h2><p>题目1：配置 <code>cron</code> 作业，每隔 25 分钟运行以下命令： <code>logger &quot;EX200 in progress&quot;</code>，以用户 <code>natasha</code> 身份运行</p><p>题目2： 每天14:23 分natasha执行 echo “Hi rhcsa”</p><h3 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# systemctl status crond  <span class="comment">#查看服务是否为开机自启状态</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# systemctl <span class="built_in">enable</span> crond <span class="comment">#crond开机自启</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">which</span> logger</span><br><span class="line"></span><br><span class="line">/usr/bin/logger</span><br><span class="line"></span><br><span class="line">[root@mars ~]# crontab -e -u natasha  <span class="comment">#创建natasha定时任务</span></span><br><span class="line"></span><br><span class="line">*/2 * * * * /usr/bin/logger <span class="string">&quot;EX200 in progress&quot;</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# crontab -l -u natasha  <span class="comment">#查看natasha创建的定时任务</span></span><br><span class="line"></span><br><span class="line">*/2 * * * * /usr/bin/logger  <span class="string">&quot;EX200 in progress&quot;</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">tail</span> /var/log/cron <span class="comment">#2分钟查看日志</span></span><br></pre></td></tr></table></figure><h3 id="解题2"><a href="#解题2" class="headerlink" title="解题2"></a>解题2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# systemctl status crond  <span class="comment">#查看服务是否为开机自启状态</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# systemctl <span class="built_in">enable</span> crond <span class="comment">#crond开机自启</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">which</span> <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line">/usr/bin/echo</span><br><span class="line"></span><br><span class="line">[root@mars ~]# crontab -e -u natasha  <span class="comment">#创建natasha定时任务</span></span><br><span class="line"></span><br><span class="line">23 14 * * * /usr/bin/echo “Hi rhcsa”</span><br><span class="line"></span><br><span class="line">[root@mars ~]# crontab -l -u natasha  <span class="comment">#查看natasha创建的定时任务</span></span><br><span class="line"></span><br><span class="line">23 14 * * * /usr/bin/echo  “Hi rhcsa”</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">tail</span> /var/log/cron <span class="comment">#查看日志</span></span><br></pre></td></tr></table></figure><h3 id="crontab文件格式"><a href="#crontab文件格式" class="headerlink" title="crontab文件格式"></a>crontab文件格式</h3><div class="table-container"><table><thead><tr><th>*</th><th>*</th><th>*</th><th>*</th><th>*</th><th></th></tr></thead><tbody><tr><td>Minute</td><td>Hours</td><td>Day-of-Month</td><td>Month</td><td>Day -of-Week</td><td>Command</td></tr><tr><td>分钟</td><td>小时</td><td>日</td><td>月</td><td>周</td><td>命令</td></tr><tr><td>0-59</td><td>0-23</td><td>1-31</td><td>1-12</td><td>0-6</td><td>job</td></tr></tbody></table></div><ul><li>时间： <em>:每</em> /5:每隔分钟 ,:不同的时间段</li><li>-:表示范围</li><li>星期0为星期日</li></ul><h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>一定要检查<code>crond</code>服务是否开启，以及是否开机自启</li><li><code>logger</code>需要用<code>which</code>系统命令的位置</li><li><code>crontab</code> 格式注意</li><li>记得用<code>tail /var/log/cron</code> 检查日志</li></ul><h2 id="创建协作目录"><a href="#创建协作目录" class="headerlink" title="创建协作目录"></a>创建协作目录</h2><p><strong>创建具有以下特征的协作目录</strong> <code>/home/managers</code> <strong>：</strong></p><ul><li><code>/home/managers</code> 的组用权是 <code>sysmgrs</code></li><li>目录应当可被 <code>sysmgrs</code> 的成员读取、写入和访问，但任何其他用户不具这些权限。（当然，root</li><li>用户有权访问系统上的所有文件和目录）</li></ul><p><code>/home/managers</code> 中创建的文件自动将组所有权设置到 <code>sysmgrs</code> 组</p><h3 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# <span class="built_in">mkdir</span> /home/managers</span><br><span class="line"></span><br><span class="line">[root@mars ~]# ll -d /home/managers/</span><br><span class="line"></span><br><span class="line">drwxr-xr-x. 2 root root 6 Nov 26 20:38 /home/managers/</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">chown</span> :sysmgrs /home/managers/</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">chmod</span> 2770 /home/managers/</span><br><span class="line"></span><br><span class="line">[root@mars ~]# ll -d /home/managers/</span><br><span class="line"></span><br><span class="line">drwxrws---. 2 root sysmgrs 6 Nov 26 20:38 /home/managers/</span><br></pre></td></tr></table></figure><h3 id="解题2-1"><a href="#解题2-1" class="headerlink" title="解题2"></a>解题2</h3><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">mkdir</span> /home/managers</span><br></pre></td></tr></table></figure><h4 id="更改目录的属组"><a href="#更改目录的属组" class="headerlink" title="更改目录的属组"></a>更改目录的属组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">chgrp</span> sysmgrs /home/managers/</span><br></pre></td></tr></table></figure><h4 id="查看-home-managers所拥有的权限"><a href="#查看-home-managers所拥有的权限" class="headerlink" title="查看/home/managers所拥有的权限"></a>查看/home/managers所拥有的权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# ll -d /home/managers/ </span><br><span class="line">drwxr-xr-x. 2 root sysmgrs 6 Oct 26 12:12 /home/managers/</span><br></pre></td></tr></table></figure><h4 id="设定目录的权限，目录的访问权限即为x权限rwx-7，自动变成sysmgrs-组用特殊权限2"><a href="#设定目录的权限，目录的访问权限即为x权限rwx-7，自动变成sysmgrs-组用特殊权限2" class="headerlink" title="设定目录的权限，目录的访问权限即为x权限rwx=7，自动变成sysmgrs 组用特殊权限2"></a>设定目录的权限，目录的访问权限即为x权限rwx=7，自动变成sysmgrs 组用特殊权限2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">chmod</span> 2770 /home/managers</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">或者[root@mars ~]# <span class="built_in">chmod</span> 2770 /home/managers/</span><br></pre></td></tr></table></figure><h3 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><code>chown</code> 可以用来更改文件的所有者和所有组，如<code>chown harry:harry /home/</code> ，意为把<code>home</code>的所有者和所有组改成<code>harry</code></li><li><code>chgrp</code> 允许普通用户改变文件所属的组，只要该用户是该组的一员，但不能改变所有者</li><li><code>chmod</code> 控制用户对文件的权限的命令;<code>chmod</code>赋予的高级权限分为:<code>&quot;4&quot;</code>是<code>SUID</code>普通用户提权，普通用户对该文件的所有操作相当于是<code>root</code>权限(只针对二进制、可执行的文件);<code>&quot;2&quot;</code>是<code>SGID</code>获得该程序所属用户组的权限，这个用户组的所有用户在该文件夹下创建的任何一个文件夹或文件它们的群组都会与此目录的群组相同;<code>&quot;1&quot;</code>是<code>SBIT</code>限制用户对文件执行的权限，当用户在该目录下建立文件或目录时，仅有自己与 <code>root</code>才有权力删除。</li><li><code>2770 &quot;2&quot;</code>为<code>sgid</code>,<code>&quot;7&quot;</code>为<code>wrx</code>(<code>w读 + r 写 + x 执行</code>)，<code>&quot;0&quot;</code>为什么权限都没有</li></ul><p>注 意 题 目 要 求 要 不 要 赋 予 高 级 权 限</p><h2 id="配置NTP"><a href="#配置NTP" class="headerlink" title="配置NTP"></a>配置NTP</h2><p>配置您的系统，使其成为 <code>materials.example.com</code> 的 <code>NTP</code> 客户端。（注：<code>materials.example.com 是 classroom.example.com 的 DNS 别名</code>）</p><h3 id="解题-4"><a href="#解题-4" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# yum install  chrony -y</span><br><span class="line">[root@mars ~]# vim /etc/chrony.conf  </span><br><span class="line"> Use public servers from the pool.ntp.org project.</span><br><span class="line"><span class="comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line"><span class="comment">#server 0.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server _gateway iburst  #这行注释掉</span></span><br><span class="line">server materials.example.com iburst <span class="comment">#添加这行</span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# systemctl restart chronyd</span><br><span class="line"></span><br><span class="line">[root@mars ~]# systemctl status chronyd</span><br><span class="line"></span><br><span class="line">[root@mars ~]# chronyc sources</span><br><span class="line"></span><br><span class="line">210 Number of sources = 1</span><br><span class="line"></span><br><span class="line">MS Name/IP address Stratum Poll Reach LastRx Last sample</span><br><span class="line"></span><br><span class="line">============================================================================</span><br><span class="line"></span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">^* classroom.example.com 8 6 17 31 +5277ns[ +58us] +/-</span><br><span class="line"></span><br><span class="line">363us</span><br></pre></td></tr></table></figure><h3 id="注意事项-6"><a href="#注意事项-6" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><p>记得查看<code>chronyd</code>状态</p></li><li><p>如果没有安装<code>chrony</code>，记得<code>yum</code>安装</p></li></ul><h2 id="配置autofs"><a href="#配置autofs" class="headerlink" title="配置autofs"></a>配置autofs</h2><p>配置 <code>autofs</code> ，以按照如下所述自动挂载远程用户的主目录：</p><ul><li><code>materials.example.com ( 172.25.254.254 ) NFS</code> 导出 <code>/rhome</code> 到您的系统。此文件系统包含</li><li>为用户 <code>remoteuser1</code> 预配置的主目录</li><li><code>remoteuser1</code> 的主目录是 <code>materials.example.com:/rhome/remoteuser1</code></li><li><code>remoteuser1</code> 的主目录应自动挂载到本地 <code>/rhome</code> 下的 <code>/rhome/remoteuser1</code></li><li>主目录必须可供其用户 <code>写入</code></li><li><code>remoteuser1</code> 的密码是 <code>flectrag</code></li></ul><h3 id="解题-5"><a href="#解题-5" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">第一步：安装autofs</span><br><span class="line">[root@mars ~]# yum -y install autofs</span><br><span class="line">第二步：查找autofs文件</span><br><span class="line">[root@mars ~]# rpm -qc autofs</span><br><span class="line">/etc/auto.master</span><br><span class="line">/etc/auto.misc</span><br><span class="line">/etc/auto.net</span><br><span class="line">/etc/auto.smb</span><br><span class="line">/etc/autofs.conf</span><br><span class="line">/etc/autofs_ldap_auth.conf</span><br><span class="line">/etc/sysconfig/autofs</span><br><span class="line">/usr/lib/systemd/system/autofs.service</span><br><span class="line">第三步：编写配置文件</span><br><span class="line">[root@mars ~]# vim /etc/auto.master</span><br><span class="line">增加上层接口目录</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">/misc   /etc/auto.misc</span><br><span class="line">/rhome /etc/auto.rhome</span><br><span class="line">第四步：编写子配置文件</span><br><span class="line">[root@mars ~]# <span class="built_in">cp</span> /etc/auto.misc /etc/auto.rhome</span><br><span class="line">[root@mars ~]# vim /etc/auto.rhome</span><br><span class="line"><span class="comment">#cd             -fstype=iso9660,ro,nosuid,nodev :/dev/cdrom#注释掉此行</span></span><br><span class="line">remoteuser1     -fstype=nfs,vers=4,rw   materials.example.com:/rhome/remoteuser</span><br><span class="line">第五步：设置开机自启动</span><br><span class="line">[root@mars ~]# systemctl restart autofs.service</span><br><span class="line">[root@mars ~]# systemctl <span class="built_in">enable</span> autofs.service</span><br><span class="line">第六步：测试是否成功，远程登录</span><br><span class="line">[root@mars ~]# ssh remoteuser1@mars</span><br><span class="line">remoteuser1@mars<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Activate the web console with: systemctl enable --now cockpit.socket</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This system is not registered to Red Hat Insights. See https://cloud.redhat.com/</span></span><br><span class="line"><span class="string">To register this system, run: insights-client --register</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Wed Oct 26 12:53:54 2022 from 172.25.250.100</span></span><br><span class="line"><span class="string">[remoteuser1@mars ~]$ pwd</span></span><br><span class="line"><span class="string">/rhome/remoteuser1</span></span><br></pre></td></tr></table></figure><h3 id="注意事项-7"><a href="#注意事项-7" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>注意<code>autofs</code>服务是否安装没安装<code>yum</code>安装</li></ul><h2 id="配置-var-tmp-fstab-权限"><a href="#配置-var-tmp-fstab-权限" class="headerlink" title="配置/var/tmp/fstab 权限"></a>配置/var/tmp/fstab 权限</h2><p>将文件 <code>/etc/fstab</code> 复制到 <code>/var/tmp/fstab</code> 。配置 <code>/var/tmp/fstab</code> 的权限以满足如下条件：</p><ul><li>文件 <code>/var/tmp/fstab</code> 自 <code>root</code> 用户所有</li><li>文件 <code>/var/tmp/fstab</code> 属于组 <code>root</code></li><li>文件 <code>/var/tmp/fstab</code> 应不能被任何人执行</li><li>用户 <code>natasha</code> 能够读取和写入 <code>/var/tmp/fstab</code></li><li>用户 <code>harry</code> 无法写入或读取 <code>/var/tmp/fstab</code></li><li>所有其他用户（当前或未来）能够读取 <code>/var/tmp/fstab</code></li></ul><h3 id="解题-6"><a href="#解题-6" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# <span class="built_in">cp</span> /etc/fstab /var/tmp/fstab</span><br><span class="line"></span><br><span class="line">[root@mars ~]# ll /var/tmp/fstab</span><br><span class="line"></span><br><span class="line">-rw-r--r--. 1 root root 427 Nov 27 09:29 /var/tmp/fstab</span><br><span class="line"></span><br><span class="line">[root@mars ~]# man setfacl</span><br><span class="line"></span><br><span class="line">[root@mars ~]# setfacl -m u:natasha:rw- /var/tmp/fstab</span><br><span class="line"></span><br><span class="line">[root@mars ~]# setfacl -m u:harry:- /var/tmp/fstab</span><br><span class="line"></span><br><span class="line">[root@mars ~]# getfacl /var/tmp/fstab</span><br><span class="line"></span><br><span class="line">getfacl: Removing leading <span class="string">&#x27;/&#x27;</span> from absolute path names</span><br><span class="line"></span><br><span class="line"><span class="comment"># file: var/tmp/fstab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># group: root</span></span><br><span class="line"></span><br><span class="line">user::rw-</span><br><span class="line"></span><br><span class="line">user:natasha:rw-</span><br><span class="line"></span><br><span class="line">user:harry:---</span><br><span class="line"></span><br><span class="line">group::r--</span><br><span class="line"></span><br><span class="line">mask::rw-</span><br><span class="line"></span><br><span class="line">other::r--</span><br></pre></td></tr></table></figure><h3 id="注意事项-8"><a href="#注意事项-8" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>考点<code>setfacl</code>与<code>getfacl</code>的使用，如果不知道记得<code>man</code>下</li></ul><h2 id="配置用户帐户"><a href="#配置用户帐户" class="headerlink" title="配置用户帐户"></a>配置用户帐户</h2><p>配置用户 <code>manalo</code> ，其用户 <code>ID</code> 为 <code>3533</code> 。此用户的密码应当为 <code>flectrag</code> 。</p><h3 id="解题-7"><a href="#解题-7" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# useradd -u 3533 manalo</span><br><span class="line">[root@mars ~]# <span class="built_in">echo</span> flectrag |passwd --stdin manalo</span><br><span class="line">Changing password <span class="keyword">for</span> user manalo.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@mars ~]# <span class="built_in">id</span> manalo</span><br><span class="line">uid=3533(manalo) gid=3533(manalo) <span class="built_in">groups</span>=3533(manalo)</span><br></pre></td></tr></table></figure><h3 id="注意事项-9"><a href="#注意事项-9" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>添加用户名并指定<code>ID</code>的命令是 <code>useradd -u ID name</code>.</li></ul><h2 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h2><p>查找当 <code>jacques</code> 所有的所有文件并将其副本放入 <code>/root/findfiles</code> 目录</p><h3 id="解题-8"><a href="#解题-8" class="headerlink" title="解题"></a>解题</h3><h4 id="第一步：查看用户和目录是否存在"><a href="#第一步：查看用户和目录是否存在" class="headerlink" title="第一步：查看用户和目录是否存在"></a>第一步：查看用户和目录是否存在</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# <span class="built_in">id</span> jacques uid=1003(jacques) gid=1003(jacques) <span class="built_in">groups</span>=1003(jacques)</span><br><span class="line"></span><br><span class="line"> [root@mars ~]# ll -d /root/findfiles </span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span>: cannot access <span class="string">&#x27;/root/findfiles&#x27;</span>: No such file or directory</span><br></pre></td></tr></table></figure><h4 id="第二步：创建目录"><a href="#第二步：创建目录" class="headerlink" title="第二步：创建目录"></a>第二步：创建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果发现目录不存在，于是创建目录 </span></span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">mkdir</span> /root/findfiles</span><br></pre></td></tr></table></figure><h4 id="第三步：查找文件并放入新建的目录中"><a href="#第三步：查找文件并放入新建的目录中" class="headerlink" title="第三步：查找文件并放入新建的目录中"></a>第三步：查找文件并放入新建的目录中</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# find / -user jacques -<span class="built_in">exec</span> <span class="built_in">cp</span> -a &#123;&#125; /root/findfiles \;</span><br></pre></td></tr></table></figure><h4 id="第四步：检查文件是否查找成功"><a href="#第四步：检查文件是否查找成功" class="headerlink" title="第四步：检查文件是否查找成功"></a>第四步：检查文件是否查找成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@mars ~]# ll /root/findfiles/ </span><br><span class="line"></span><br><span class="line">total 0</span><br><span class="line"></span><br><span class="line"> -rw-r--r--. 1 jacques root    0 Oct 12 10:12 gamelan </span><br><span class="line"></span><br><span class="line">-rw-r--r--. 1 jacques jacques 0 Oct 12 10:12 jacques</span><br><span class="line"></span><br><span class="line"> -rw-r--r--. 1 jacques root    0 Oct 12 10:12 libWedgeit.so.1.2.3</span><br></pre></td></tr></table></figure><h3 id="注意事项-10"><a href="#注意事项-10" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>记得查看题目中所要求存放的目录是否存在 ，不存在需要<code>mkdir</code>创建一个。</li><li>本题考点 <code>linux</code> 命令： <code>-exec</code> 的使用 ，最后一定记得<code>\</code>。</li></ul><h2 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h2><p>查找文件 <code>/usr/share/xml/iso-codes/iso_639_3.xml</code> 中包含字符串 <code>ng</code> 的所有行。将所有这些行的副本按原始顺序放在文件 <code>/root/list</code> 中。 <code>/root/list</code> 不得包含空行，且所有行必须是<code>/usr/share/xml/iso-codes/iso_639_3.xml</code> 中原始行的确切副本。</p><h3 id="解题-9"><a href="#解题-9" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# grep ng /usr/share/xml/iso-codes/iso_639_3.xml |grep -v <span class="string">&#x27;^$&#x27;</span> \&gt;/root/list</span><br><span class="line"></span><br><span class="line">[root@mars ~]# <span class="built_in">cat</span> list |<span class="built_in">wc</span></span><br><span class="line"></span><br><span class="line">2289 5100 67565</span><br></pre></td></tr></table></figure><h3 id="注意事项-11"><a href="#注意事项-11" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>题目中要求不得包含空行，所以必须跟上管道符 然后<code>grep -v &#39;^$&#39;</code></li></ul><h2 id="创建存档"><a href="#创建存档" class="headerlink" title="创建存档"></a>创建存档</h2><p>创建一个名为 <code>/root/backup.tar.gz</code> 的 <code>tar</code> 存档，其应包含 <code>/usr/local</code> 的 <code>tar</code> 存档，其应包含</p><p><code>/usr/local</code> 的内容。该 <code>tar</code> 存档必须使用 <code>gzip</code> 进行压缩。</p><h3 id="解题-10"><a href="#解题-10" class="headerlink" title="解题"></a>解题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">[root@mars ~]# tar zcvf /root/backup.tar.gz /usr/local/</span><br><span class="line"></span><br><span class="line">[root@mars ~]# file backup.tar.gz</span><br><span class="line"></span><br><span class="line">backup.tar.gz: gzip compressed data, last modified: Sun Nov 27 01:53:30 2022,</span><br><span class="line"></span><br><span class="line">from Unix, original size 40960</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 考试认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网-Clash 使用教程</title>
      <link href="/2023/02/11/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-Clash%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/02/11/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-Clash%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>具有身份验证支持的本地 <code>HTTP/HTTPS/SOCKS</code> 服务器</li><li><code>Shadowsocks(R)、VMess、Trojan、Snell、SOCKS5、HTTP(S)</code> 出站支持</li><li>内置<a href="https://www.rfc-editor.org/rfc/rfc3089">假 IP</a> <code>DNS</code> 服务器，旨在最大限度地减少 <code>DNS</code> 污染攻击的影响。支持 <code>DoH/DoT</code> 上游。</li><li>基于<code>域、GEOIP、IP-CIDR</code> 或进程名称的规则将数据包路由到不同的目的地</li><li>代理组允许用户实施强大的规则。支持自动回退、负载均衡或基于关闭延迟自动选择代理</li><li>远程提供商，允许用户远程获取代理列表而不是在配置中硬编码</li><li>透明代理：使用自动路由表/规则管理重定向 <code>TCP</code> 和 <code>TProxy TCP/UDP</code></li><li>通过全面的 <code>HTTP RESTful API</code> 控制器进行热重载</li></ul><h2 id="安装Clash-VPN客户端"><a href="#安装Clash-VPN客户端" class="headerlink" title="安装Clash VPN客户端"></a>安装Clash VPN客户端</h2><p>首先需要在自己的设备上安装<code>Clash VPN</code>客户端。<code>Clash VPN</code>支持多个操作系统，例如<code>Windows</code>、<code>macOS</code>、<code>Linux</code>、<code>Android</code>和<code>iOS</code>。你可以在官方网站<a href="https://github.com/Dreamacro/clash/releases下载`Clash">https://github.com/Dreamacro/clash/releases下载`Clash</a> VPN<code>的最新版本。下载完成后，按照说明安装并启动</code>Clash VPN`客户端。</p><h2 id="配置Clash-VPN"><a href="#配置Clash-VPN" class="headerlink" title="配置Clash VPN"></a>配置Clash VPN</h2><p>在<code>Clash VPN</code>客户端中，配置文件是非常关键的部分。<code>Clash VPN</code>通过配置文件来确定<code>VPN</code>连接的规则和行为。在配置文件中，你可以设置<code>代理服务器</code>、<code>代理端口</code>、<code>协议</code>、<code>自定义规则</code>和<code>插件</code>等。</p><p><code>Clash VPN</code>提供了多种配置文件格式，例如<code>YAML</code>和<code>JSON</code>。你可以选择你熟悉的格式来编写配置文件。以下是一个简单的<code>YAML</code>格式的配置文件示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">proxies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;proxy&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">ss</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">&quot;server_address&quot;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">1234</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">&quot;aes-256-gcm&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">direct</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;reject&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">reject</span></span><br><span class="line"><span class="attr">proxy-groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;global&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">proxy</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">direct</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;default&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">global</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">reject</span></span><br><span class="line"><span class="attr">rule-providers:</span></span><br><span class="line">  <span class="attr">custom-rules:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://example.com/clash_rules.yaml&quot;</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,custom-rules,Global,reject</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在这个配置文件中，我们定义了三个代理：一个<code>SS代理</code>，一个<code>直连代理</code>和一个<code>拒绝代理</code>。我们还定义了两个代理组：一个全局代理组和一个默认代理组。我们还添加了一个自定义规则提供者，它从一个外部URL加载规则文件。最后，我们使用规则集指令来将规则应用到默认代理组。</p><p>当然，以上是一个简单的配置示例，你可以根据自己的需求来编写配置文件。</p><h2 id="启动VPN连接"><a href="#启动VPN连接" class="headerlink" title="启动VPN连接"></a>启动VPN连接</h2><p>在<code>Clash VPN</code>客户端中，你可以通过点击“启动”按钮来启动<code>VPN</code>连接。在连接成功后，你可以访问被封锁的网站或应用程序，同时也能够更加安全地上网。</p><h2 id="监控VPN连接"><a href="#监控VPN连接" class="headerlink" title="监控VPN连接"></a>监控VPN连接</h2><p><code>Clash VPN</code>客户端还提供了监控功能，你可以查看<code>VPN</code>连接的状态和实时流量。在<code>Clash VPN</code>客户端中，你可以在“监控”标签页中查看当前<code>VPN</code>连接的状态、连接时间、上传和下载速度等信息。你还可以通过点击“流量图表”按钮来查看<code>VPN</code>连接的流量使用情况。，你可以在“监控”标签页中查看当前<code>VPN</code>连接的状态、连接时间、上传和下载速度等信息。你还可以通过点击“流量图表”按钮来查看<code>VPN</code>连接的流量使用情况。</p><h2 id="更新自定义规则"><a href="#更新自定义规则" class="headerlink" title="更新自定义规则"></a>更新自定义规则</h2><p><code>Clash VPN</code>允许用户自定义规则来控制<code>VPN</code>连接的行为。在配置文件中，你可以设置自定义规则提供者，并从一个外部<code>URL</code>加载规则文件。当你需要更新规则文件时，你只需要编辑规则文件，然后重新启动<code>Clash VPN客户</code>端即可。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p><code>Clash VPN</code>是一款功能强大、灵活多变的<code>VPN</code>客户端，它可以帮助用户绕过网络封锁，保护隐私和安全。本文介绍了<code>Clash VPN</code>的安装、配置和使用方法，希望对读者有所帮助。如果你想深入了解<code>Clash VPN</code>，可以查阅官方文档和社区资料。</p>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 软件分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Clash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于CentOS编译部署RabbitMQ</title>
      <link href="/2023/02/03/%E5%9F%BA%E4%BA%8ECentOS%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2RabbitMQ/"/>
      <url>/2023/02/03/%E5%9F%BA%E4%BA%8ECentOS%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2RabbitMQ/</url>
      
        <content type="html"><![CDATA[<p><code>RabbitMQ</code>使用<code>Erlang</code>语言编写服务器端，并支持多种客户端，如<code>Python</code>、<code>Ruby</code>、<code>.NET</code>、<code>Java</code>、<code>JMS</code>、<code>C</code>、<code>PHP</code>、<code>ActionScript</code>、<code>XMPP</code>和 <code>STOMP</code>，同时也支持<code>AJAX</code>。</p><h1 id="安装erlang"><a href="#安装erlang" class="headerlink" title="安装erlang"></a>安装erlang</h1><p><strong>1.安装erlang所需要的依赖包</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@nues ~]</span><span class="comment"># yum install -y make gcc gcc-c++ m4 openssl openssl-devel ncurses-devel unixODBC unixODBC-devel java java-devel</span></span><br></pre></td></tr></table></figure><p><strong>2.下载erlang安装包</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># wget http:<span class="comment">//erlang.org/download/otp_src_21.1.tar.gz</span></span></span><br></pre></td></tr></table></figure><p><strong>3.解压erlang安装包</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># tar -zxvf otp_src_21.1.tar.gz</span></span><br></pre></td></tr></table></figure><p><strong>4.进入erlang安装包的解压路径，并为erlang创建一个新的目录</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># cd otp_src_21.1</span></span><br><span class="line">[<span class="meta">root@nues otp_src_21.1</span>]<span class="meta"># mkdir -p /usr/local/erlang</span></span><br></pre></td></tr></table></figure><p><strong>5.编译并安装erlang</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues otp_src_21.1</span>]<span class="meta"># ./configure --prefix=/usr/local/erlang</span></span><br><span class="line">[<span class="meta">root@nues otp_src_21.1</span>]<span class="meta"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p><strong>6.为erlang配置环境变量</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@nues</span> otp_src_21<span class="number">.1</span>]# echo <span class="string">&#x27;export PATH=$PATH:/usr/local/erlang/bin&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure><p><strong>7.使环境变量立即生效</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues otp_src_21.1</span>]<span class="meta"># source /etc/profile</span></span><br><span class="line">运行以下命令，返回系统的/root目录，然后查看erlang版本，确认是否安装成功。</span><br><span class="line">[<span class="meta">root@nues otp_src_21.1</span>]<span class="meta"># cd</span></span><br><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># erl -version</span></span><br><span class="line">Erlang (SMP,ASYNC_THREADS,HIPE) (BEAM) emulator version <span class="number">10.1</span></span><br><span class="line">表示erlang已成功安装</span><br></pre></td></tr></table></figure><h1 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h1><p><strong>1.下载RabbitMQ安装包</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># wget https:<span class="comment">//github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.8/rabbitmq-server-generic-unix-3.7.8.tar.xz</span></span></span><br></pre></td></tr></table></figure><p><strong>2.解压RabbitMQ安装包</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># tar -xvf rabbitmq-server-generic-unix-3.7.8.tar.xz</span></span><br></pre></td></tr></table></figure><p><strong>RabbitMQ配置环境变量</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@nues</span> ~]# echo <span class="string">&#x27;export PATH=$PATH:/root/rabbitmq_server-3.7.8/sbin&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure><p><strong>3.使环境变量立即生效</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># source /etc/profile</span></span><br></pre></td></tr></table></figure><p><strong>4.配置RabbitMQ</strong><br><strong>4.1启动RabbitMQ并后台运行</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># rabbitmq-server -detached</span></span><br></pre></td></tr></table></figure><p><strong>4.2启动RabbitMQ监控插件</strong></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@nues</span> ~]<span class="comment"># rabbitmq-plugins enable rabbitmq_management</span></span><br><span class="line"></span><br><span class="line">如果您需要关闭RabbitMQ监控插件，可以运行<span class="string">`rabbitmq-plugins disable rabbitmq_management`</span>命令</span><br><span class="line">为保证数据安全，建议您运行以下命令，<span class="string">`删除默认用户`</span></span><br><span class="line">RabbitMQ默认的账号用户名和密码都是<span class="string">`guest`</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@nues</span> ~]<span class="comment"># rabbitmqctl delete_user guest</span></span><br></pre></td></tr></table></figure><p><strong>4.3RabbitMQ管理员用户</strong><br><strong>运行以下命令，创建一个新用户</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># rabbitmqctl add_user <span class="string">&lt;用户名&gt;</span> <span class="string">&lt;密码&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>其中，<code>&lt;用户名&gt;</code>和<code>&lt;密码&gt;</code>为您自定义的信息</strong><br><strong>4.4将创建的新用户设置为管理员</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># rabbitmqctl set_user_tags <span class="string">&lt;用户名&gt;</span> administrator</span></span><br></pre></td></tr></table></figure><p><strong>4.5赋予新创建的用户所有权限</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># rabbitmqctl set_permissions -p / <span class="string">&lt;用户名&gt;</span> <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span></span></span><br></pre></td></tr></table></figure><p><strong>5.测试安装</strong><br><strong>浏览器访问地址<code>IP:15672</code></strong><br><a href="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/9845938161/p39377.png"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ff4ca2b19994fc3a92a559507388b0d~tplv-k3u1fbpfcp-zoom-1.image" alt="mq"></a></p><p><a href="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/9845938161/p39377.png">mq</a></p><p><strong>6.登录</strong><br><strong>输入已创建的<code>RabbitMQ</code>管理员用户和密码，单击<code>Login</code>，进入<code>RabbitMQ</code>管理界面<br><code>RabbitMQ</code>管理界面展示信息如下所示</strong><br><a href="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/9845938161/p39379.png"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5129244f5de94365b8495621d6e37222~tplv-k3u1fbpfcp-zoom-1.image" alt="mq管理界面"></a></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker环境搭建</title>
      <link href="/2023/02/01/Docker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/02/01/Docker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><code>Docker</code> 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 <code>Linux</code>或<code>Windows</code> 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。<code>Docker</code> 是一个开源的应用级别的虚拟化工具，可以将任何应用包装在<code>LXC容器</code>中运行。</p><h1 id="操作系统要求"><a href="#操作系统要求" class="headerlink" title="操作系统要求"></a>操作系统要求</h1><p>要安装 <code>Docker</code> 引擎，您需要 <code>CentOS 7 或 8</code> 的维护版本。不支持或测试存档版本。</p><p>该<code>centos-extras库</code>必须启用。默认情况下启用此存储库，但如果您已禁用它，则需要 重新启用它。</p><p><code>overlay2</code>推荐使用存储驱动。</p><h1 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h1><p>旧版本的 <code>Docker</code> 被称为<code>docker</code>或d<code>ocker-engine</code>。如果安装了这些，请卸载它们以及相关的依赖项。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@nues ~]</span><span class="comment"># yum remove docker \</span></span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h1 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h1><p><strong>1.首先安装 Docker 必要依赖包 ：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br></pre></td></tr></table></figure><p><strong>2.由于自带 <code>yum</code> 没有 <code>Docker-CE</code> 所以我们需要先增加 <code>docker repo</code>(官方源国内访问不到，添加阿里云的源)：</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># yum-config-manager --add-repo http:<span class="comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></span><br></pre></td></tr></table></figure><p><strong>3.用 yum 安装 Docker：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># yum install -y docker-ce</span></span><br></pre></td></tr></table></figure><p><strong>4.直接yum安装，安装成功后查看版本</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># docker -v</span></span><br></pre></td></tr></table></figure><p><strong>5.启动docker</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># systemctl start docker</span></span><br></pre></td></tr></table></figure><p><strong>6.设置开机启动</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># systemctl enable docker</span></span><br></pre></td></tr></table></figure><p><strong>7.查看docker状态</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># systemctl status docker</span></span><br></pre></td></tr></table></figure><p><strong>8.配置镜像加速器</strong><br>因为国内访问<code>Docker Hub</code>较慢,可以使用腾讯云提供的国内镜像源,加速访问<code>Docker Hub</code>（采用阿里云提供镜像源）</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@nues</span> ~]<span class="comment"># mkdir -p /etc/docker</span></span><br><span class="line">[root<span class="variable">@nues</span> ~]<span class="comment"># tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://自已的编码.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://自已的编码.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root<span class="variable">@nues</span> ~]<span class="comment"># systemctl daemon-reload  #重新加载服务配置文件</span></span><br><span class="line">[root<span class="variable">@nues</span> ~]<span class="comment"># systemctl restart docker #重启服务</span></span><br></pre></td></tr></table></figure><h1 id="验证与应用"><a href="#验证与应用" class="headerlink" title="验证与应用"></a>验证与应用</h1><p><strong>1.下载一个官方的 hello-world 镜像到本地</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]<span class="meta"># docker run hello-world</span></span><br><span class="line">Unable to find image <span class="string">&#x27;hello-world:latest&#x27;</span> locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line"><span class="number">2</span>db29710123e: Pull complete </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>2.下载好的镜像就会出现在镜像列表里</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># docker images</span></span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">hello-world   latest    feb5d9fea6a5   <span class="number">26</span> hours ago   <span class="number">13.3</span>kB</span><br></pre></td></tr></table></figure><p><strong>3.运行容器</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@nues ~</span>]<span class="meta"># docker run hello-world</span></span><br><span class="line"></span><br><span class="line">Hello <span class="keyword">from</span> Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>4.查看所有的容器信息</strong></p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES</span><br><span class="line"><span class="number">6</span>a0df7b2d4eb   hello-world   <span class="string">&quot;/hello&quot;</span>   <span class="number">44</span> seconds ago   Exited (<span class="number">0</span>) <span class="number">44</span> seconds ago             intelligent_franklin</span><br><span class="line">部分参数释义：</span><br><span class="line">.CONTAINER ID  容器ID</span><br><span class="line">.Image 镜像ID</span><br><span class="line">.COMMAND  指令</span><br><span class="line">.Created 创建容器的时间点.</span><br><span class="line">.Ports 暴露的端口.</span><br><span class="line">.Status 容器状态.</span><br><span class="line">.Names 容器名称.</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>参考文章:<a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a></p>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据备份及还原 (三) -binlog2sql</title>
      <link href="/2023/01/19/MySQL%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F%20(%E4%B8%89)%20-binlog2sql/"/>
      <url>/2023/01/19/MySQL%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F%20(%E4%B8%89)%20-binlog2sql/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>MySQL</code>是一种非常流行的开源关系型数据库管理系统，用于存储和管理各种类型的数据。但是，任何一个数据库都可能会出现数据丢失或者损坏的情况，因此备份和恢复数据是<code>MySQL</code>数据库管理员的必备技能之一。在本文中，我们将介绍<code>MySQL</code>备份和恢复工具<code>binlog2sql</code>的使用方法。</p><h2 id="什么是binlog2sql？"><a href="#什么是binlog2sql？" class="headerlink" title="什么是binlog2sql？"></a>什么是binlog2sql？</h2><p><code>binlog2sql</code>是一种<code>MySQL</code>备份和恢复工具，它可以将<code>MySQL</code>二进制日志文件<code>（binlog）</code>转换为可读的<code>SQL</code>语句。这使得用户可以轻松地将<code>MySQL</code>数据库还原到特定的时间点或者备份。</p><h2 id="如何使用binlog2sql？"><a href="#如何使用binlog2sql？" class="headerlink" title="如何使用binlog2sql？"></a>如何使用binlog2sql？</h2><p>下面是使用<code>binlog2sql</code>备份和恢复<code>MySQL</code>数据库的步骤：</p><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><h4 id="登录到MySQL服务器并运行以下命令以启用binlog"><a href="#登录到MySQL服务器并运行以下命令以启用binlog" class="headerlink" title="登录到MySQL服务器并运行以下命令以启用binlog"></a>登录到MySQL服务器并运行以下命令以启用binlog</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL binlog_format = &#x27;ROW&#x27;;</span><br><span class="line">mysql&gt; FLUSH LOGS;</span><br></pre></td></tr></table></figure><h4 id="运行以下命令以查找最新的二进制日志文件"><a href="#运行以下命令以查找最新的二进制日志文件" class="headerlink" title="运行以下命令以查找最新的二进制日志文件"></a>运行以下命令以查找最新的二进制日志文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW MASTER STATUS;</span><br></pre></td></tr></table></figure><h4 id="复制最新的二进制日志文件到安全的位置"><a href="#复制最新的二进制日志文件到安全的位置" class="headerlink" title="复制最新的二进制日志文件到安全的位置"></a>复制最新的二进制日志文件到安全的位置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp /var/lib/mysql/mysql-bin.000001 /data/backup/</span><br></pre></td></tr></table></figure><h4 id="运行以下命令以使用binlog2sql将二进制日志文件转换为SQL语句"><a href="#运行以下命令以使用binlog2sql将二进制日志文件转换为SQL语句" class="headerlink" title="运行以下命令以使用binlog2sql将二进制日志文件转换为SQL语句"></a>运行以下命令以使用binlog2sql将二进制日志文件转换为SQL语句</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ binlog2sql /data/backup/mysql-bin.000001 &gt; /data/backup/mysql-bin.000001.sql</span><br></pre></td></tr></table></figure><h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><h4 id="在MySQL服务器上创建一个新的空数据库"><a href="#在MySQL服务器上创建一个新的空数据库" class="headerlink" title="在MySQL服务器上创建一个新的空数据库"></a>在MySQL服务器上创建一个新的空数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE DATABASE db_name;</span><br></pre></td></tr></table></figure><h4 id="使用以下命令导入备份数据"><a href="#使用以下命令导入备份数据" class="headerlink" title="使用以下命令导入备份数据"></a>使用以下命令导入备份数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p db_name &lt; /data/backup/mysql-bin.000001.sql</span><br></pre></td></tr></table></figure><h4 id="检查数据是否成功导入"><a href="#检查数据是否成功导入" class="headerlink" title="检查数据是否成功导入"></a>检查数据是否成功导入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; USE db_name;</span><br><span class="line">mysql&gt; SHOW TABLES;</span><br></pre></td></tr></table></figure><h2 id="binlog2sql的优点"><a href="#binlog2sql的优点" class="headerlink" title="binlog2sql的优点"></a>binlog2sql的优点</h2><p><code>binlog2sql</code>的主要优点是它能够将<code>MySQL</code>二进制日志文件转换为可读的<code>SQL</code>语句，使得备份和恢复<code>MySQL</code>数据库变得更加容易。此外，它可以避免由于<code>MySQL</code>版本升级而导致备份和恢复过程出现兼容性问题。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>备份和恢复<code>MySQL</code>数据库是数据库管理员的一项重要任务。<code>binlog2sql</code>是一种非常有用的工具，它可以将<code>MySQL</code>二进制日志文件转换为可读的<code>SQL</code>语句，使得备份和恢复过程更加简单和可靠。如果您是<code>MySQL</code>数据库管理员，建议您掌握并使用<code>binlog2sql</code>工具。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> binlog2sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 systemd 中使用控制组管理资源</title>
      <link href="/2023/01/18/%E5%9C%A8%20systemd%20%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%8E%A7%E5%88%B6%E7%BB%84%E7%AE%A1%E7%90%86%E8%B5%84%E6%BA%90/"/>
      <url>/2023/01/18/%E5%9C%A8%20systemd%20%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%8E%A7%E5%88%B6%E7%BB%84%E7%AE%A1%E7%90%86%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>作为一个系统管理员，没有事情比意外地耗尽计算资源让我更觉得沮丧。我曾不止一次填满了一个分区的所有可用磁盘空间、耗尽内存、以及没有足够的 <code>CPU</code> 时间在合理的时间内处理我的任务。资源管理是系统管理员最重要的工作之一。</p><p>资源管理的关键是保证所有的进程能够相对公平的访问需要的系统资源。资源管理还包括确保在需要时添加内存、硬盘驱动器空间、还有 <code>CPU</code> 处理能力；或者在无法添加时限制资源的使用。此外，应该阻止独占系统资源的用户，无论其是否有意。</p><p>系统管理员可以通过一些工具监控和管理不同的系统资源。例如，<code>top</code> 和类似的工具允许你监控内存、<code>I/O</code>、存储（磁盘、SSD 等）、网络、交换空间、<code>CPU</code> 的用量等。这些工具，尤其是那些以 <code>CPU</code> 为中心的工具，大部分基于以运行的进程为基本单位进行控制的模型。它们最多只是提供了一种方式来调整 nice 数字，从而修改优先级，或者杀死一个运行的进程。</p><p><code>SystemV</code> 环境中基于传统的资源管理的其他工具，由 <code>/etc/security/limits.conf</code> 文件和 <code>/etc/security/limits.d</code> 中的本地配置文件控制。资源可以按照用户或组以一种相对粗糙但实用的方式限制。可以管理的资源包括内存的各个方面、每日的总 <code>CPU</code> 时间、数据总量、优先级、<code>nice 数字</code>、并发登录的数量、进程数、文件大小的最大值等。</p><h2 id="使用控制组管理进程"><a href="#使用控制组管理进程" class="headerlink" title="使用控制组管理进程"></a>使用控制组管理进程</h2><p><code>systemd</code> 和 <code>SystemV</code> 之间的一个主要差异是管理进程的方式。<code>SystemV</code> 将每个进程视作一个独立的实体。<code>systemd</code> 将相关的进程集中到一个控制组，简写做 <code>cgroup</code>，并将控制组作为一个整体管理系统资源。这意味着资源能够基于应用管理，而不是由组成应用的各个进程来管理。</p><p>控制组的控制单元称作切片单元<code>slice unit</code>。切片是允许 <code>systemd</code> 以树状格式控制程序次序，从而简化管理的概念化。</p><hr><h2 id="查看控制组"><a href="#查看控制组" class="headerlink" title="查看控制组"></a>查看控制组</h2><p>我将从一些允许你查看不同类型控制组信息的命令开始。 <code>systemctl status &lt;service&gt;</code> 命令显示一个特定服务的切片信息，包括服务的切片。这个例子展示了 <code>at</code> 守护进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@testvm1 ~]# systemctl status atd.service</span><br><span class="line">● atd.service - Deferred execution scheduler</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/atd.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Wed 2020-09-23 12:18:24 EDT; 1 day 3h ago</span><br><span class="line">       Docs: man:atd(8)</span><br><span class="line">   Main PID: 1010 (atd)</span><br><span class="line">      Tasks: 1 (limit: 14760)</span><br><span class="line">     Memory: 440.0K</span><br><span class="line">        CPU: 5ms</span><br><span class="line">     CGroup: /system.slice/atd.service</span><br><span class="line">             └─1010 /usr/sbin/atd -f</span><br><span class="line">Sep 23 12:18:24 testvm1.both.org systemd[1]: Started Deferred execution scheduler.</span><br><span class="line">[root@testvm1 ~]#</span><br></pre></td></tr></table></figure><p>这是一个我感到 <code>systemd</code> 比 <code>SystemV</code> 和旧的初始化程序更好用的原因的绝佳示例。这里的信息远比 <code>SystemV</code> 能够提供的丰富。<code>CGroup</code> 项包括的层级结构中，<code>system.slice</code> 是 <code>systemd（PID 1）</code>，<code>atd.service</code> 在下一层，是 <code>system.slice</code> 的一部分。<code>CGroup</code> 项的第二行还显示了进程 <code>ID（PID）</code>和启动守护进程使用的命令。</p><p>systemctl 命令可以列出多个控制组项，—all 参数列出所有的切片，包括当前没有激活的切片：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@testvm1 ~]# systemctl -t slice --all</span><br><span class="line">  UNIT                             LOAD   ACTIVE   SUB    DESCRIPTION                    </span><br><span class="line">  -.slice                          loaded active   active Root Slice                      </span><br><span class="line">  system-getty.slice               loaded active   active system-getty.slice              </span><br><span class="line">  system-lvm2\x2dpvscan.slice      loaded active   active system-lvm2\x2dpvscan.slice    </span><br><span class="line">  system-modprobe.slice            loaded active   active system-modprobe.slice          </span><br><span class="line">  system-sshd\x2dkeygen.slice      loaded active   active system-sshd\x2dkeygen.slice    </span><br><span class="line">  system-systemd\x2dcoredump.slice loaded inactive dead   system-systemd\x2dcoredump.slice</span><br><span class="line">  system-systemd\x2dfsck.slice     loaded active   active system-systemd\x2dfsck.slice    </span><br><span class="line">  system.slice                     loaded active   active System Slice                    </span><br><span class="line">  user-0.slice                     loaded active   active User Slice of UID 0            </span><br><span class="line">  user-1000.slice                  loaded active   active User Slice of UID 1000          </span><br><span class="line">  user.slice                       loaded active   active User and Session Slice          </span><br><span class="line">LOAD   = Reflects whether the unit definition was properly loaded.</span><br><span class="line">ACTIVE = The high-level unit activation state, i.e. generalization of SUB.</span><br><span class="line">SUB    = The low-level unit activation state, values depend on unit type.</span><br><span class="line">11 loaded units listed.</span><br><span class="line">To show all installed unit files use &#x27;systemctl list-unit-files&#x27;.</span><br><span class="line">[root@testvm1 ~]#</span><br></pre></td></tr></table></figure><p>关于这个数据，第一个需要注意的是数据显示了 <code>UID 0（root）</code>和 <code>UID 1000</code> 的用户切片，<code>UID 1000</code> 是我登录的用户。这里列出了组成每个切片的切片部分，而不是服务。还说明了每个用户登录时都会为其创建一个切片，这为将一个用户的所有任务作为单个控制组项进行管理提供了一种方式。</p><hr><h2 id="探索控制组的层次结构"><a href="#探索控制组的层次结构" class="headerlink" title="探索控制组的层次结构"></a>探索控制组的层次结构</h2><p>目前为止一切顺利，但是控制组是分层的，所有的服务单元作为其中一个控制组的成员运行。要查看这个层次结构很简单，使用一个旧命令和 <code>systemd</code> 的一个新命令即可。</p><p><code>ps</code> 命令可以用于映射进程的和其所处的控制组层次。注意使用 <code>ps</code> 命令时需要指明想要的数据列。我大幅削减了下面命令的输出数量，但是试图保留足够的数据，以便你能够对自己系统上的输出有所感受：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">[root@testvm1 ~]# ps xawf -eo pid,user,cgroup,args</span><br><span class="line">    PID USER     CGROUP                      COMMAND</span><br><span class="line">      2 root     -                           [kthreadd]</span><br><span class="line">      3 root     -                            \_ [rcu_gp]</span><br><span class="line">      4 root     -                            \_ [rcu_par_gp]</span><br><span class="line">      6 root     -                            \_ [kworker/0:0H-kblockd]</span><br><span class="line">      9 root     -                            \_ [mm_percpu_wq]</span><br><span class="line">     10 root     -                            \_ [ksoftirqd/0]</span><br><span class="line">     11 root     -                            \_ [rcu_sched]</span><br><span class="line">     12 root     -                            \_ [migration/0]</span><br><span class="line">     13 root     -                            \_ [cpuhp/0]</span><br><span class="line">     14 root     -                            \_ [cpuhp/1]</span><br><span class="line">&lt;删节&gt;</span><br><span class="line"> 625406 root     -                            \_ [kworker/3:0-ata_sff]</span><br><span class="line"> 625409 root     -                            \_ [kworker/u8:0-events_unbound]</span><br><span class="line">      1 root     0::/init.scope              /usr/lib/systemd/systemd --switched-root --system --deserialize 30</span><br><span class="line">    588 root     0::/system.slice/systemd-jo /usr/lib/systemd/systemd-journald</span><br><span class="line">    599 root     0::/system.slice/systemd-ud /usr/lib/systemd/systemd-udevd</span><br><span class="line">    741 root     0::/system.slice/auditd.ser /sbin/auditd</span><br><span class="line">    743 root     0::/system.slice/auditd.ser  \_ /usr/sbin/sedispatch</span><br><span class="line">    764 root     0::/system.slice/ModemManag /usr/sbin/ModemManager</span><br><span class="line">    765 root     0::/system.slice/NetworkMan /usr/sbin/NetworkManager --no-daemon</span><br><span class="line">    767 root     0::/system.slice/irqbalance /usr/sbin/irqbalance --foreground</span><br><span class="line">    779 root     0::/system.slice/mcelog.ser /usr/sbin/mcelog --ignorenodev --daemon --foreground</span><br><span class="line">    781 root     0::/system.slice/rngd.servi /sbin/rngd -f</span><br><span class="line">    782 root     0::/system.slice/rsyslog.se /usr/sbin/rsyslogd -n</span><br><span class="line">&lt;删节&gt;</span><br><span class="line">    893 root     0::/system.slice/sshd.servi sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups</span><br><span class="line">   1130 root     0::/user.slice/user-0.slice  \_ sshd: root [priv]</span><br><span class="line">   1147 root     0::/user.slice/user-0.slice  |   \_ sshd: root@pts/0</span><br><span class="line">   1148 root     0::/user.slice/user-0.slice  |       \_ -bash</span><br><span class="line">   1321 root     0::/user.slice/user-0.slice  |           \_ screen</span><br><span class="line">   1322 root     0::/user.slice/user-0.slice  |               \_ SCREEN</span><br><span class="line">   1323 root     0::/user.slice/user-0.slice  |                   \_ /bin/bash</span><br><span class="line"> 498801 root     0::/user.slice/user-0.slice  |                   |   \_ man systemd.resource-control</span><br><span class="line"> 498813 root     0::/user.slice/user-0.slice  |                   |       \_ less</span><br><span class="line">   1351 root     0::/user.slice/user-0.slice  |                   \_ /bin/bash</span><br><span class="line"> 123293 root     0::/user.slice/user-0.slice  |                   |   \_ man systemd.slice</span><br><span class="line"> 123305 root     0::/user.slice/user-0.slice  |                   |       \_ less</span><br><span class="line">   1380 root     0::/user.slice/user-0.slice  |                   \_ /bin/bash</span><br><span class="line"> 625412 root     0::/user.slice/user-0.slice  |                   |   \_ ps xawf -eo pid,user,cgroup,args</span><br><span class="line"> 625413 root     0::/user.slice/user-0.slice  |                   |   \_ less</span><br><span class="line"> 246795 root     0::/user.slice/user-0.slice  |                   \_ /bin/bash</span><br><span class="line"> 625338 root     0::/user.slice/user-0.slice  |                       \_ /usr/bin/mc -P /var/tmp/mc-root/mc.pwd.246795</span><br><span class="line"> 625340 root     0::/user.slice/user-0.slice  |                           \_ bash -rcfile .bashrc</span><br><span class="line">   1218 root     0::/user.slice/user-1000.sl  \_ sshd: dboth [priv]</span><br><span class="line">   1233 dboth    0::/user.slice/user-1000.sl      \_ sshd: dboth@pts/1</span><br><span class="line">   1235 dboth    0::/user.slice/user-1000.sl          \_ -bash</span><br><span class="line">&lt;删节&gt;</span><br><span class="line">   1010 root     0::/system.slice/atd.servic /usr/sbin/atd -f</span><br><span class="line">   1011 root     0::/system.slice/crond.serv /usr/sbin/crond -n</span><br><span class="line">   1098 root     0::/system.slice/lxdm.servi /usr/sbin/lxdm-binary</span><br><span class="line">   1106 root     0::/system.slice/lxdm.servi  \_ /usr/libexec/Xorg -background none :0 vt01 -nolisten tcp -novtswitch -auth /var/run/lxdm/lxdm-:0.auth</span><br><span class="line"> 370621 root     0::/user.slice/user-1000.sl  \_ /usr/libexec/lxdm-session</span><br><span class="line"> 370631 dboth    0::/user.slice/user-1000.sl      \_ xfce4-session</span><br><span class="line"> 370841 dboth    0::/user.slice/user-1000.sl          \_ /usr/bin/ssh-agent /bin/sh -c exec -l bash -c &quot;/usr/bin/startxfce4&quot;</span><br><span class="line"> 370911 dboth    0::/user.slice/user-1000.sl          \_ xfwm4 --display :0.0 --sm-client-id 2dead44ab-0b4d-4101-bca4-e6771f4a8ac2</span><br><span class="line"> 370930 dboth    0::/user.slice/user-1000.sl          \_ xfce4-panel --display :0.0 --sm-client-id 2ce38b8ef-86fd-4189-ace5-deec1d0e0952</span><br><span class="line"> 370942 dboth    0::/user.slice/user-1000.sl          |   \_ /usr/lib64/xfce4/panel/wrapper-2.0 /usr/lib64/xfce4/panel/plugins/libsystray.so 6 23068680 systr</span><br><span class="line">ay Notification Area Area where notification icons appear</span><br><span class="line"> 370943 dboth    0::/user.slice/user-1000.sl          |   \_ /usr/lib64/xfce4/panel/wrapper-2.0 /usr/lib64/xfce4/panel/plugins/libpulseaudio-plugin.so 8 2306</span><br><span class="line">8681 pulseaudio PulseAudio Plugin Adjust the audio volume of the PulseAudio sound system</span><br><span class="line"> 370944 dboth    0::/user.slice/user-1000.sl          |   \_ /usr/lib64/xfce4/panel/wrapper-2.0 /usr/lib64/xfce4/panel/plugins/libxfce4powermanager.so 9 2306</span><br><span class="line">8682 power-manager-plugin Power Manager Plugin Display the battery levels of your devices and control the brightness of your display</span><br><span class="line"> 370945 dboth    0::/user.slice/user-1000.sl          |   \_ /usr/lib64/xfce4/panel/wrapper-2.0 /usr/lib64/xfce4/panel/plugins/libnotification-plugin.so 10 2</span><br><span class="line">3068683 notification-plugin Notification Plugin Notification plugin for the Xfce panel</span><br><span class="line"> 370948 dboth    0::/user.slice/user-1000.sl          |   \_ /usr/lib64/xfce4/panel/wrapper-2.0 /usr/lib64/xfce4/panel/plugins/libactions.so 14 23068684 acti</span><br><span class="line">ons Action Buttons Log out, lock or other system actions</span><br><span class="line"> 370934 dboth    0::/user.slice/user-1000.sl          \_ Thunar --sm-client-id 2cfc809d8-4e1d-497a-a5c5-6e4fa509c3fb --daemon</span><br><span class="line"> 370939 dboth    0::/user.slice/user-1000.sl          \_ xfdesktop --display :0.0 --sm-client-id 299be0608-4dca-4055-b4d6-55ec6e73a324</span><br><span class="line"> 370962 dboth    0::/user.slice/user-1000.sl          \_ nm-applet</span><br><span class="line">&lt;删节&gt;</span><br></pre></td></tr></table></figure><p>你可以使用 <code>systemd-cgls</code> 命令查看整个层次结构，这个命令不需要任何的复杂参数，更加简单。</p><p>我也大幅缩短了这个树状结构，但是保留了足够多的输出，以便你能够了解在自己的系统上执行这个命令时应该看到的数据总量和条目类型。我在我的一个虚拟机上执行了这个命令，输出大概有 200 行；我的主要工作站的输出大概有 250 行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@testvm1 ~]# systemd-cgls</span><br><span class="line">Control group /:</span><br><span class="line">-.slice</span><br><span class="line">├─user.slice</span><br><span class="line">│ ├─user-0.slice</span><br><span class="line">│ │ ├─session-1.scope</span><br><span class="line">│ │ │ ├─  1130 sshd: root [priv]</span><br><span class="line">│ │ │ ├─  1147 sshd: root@pts/0</span><br><span class="line">│ │ │ ├─  1148 -bash</span><br><span class="line">│ │ │ ├─  1321 screen</span><br><span class="line">│ │ │ ├─  1322 SCREEN</span><br><span class="line">│ │ │ ├─  1323 /bin/bash</span><br><span class="line">│ │ │ ├─  1351 /bin/bash</span><br><span class="line">│ │ │ ├─  1380 /bin/bash</span><br><span class="line">│ │ │ ├─123293 man systemd.slice</span><br><span class="line">│ │ │ ├─123305 less</span><br><span class="line">│ │ │ ├─246795 /bin/bash</span><br><span class="line">│ │ │ ├─371371 man systemd-cgls</span><br><span class="line">│ │ │ ├─371383 less</span><br><span class="line">│ │ │ ├─371469 systemd-cgls</span><br><span class="line">│ │ │ └─371470 less</span><br><span class="line">│ │ └─user@0.service …</span><br><span class="line">│ │   ├─dbus-broker.service</span><br><span class="line">│ │   │ ├─1170 /usr/bin/dbus-broker-launch --scope user</span><br><span class="line">│ │   │ └─1171 dbus-broker --log 4 --controller 12 --machine-id 3bccd1140fca488187f8a1439c832f07 --max-bytes 100000000000000 --max-fds 25000000000000 --max-&gt;</span><br><span class="line">│ │   ├─gvfs-daemon.service</span><br><span class="line">│ │   │ └─1173 /usr/libexec/gvfsd</span><br><span class="line">│ │   └─init.scope</span><br><span class="line">│ │     ├─1137 /usr/lib/systemd/systemd --user</span><br><span class="line">│ │     └─1138 (sd-pam)</span><br><span class="line">│ └─user-1000.slice</span><br><span class="line">│   ├─user@1000.service …</span><br><span class="line">│   │ ├─dbus\x2d:1.2\x2dorg.xfce.Xfconf.slice</span><br><span class="line">│   │ │ └─dbus-:1.2-org.xfce.Xfconf@0.service</span><br><span class="line">│   │ │   └─370748 /usr/lib64/xfce4/xfconf/xfconfd</span><br><span class="line">│   │ ├─dbus\x2d:1.2\x2dca.desrt.dconf.slice</span><br><span class="line">│   │ │ └─dbus-:1.2-ca.desrt.dconf@0.service</span><br><span class="line">│   │ │   └─371262 /usr/libexec/dconf-service</span><br><span class="line">│   │ ├─dbus-broker.service</span><br><span class="line">│   │ │ ├─1260 /usr/bin/dbus-broker-launch --scope user</span><br><span class="line">│   │ │ └─1261 dbus-broker --log 4 --controller 11 --machine-id</span><br><span class="line">&lt;删节&gt;</span><br><span class="line">│   │ └─gvfs-mtp-volume-monitor.service</span><br><span class="line">│   │   └─370987 /usr/libexec/gvfs-mtp-volume-monitor</span><br><span class="line">│   ├─session-3.scope</span><br><span class="line">│   │ ├─1218 sshd: dboth [priv]</span><br><span class="line">│   │ ├─1233 sshd: dboth@pts/1</span><br><span class="line">│   │ └─1235 -bash</span><br><span class="line">│   └─session-7.scope</span><br><span class="line">│     ├─370621 /usr/libexec/lxdm-session</span><br><span class="line">│     ├─370631 xfce4-session</span><br><span class="line">│     ├─370805 /usr/bin/VBoxClient --clipboard</span><br><span class="line">│     ├─370806 /usr/bin/VBoxClient --clipboard</span><br><span class="line">│     ├─370817 /usr/bin/VBoxClient --seamless</span><br><span class="line">│     ├─370818 /usr/bin/VBoxClient --seamless</span><br><span class="line">│     ├─370824 /usr/bin/VBoxClient --draganddrop</span><br><span class="line">│     ├─370825 /usr/bin/VBoxClient --draganddrop</span><br><span class="line">│     ├─370841 /usr/bin/ssh-agent /bin/sh -c exec -l bash -c &quot;/usr/bin/startxfce4&quot;</span><br><span class="line">│     ├─370910 /bin/gpg-agent --sh --daemon --write-env-file /home/dboth/.cache/gpg-agent-info</span><br><span class="line">│     ├─370911 xfwm4 --display :0.0 --sm-client-id 2dead44ab-0b4d-4101-bca4-e6771f4a8ac2</span><br><span class="line">│     ├─370923 xfsettingsd --display :0.0 --sm-client-id 261b4a437-3029-461c-9551-68c2c42f4fef</span><br><span class="line">│     ├─370930 xfce4-panel --display :0.0 --sm-client-id 2ce38b8ef-86fd-4189-ace5-deec1d0e0952</span><br><span class="line">│     ├─370934 Thunar --sm-client-id 2cfc809d8-4e1d-497a-a5c5-6e4fa509c3fb --daemon</span><br><span class="line">│     ├─370939 xfdesktop --display :0.0 --sm-client-id 299be0608-4dca-4055-b4d6-55ec6e73a324</span><br><span class="line">&lt;删节&gt;</span><br><span class="line">└─system.slice</span><br><span class="line">  ├─rngd.service</span><br><span class="line">  │ └─1650 /sbin/rngd -f</span><br><span class="line">  ├─irqbalance.service</span><br><span class="line">  │ └─1631 /usr/sbin/irqbalance --foreground</span><br><span class="line">  ├─fprintd.service</span><br><span class="line">  │ └─303383 /usr/libexec/fprintd</span><br><span class="line">  ├─systemd-udevd.service</span><br><span class="line">  │ └─956 /usr/lib/systemd/systemd-udevd</span><br><span class="line">&lt;删节&gt;</span><br><span class="line">  ├─systemd-journald.service</span><br><span class="line">  │ └─588 /usr/lib/systemd/systemd-journald</span><br><span class="line">  ├─atd.service</span><br><span class="line">  │ └─1010 /usr/sbin/atd -f</span><br><span class="line">  ├─system-dbus\x2d:1.10\x2dorg.freedesktop.problems.slice</span><br><span class="line">  │ └─dbus-:1.10-org.freedesktop.problems@0.service</span><br><span class="line">  │   └─371197 /usr/sbin/abrt-dbus -t133</span><br><span class="line">  ├─sshd.service</span><br><span class="line">  │ └─893 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups</span><br><span class="line">  ├─vboxservice.service</span><br><span class="line">  │ └─802 /usr/sbin/VBoxService -f</span><br><span class="line">  ├─crond.service</span><br><span class="line">  │ └─1011 /usr/sbin/crond -n</span><br><span class="line">  ├─NetworkManager.service</span><br><span class="line">  │ └─765 /usr/sbin/NetworkManager --no-daemon</span><br><span class="line">  ├─switcheroo-control.service</span><br><span class="line">  │ └─787 /usr/libexec/switcheroo-control</span><br><span class="line"> &lt;删节&gt;</span><br></pre></td></tr></table></figure><p>这个树状视图显示了所有的用户和系统切片，以及每个控制组内正在运行的服务和程序。注意叫作 <code>scope</code>（范围）的单元，它将相关的程序组成一个管理单元，在上面列出的结果中就是 <code>user-1000.slice</code>。<code>user-1000.slice/session-7.scope</code> 控制组包含了 GUI 桌面程序层次结构，以 <code>LXDM</code> 显示管理器会话和其所有的子任务开始，包括像 Bash 命令行解释器和 Thunar GUI 文件管理器之类的程序。</p><p>配置文件中不定义范围单元，而是作为启动相关程序组的结果程序化生成的。范围单元不创建或启动作为控制组的组成部分运行的进程。范围内的所有进程都是平等的，没有内部的层次结构。一个范围的生命周期在第一个进程创建时开始，在最后一个进程销毁时结束。</p><p>在你的桌面打开多个窗口，比如终端模拟器、<code>LibreOffice</code>、或者任何你想打开的，然后切换到一个可用的虚拟控制台，启动类似 top 或 <code>Midnight Commander</code> 的程序。在主机运行 <code>systemd-cgls</code> 命令，留意整体的层次结构和范围单元。</p><p><code>systemd-cgls</code> 命令提供的控制组层次结构表示（以及组成控制组单元的细节），比我见过的其他任何指令都要完整。和 ps 命令提供的输出相比，我喜欢 <code>systemd-cgls</code> 命令更简洁的树形表示。</p><ul><li><p>作者： <a href="">David Both</a></p></li><li><p>译自：<a href="">opensource.com</a>  </p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> systemd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中授权(grant)和回收权限(revoke)</title>
      <link href="/2023/01/18/MySQL%E4%B8%AD%E6%8E%88%E6%9D%83(grant)%E5%92%8C%E5%9B%9E%E6%94%B6%E6%9D%83%E9%99%90(revoke)/"/>
      <url>/2023/01/18/MySQL%E4%B8%AD%E6%8E%88%E6%9D%83(grant)%E5%92%8C%E5%9B%9E%E6%94%B6%E6%9D%83%E9%99%90(revoke)/</url>
      
        <content type="html"><![CDATA[<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p><strong>MySQL 赋予用户权限命令的语法格式可概括为：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant 权限 on 数据库对象 to 用户  </span><br></pre></td></tr></table></figure><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="grant-普通数据用户，查询、插入、更新、删除-数据库中所有表数据的权利"><a href="#grant-普通数据用户，查询、插入、更新、删除-数据库中所有表数据的权利" class="headerlink" title="grant 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利"></a>grant 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grant select on testdb.* to common_user@&#x27;%&#x27;  </span><br><span class="line">grant insert on testdb.* to common_user@&#x27;%&#x27;  </span><br><span class="line">grant update on testdb.* to common_user@&#x27;%&#x27;  </span><br><span class="line">grant delete on testdb.* to common_user@&#x27;%&#x27; </span><br></pre></td></tr></table></figure><p>或者，用一条 <code>MySQL</code> 命令来替代：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select, insert, update, delete on testdb.* to common_user@&#x27;%&#x27; </span><br></pre></td></tr></table></figure><h2 id="grant-数据库开发人员，创建表、索引、视图、存储过程、函数等权限"><a href="#grant-数据库开发人员，创建表、索引、视图、存储过程、函数等权限" class="headerlink" title="grant 数据库开发人员，创建表、索引、视图、存储过程、函数等权限"></a>grant 数据库开发人员，创建表、索引、视图、存储过程、函数等权限</h2><p><strong>grant 创建、修改、删除 MySQL 数据表结构权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant create on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br><span class="line">grant alter  on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br><span class="line">grant drop   on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br></pre></td></tr></table></figure><p><strong>grant 操作 MySQL 外键权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant references on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br></pre></td></tr></table></figure><p><strong>grant 操作 MySQL 临时表权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant create temporary tables on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br></pre></td></tr></table></figure><p><strong>grant 操作 MySQL 索引权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant index on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br></pre></td></tr></table></figure><p><strong>grant 操作 MySQL 视图、查看视图源代码权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant create view on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br><span class="line">grant show   view on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br></pre></td></tr></table></figure><p><strong>grant 操作 MySQL 存储过程、函数权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant create routine on testdb.* to developer@&#x27;192.168.0.%&#x27;; -- now, can show procedure status  </span><br><span class="line">grant alter  routine on testdb.* to developer@&#x27;192.168.0.%&#x27;; -- now, you can drop a procedure  </span><br><span class="line">grant execute        on testdb.* to developer@&#x27;192.168.0.%&#x27;;  </span><br></pre></td></tr></table></figure><h2 id="grant-普通-DBA-管理某个-MySQL-数据库的权限"><a href="#grant-普通-DBA-管理某个-MySQL-数据库的权限" class="headerlink" title="grant 普通 DBA 管理某个 MySQL 数据库的权限"></a>grant 普通 DBA 管理某个 MySQL 数据库的权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on testdb to dba@&#x27;localhost&#x27;  </span><br></pre></td></tr></table></figure><p>其中，关键字 <code>privileges</code>可以省略。</p><h2 id="grant-高级-DBA-管理-MySQL-中所有数据库的权限："><a href="#grant-高级-DBA-管理-MySQL-中所有数据库的权限：" class="headerlink" title="grant 高级 DBA 管理 MySQL 中所有数据库的权限："></a>grant 高级 DBA 管理 MySQL 中所有数据库的权限：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to dba@&#x27;localhost&#x27;  </span><br></pre></td></tr></table></figure><h2 id="MySQL-grant-权限，分别可以作用在多个层次上"><a href="#MySQL-grant-权限，分别可以作用在多个层次上" class="headerlink" title="MySQL grant 权限，分别可以作用在多个层次上"></a>MySQL grant 权限，分别可以作用在多个层次上</h2><p><strong>grant 作用在整个 MySQL 服务器上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant select on *.* to dba@localhost; -- dba 可以查询 MySQL 中所有数据库中的表。  </span><br><span class="line">grant all    on *.* to dba@localhost; -- dba 可以管理 MySQL 中的所有数据库。</span><br></pre></td></tr></table></figure><p><strong>grant 作用在单个数据库上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select on testdb.* to dba@localhost; -- dba 可以查询 testdb 中的表。  </span><br></pre></td></tr></table></figure><p><strong>grant 作用在单个数据表上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select, insert, update, delete on testdb.orders to dba@localhost;</span><br></pre></td></tr></table></figure><p><strong>这里在给一个用户授权多张表时，可以多次执行以上语句。例如：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant select(user_id,username) on smp.users to mo_user@&#x27;%&#x27; identified by &#x27;123345&#x27;;  </span><br><span class="line">grant select on smp.mo_sms to mo_user@&#x27;%&#x27; identified by &#x27;123345&#x27;;  </span><br></pre></td></tr></table></figure><p><strong>grant 作用在表中的列上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select(id, se, rank) on testdb.apache_log to dba@localhost;  </span><br></pre></td></tr></table></figure><p><strong>grant 作用在存储过程、函数上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant execute on procedure testdb.pr_add to &#x27;dba&#x27;@&#x27;localhost&#x27;  </span><br><span class="line">grant execute on function testdb.fn_add to &#x27;dba&#x27;@&#x27;localhost&#x27; </span><br></pre></td></tr></table></figure><h2 id="查看-MySQL-用户权限"><a href="#查看-MySQL-用户权限" class="headerlink" title="查看 MySQL 用户权限"></a>查看 MySQL 用户权限</h2><p><strong>查看当前用户（自己）权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show grants;  </span><br></pre></td></tr></table></figure><p><strong>查看其他 MySQL 用户权限：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show grants for dba@localhost;  </span><br></pre></td></tr></table></figure><h2 id="撤销已经赋予给-MySQL-用户权限的权限"><a href="#撤销已经赋予给-MySQL-用户权限的权限" class="headerlink" title="撤销已经赋予给 MySQL 用户权限的权限"></a>撤销已经赋予给 <code>MySQL</code> 用户权限的权限</h2><p><strong>revoke 跟 grant 的语法差不多，只需要把关键字 “to” 换成 “from” 即可：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant  all on *.* to   dba@localhost;  </span><br><span class="line">revoke all on *.* from dba@localhost; </span><br></pre></td></tr></table></figure><h2 id="MySQL-grant、revoke-用户权限注意事项"><a href="#MySQL-grant、revoke-用户权限注意事项" class="headerlink" title="MySQL grant、revoke 用户权限注意事项"></a>MySQL grant、revoke 用户权限注意事项</h2><ul><li><p><code>grant</code>, <code>revoke</code> 用户权限后，该用户只有重新连接 <code>MySQL</code> 数据库，权限才能生效。</p></li><li><p>如果想让授权的用户，也可以将这些权限 <code>grant</code> 给其他用户，需要选项 <code>grant option</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select on testdb.* to dba@localhost with grant option;</span><br></pre></td></tr></table></figure></li></ul><p>  这个特性一般用不到。实际中，数据库权限最好由 <code>DBA</code> 来统一管理</p><p>  这个特性一般用不到。实际中，数据库权限最好由 <code>DBA</code> 来统一管理</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p><code>mysql</code>授权表共有5个表：<code>user</code>、<code>db</code>、<code>host</code>、<code>tables_priv</code>和<code>columns_priv</code></p><h2 id="授权表的内容有如下用途"><a href="#授权表的内容有如下用途" class="headerlink" title="授权表的内容有如下用途"></a>授权表的内容有如下用途</h2><ul><li><p><strong>user表</strong><br><code>user</code>表列出可以连接服务器的用户及其口令，并且它指定他们有哪种全局（超级用户）权限。在<code>user</code>表启用的任何权限均是全局权限，并适用于所有数据库。例如，如果你启用了<code>DELETE</code>权限，在这里列出的用户可以从任何表中删除记录，所以在你这样做之前要认真考虑。</p></li><li><p><strong>db表</strong><br><code>db</code>表列出数据库，而用户有权限访问它们。在这里指定的权限适用于一个数据库中的所有表。</p></li><li><p><strong>host表</strong><br>host表与db表结合使用在一个较好层次上控制特定主机对数据库的访问权限，这可能比单独使用<code>db</code>好些。这个表不受<code>GRANT</code>和<code>REVOKE</code>语句的影响，所以，你可能发觉你根本不是用它。</p></li><li><p><strong>tables_priv表</strong><br><code>tables_priv</code>表指定表级权限，在这里指定的一个权限适用于一个表的所有列。</p></li><li><p><strong>columns_priv表</strong><br><code>columns_priv</code>表指定列级权限。这里指定的权限适用于一个表的特定列。</p></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>作者：Boblim<br>原文：<a href="https://www.cnblogs.com/fnlingnzb-learner/p/5833337.html">https://www.cnblogs.com/fnlingnzb-learner/p/5833337.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> grant </tag>
            
            <tag> revoke </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据备份及还原 (一) -mysqldump</title>
      <link href="/2023/01/13/MySQL%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F%20(%E4%B8%80)%20-mysqldump/"/>
      <url>/2023/01/13/MySQL%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F%20(%E4%B8%80)%20-mysqldump/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>MySQL</code>是一种流行的关系型数据库管理系统，常用于各种<code>Web</code>应用程序、企业应用程序和其他应用程序中。由于数据的重要性和安全性，备份是数据库管理的重要部分之一。在<code>MySQL</code>中，使用<code>mysqldump</code>命令可以对数据库进行备份和还原操作。</p><h2 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h2><h3 id="使用mysqldump命令备份整个数据库"><a href="#使用mysqldump命令备份整个数据库" class="headerlink" title="使用mysqldump命令备份整个数据库"></a>使用mysqldump命令备份整个数据库</h3><p>在命令行中输入以下命令，将整个<code>MySQL</code>数据库备份到指定的文件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u username -p password --opt dbname &gt; backupfile.sql</span><br></pre></td></tr></table></figure><p>其中，<code>-u</code>选项指定用户名，<code>-p</code>选项指定密码，<code>--opt</code>选项包含一些备份选项，<code>dbname</code>是要备份的数据库的名称，<code>backupfile.sql</code>是备份文件的名称和路径。在输入命令后，系统会提示您输入密码。</p><h3 id="备份特定表"><a href="#备份特定表" class="headerlink" title="备份特定表"></a>备份特定表</h3><p>如果您只想备份某个特定表，可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u username -p password dbname tablename &gt; backupfile.sql</span><br></pre></td></tr></table></figure><p>其中，<code>tablename</code>是要备份的表的名称。</p><h2 id="还原数据库"><a href="#还原数据库" class="headerlink" title="还原数据库"></a>还原数据库</h2><h3 id="使用mysql命令还原整个数据库"><a href="#使用mysql命令还原整个数据库" class="headerlink" title="使用mysql命令还原整个数据库"></a>使用mysql命令还原整个数据库</h3><p>如果您要还原整个MySQL数据库，请执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u username -p password dbname &lt; backupfile.sql</span><br></pre></td></tr></table></figure><p>其中，<code>-u</code>选项指定用户名，<code>-p</code>选项指定密码，<code>dbname</code>是要还原的数据库的名称，<code>backupfile.sql</code>是备份文件的名称和路径。</p><h3 id="还原特定表"><a href="#还原特定表" class="headerlink" title="还原特定表"></a>还原特定表</h3><p>如果您只想还原某个特定表，请使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u username -p password dbname &lt; backupfile.sql</span><br></pre></td></tr></table></figure><p>其中，<code>tablename</code>是要还原的表的名称。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> mysqldump </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马程序员MySQL数据库从入门到精通笔记</title>
      <link href="/2023/01/13/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/01/13/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h2 id="通用语法及分类"><a href="#通用语法及分类" class="headerlink" title="通用语法及分类"></a>通用语法及分类</h2><ul><li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li><li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li><li>DQL: 数据查询语言，用来查询数据库中表的记录</li><li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li></ul><h3 id="DDL（数据定义语言）"><a href="#DDL（数据定义语言）" class="headerlink" title="DDL（数据定义语言）"></a>DDL（数据定义语言）</h3><p>数据定义语言</p><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p>查询所有数据库：<br><code>SHOW DATABASES;</code><br>查询当前数据库：<br><code>SELECT DATABASE();</code><br>创建数据库：<br><code>CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</code><br>删除数据库：<br><code>DROP DATABASE [ IF EXISTS ] 数据库名;</code><br>使用数据库：<br><code>USE 数据库名;</code></p><h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>UTF8字符集长度为3字节，有些符号占4字节，所以推荐用utf8mb4字符集</li></ul><h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><p>查询当前数据库所有表：<br><code>SHOW TABLES;</code><br>查询表结构：<br><code>DESC 表名;</code><br>查询指定表的建表语句：<br><code>SHOW CREATE TABLE 表名;</code></p><p>创建表：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">字段1 字段1类型 [COMMENT 字段1注释],</span><br><span class="line">字段2 字段2类型 [COMMENT 字段2注释],</span><br><span class="line">字段3 字段3类型 [COMMENT 字段3注释],</span><br><span class="line">...</span><br><span class="line">字段n 字段n类型 [COMMENT 字段n注释]</span><br><span class="line">)[ COMMENT 表注释 ];</span><br></pre></td></tr></table></figure><br><strong>最后一个字段后面没有逗号</strong></p><p>添加字段：<br><code>ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：<code>ALTER TABLE emp ADD nickname varchar(20) COMMENT &#39;昵称&#39;;</code></p><p>修改数据类型：<br><code>ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</code><br>修改字段名和字段类型：<br><code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：将emp表的nickname字段修改为username，类型为varchar(30)<br><code>ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT &#39;昵称&#39;;</code></p><p>删除字段：<br><code>ALTER TABLE 表名 DROP 字段名;</code></p><p>修改表名：<br><code>ALTER TABLE 表名 RENAME TO 新表名</code></p><p>删除表：<br><code>DROP TABLE [IF EXISTS] 表名;</code><br>删除表，并重新创建该表：<br><code>TRUNCATE TABLE 表名;</code></p><h3 id="DML（数据操作语言）"><a href="#DML（数据操作语言）" class="headerlink" title="DML（数据操作语言）"></a>DML（数据操作语言）</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>指定字段：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</code><br>全部字段：<br><code>INSERT INTO 表名 VALUES (值1, 值2, ...);</code></p><p>批量添加数据：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code><br><code>INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code></p><h5 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>字符串和日期类型数据应该包含在引号中</li><li>插入的数据大小应该在字段的规定范围内</li></ul><h4 id="更新和删除数据"><a href="#更新和删除数据" class="headerlink" title="更新和删除数据"></a>更新和删除数据</h4><p>修改数据：<br><code>UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</code><br>例：<br><code>UPDATE emp SET name = &#39;Jack&#39; WHERE id = 1;</code></p><p>删除数据：<br><code>DELETE FROM 表名 [ WHERE 条件 ];</code></p><h3 id="DQL（数据查询语言）"><a href="#DQL（数据查询语言）" class="headerlink" title="DQL（数据查询语言）"></a>DQL（数据查询语言）</h3><p>语法：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">字段列表</span><br><span class="line">FROM</span><br><span class="line">表名字段</span><br><span class="line">WHERE</span><br><span class="line">条件列表</span><br><span class="line">GROUP BY</span><br><span class="line">分组字段列表</span><br><span class="line">HAVING</span><br><span class="line">分组后的条件列表</span><br><span class="line">ORDER BY</span><br><span class="line">排序字段列表</span><br><span class="line">LIMIT</span><br><span class="line">分页参数</span><br></pre></td></tr></table></figure></p><h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>查询多个字段：<br><code>SELECT 字段1, 字段2, 字段3, ... FROM 表名;</code><br><code>SELECT * FROM 表名;</code></p><p>设置别名：<br><code>SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</code><br><code>SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;</code></p><p>去除重复记录：<br><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p><p>转义：<br><code>SELECT * FROM 表名 WHERE name LIKE &#39;/_张三&#39; ESCAPE &#39;/&#39;</code><br>/ 之后的_不作为通配符</p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p><p>条件：</p><div class="table-container"><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !=</td><td>不等于</td></tr><tr><td>BETWEEN … AND …</td><td>在某个范围内（含最小、最大值）</td></tr><tr><td>IN(…)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>LIKE 占位符</td><td>模糊匹配（_匹配单个字符，%匹配任意个字符）</td></tr><tr><td>IS NULL</td><td>是NULL</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>AND 或 &amp;&amp;</td><td>并且（多个条件同时成立）</td></tr><tr><td>OR 或 &#124;&#124;</td><td>或者（多个条件任意一个成立）</td></tr><tr><td>NOT 或 !</td><td>非，不是</td></tr></tbody></table></div><p>例子：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-- 年龄等于30</span><br><span class="line">select * from employee where age = 30;</span><br><span class="line">-- 年龄小于30</span><br><span class="line">select * from employee where age &lt; 30;</span><br><span class="line">-- 小于等于</span><br><span class="line">select * from employee where age &lt;= 30;</span><br><span class="line">-- 没有身份证</span><br><span class="line">select * from employee where idcard is null or idcard = &#x27;&#x27;;</span><br><span class="line">-- 有身份证</span><br><span class="line">select * from employee where idcard;</span><br><span class="line">select * from employee where idcard is not null;</span><br><span class="line">-- 不等于</span><br><span class="line">select * from employee where age != 30;</span><br><span class="line">-- 年龄在20到30之间</span><br><span class="line">select * from employee where age between 20 and 30;</span><br><span class="line">select * from employee where age &gt;= 20 and age &lt;= 30;</span><br><span class="line">-- 下面语句不报错，但查不到任何信息</span><br><span class="line">select * from employee where age between 30 and 20;</span><br><span class="line">-- 性别为女且年龄小于30</span><br><span class="line">select * from employee where age &lt; 30 and gender = &#x27;女&#x27;;</span><br><span class="line">-- 年龄等于25或30或35</span><br><span class="line">select * from employee where age = 25 or age = 30 or age = 35;</span><br><span class="line">select * from employee where age in (25, 30, 35);</span><br><span class="line">-- 姓名为两个字</span><br><span class="line">select * from employee where name like &#x27;__&#x27;;</span><br><span class="line">-- 身份证最后为X</span><br><span class="line">select * from employee where idcard like &#x27;%X&#x27;;</span><br></pre></td></tr></table></figure></p><h4 id="聚合查询（聚合函数）"><a href="#聚合查询（聚合函数）" class="headerlink" title="聚合查询（聚合函数）"></a>聚合查询（聚合函数）</h4><p>常见聚合函数：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table></div><p>语法：<br><code>SELECT 聚合函数(字段列表) FROM 表名;</code><br>例：<br><code>SELECT count(id) from employee where workaddress = &quot;广东省&quot;;</code></p><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];</code></p><p>where 和 having 的区别：</p><ul><li>执行时机不同：where是分组之前进行过滤，不满足where条件不参与分组；having是分组后对结果进行过滤。</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以。</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 根据性别分组，统计男性和女性数量（只显示分组数量，不显示哪个是男哪个是女）</span><br><span class="line">select count(*) from employee group by gender;</span><br><span class="line">-- 根据性别分组，统计男性和女性数量</span><br><span class="line">select gender, count(*) from employee group by gender;</span><br><span class="line">-- 根据性别分组，统计男性和女性的平均年龄</span><br><span class="line">select gender, avg(age) from employee group by gender;</span><br><span class="line">-- 年龄小于45，并根据工作地址分组</span><br><span class="line">select workaddress, count(*) from employee where age &lt; 45 group by workaddress;</span><br><span class="line">-- 年龄小于45，并根据工作地址分组，获取员工数量大于等于3的工作地址</span><br><span class="line">select workaddress, count(*) address_count from employee where age &lt; 45 group by workaddress having address_count &gt;= 3;</span><br></pre></td></tr></table></figure><h5 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>执行顺序：where &gt; 聚合函数 &gt; having</li><li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义</li></ul><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</code></p><p>排序方式：</p><ul><li>ASC: 升序（默认）</li><li>DESC: 降序</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 根据年龄升序排序</span><br><span class="line">SELECT * FROM employee ORDER BY age ASC;</span><br><span class="line">SELECT * FROM employee ORDER BY age;</span><br><span class="line">-- 两字段排序，根据年龄升序排序，入职时间降序排序</span><br><span class="line">SELECT * FROM employee ORDER BY age ASC, entrydate DESC;</span><br></pre></td></tr></table></figure><h5 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h5><p>如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询第一页数据，展示10条</span><br><span class="line">SELECT * FROM employee LIMIT 0, 10;</span><br><span class="line">-- 查询第二页</span><br><span class="line">SELECT * FROM employee LIMIT 10, 10;</span><br></pre></td></tr></table></figure><h5 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>起始索引从0开始，起始索引 = （查询页码 - 1） * 每页显示记录数</li><li>分页查询是数据库的方言，不同数据库有不同实现，MySQL是LIMIT</li><li>如果查询的是第一页数据，起始索引可以省略，直接简写 LIMIT 10</li></ul><h4 id="DQL执行顺序"><a href="#DQL执行顺序" class="headerlink" title="DQL执行顺序"></a>DQL执行顺序</h4><p>FROM -&gt; WHERE -&gt; GROUP BY -&gt; SELECT -&gt; ORDER BY -&gt; LIMIT</p><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><p>查询用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">SELECT * FROM user;</span><br></pre></td></tr></table></figure><p>创建用户:<br><code>CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</code></p><p>修改用户密码：<br><code>ALTER USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;</code></p><p>删除用户：<br><code>DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 创建用户test，只能在当前主机localhost访问</span><br><span class="line">create user &#x27;test&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">-- 创建用户test，能在任意主机访问</span><br><span class="line">create user &#x27;test&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">create user &#x27;test&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">-- 修改密码</span><br><span class="line">alter user &#x27;test&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &#x27;1234&#x27;;</span><br><span class="line">-- 删除用户</span><br><span class="line">drop user &#x27;test&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><h5 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>主机名可以使用 % 通配</li></ul><h4 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h4><p>常用权限：</p><div class="table-container"><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>ALL, ALL PRIVILEGES</td><td>所有权限</td></tr><tr><td>SELECT</td><td>查询数据</td></tr><tr><td>INSERT</td><td>插入数据</td></tr><tr><td>UPDATE</td><td>修改数据</td></tr><tr><td>DELETE</td><td>删除数据</td></tr><tr><td>ALTER</td><td>修改表</td></tr><tr><td>DROP</td><td>删除数据库/表/视图</td></tr><tr><td>CREATE</td><td>创建数据库/表</td></tr></tbody></table></div><p>更多权限请看<a href="#权限一览表" title="权限一览表">权限一览表</a></p><p>查询权限：<br><code>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>授予权限：<br><code>GRANT 权限列表 ON 数据库名.表名 TO &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>撤销权限：<br><code>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p><h5 id="注意事项-6"><a href="#注意事项-6" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>多个权限用逗号分隔</li><li>授权时，数据库名和表名可以用 * 进行通配，代表所有</li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>字符串函数</li><li>数值函数</li><li>日期函数</li><li>流程函数</li></ul><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p>常用函数：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CONCAT(s1, s2, …, sn)</td><td>字符串拼接，将s1, s2, …, sn拼接成一个字符串</td></tr><tr><td>LOWER(str)</td><td>将字符串全部转为小写</td></tr><tr><td>UPPER(str)</td><td>将字符串全部转为大写</td></tr><tr><td>LPAD(str, n, pad)</td><td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>RPAD(str, n, pad)</td><td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>TRIM(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>SUBSTRING(str, start, len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr><tr><td>REPLACE(column, source, replace)</td><td>替换字符串</td></tr></tbody></table></div><p>使用示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-- 拼接</span><br><span class="line">SELECT CONCAT(&#x27;Hello&#x27;, &#x27;World&#x27;);</span><br><span class="line">-- 小写</span><br><span class="line">SELECT LOWER(&#x27;Hello&#x27;);</span><br><span class="line">-- 大写</span><br><span class="line">SELECT UPPER(&#x27;Hello&#x27;);</span><br><span class="line">-- 左填充</span><br><span class="line">SELECT LPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class="line">-- 右填充</span><br><span class="line">SELECT RPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class="line">-- 去除空格</span><br><span class="line">SELECT TRIM(&#x27; Hello World &#x27;);</span><br><span class="line">-- 切片（起始索引为1）</span><br><span class="line">SELECT SUBSTRING(&#x27;Hello World&#x27;, 1, 5);</span><br></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><p>常见函数：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CEIL(x)</td><td>向上取整</td></tr><tr><td>FLOOR(x)</td><td>向下取整</td></tr><tr><td>MOD(x, y)</td><td>返回x/y的模</td></tr><tr><td>RAND()</td><td>返回0~1内的随机数</td></tr><tr><td>ROUND(x, y)</td><td>求参数x的四舍五入值，保留y位小数</td></tr></tbody></table></div><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p>常用函数：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CURDATE()</td><td>返回当前日期</td></tr><tr><td>CURTIME()</td><td>返回当前时间</td></tr><tr><td>NOW()</td><td>返回当前日期和时间</td></tr><tr><td>YEAR(date)</td><td>获取指定date的年份</td></tr><tr><td>MONTH(date)</td><td>获取指定date的月份</td></tr><tr><td>DAY(date)</td><td>获取指定date的日期</td></tr><tr><td>DATE_ADD(date, INTERVAL expr type)</td><td>返回一个日期/时间值加上一个时间间隔expr后的时间值</td></tr><tr><td>DATEDIFF(date1, date2)</td><td>返回起始时间date1和结束时间date2之间的天数</td></tr></tbody></table></div><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- DATE_ADD</span><br><span class="line">SELECT DATE_ADD(NOW(), INTERVAL 70 YEAR);</span><br></pre></td></tr></table></figure><h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>常用函数：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>IF(value, t, f)</td><td>如果value为true，则返回t，否则返回f</td></tr><tr><td>IFNULL(value1, value2)</td><td>如果value1不为空，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td><td>如果val1为true，返回res1，… 否则返回default默认值</td></tr><tr><td>CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td><td>如果expr的值等于val1，返回res1，… 否则返回default默认值</td></tr></tbody></table></div><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">name,</span><br><span class="line">(case when age &gt; 30 then &#x27;中年&#x27; else &#x27;青年&#x27; end)</span><br><span class="line">from employee;</span><br><span class="line">select</span><br><span class="line">name,</span><br><span class="line">(case workaddress when &#x27;北京市&#x27; then &#x27;一线城市&#x27; when &#x27;上海市&#x27; then &#x27;一线城市&#x27; else &#x27;二线城市&#x27; end) as &#x27;工作地址&#x27;</span><br><span class="line">from employee;</span><br></pre></td></tr></table></figure><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>分类：</p><div class="table-container"><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段的数据不能为null</td><td>NOT NULL</td></tr><tr><td>唯一约束</td><td>保证该字段的所有数据都是唯一、不重复的</td><td>UNIQUE</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>PRIMARY KEY</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段的值，则采用默认值</td><td>DEFAULT</td></tr><tr><td>检查约束（8.0.1版本后）</td><td>保证字段值满足某一个条件</td><td>CHECK</td></tr><tr><td>外键约束</td><td>用来让两张图的数据之间建立连接，保证数据的一致性和完整性</td><td>FOREIGN KEY</td></tr></tbody></table></div><p>约束是作用于表中字段上的，可以再创建表/修改表的时候添加约束。</p><h3 id="常用约束"><a href="#常用约束" class="headerlink" title="常用约束"></a>常用约束</h3><div class="table-container"><table><thead><tr><th>约束条件</th><th>关键字</th></tr></thead><tbody><tr><td>主键</td><td>PRIMARY KEY</td></tr><tr><td>自动增长</td><td>AUTO_INCREMENT</td></tr><tr><td>不为空</td><td>NOT NULL</td></tr><tr><td>唯一</td><td>UNIQUE</td></tr><tr><td>逻辑条件</td><td>CHECK</td></tr><tr><td>默认值</td><td>DEFAULT</td></tr></tbody></table></div><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">name varchar(10) not null unique,</span><br><span class="line">age int check(age &gt; 0 and age &lt; 120),</span><br><span class="line">status char(1) default &#x27;1&#x27;,</span><br><span class="line">gender char(1)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><p>添加外键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">字段名 字段类型,</span><br><span class="line">...</span><br><span class="line">[CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)</span><br><span class="line">);</span><br><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名) REFERENCES 主表(主表列名);</span><br><span class="line"></span><br><span class="line">-- 例子</span><br><span class="line">alter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id);</span><br></pre></td></tr></table></figure><p>删除外键：<br><code>ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</code></p><h4 id="删除-更新行为"><a href="#删除-更新行为" class="headerlink" title="删除/更新行为"></a>删除/更新行为</h4><div class="table-container"><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>NO ACTION</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与RESTRICT一致）</td></tr><tr><td>RESTRICT</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与NO ACTION一致）</td></tr><tr><td>CASCADE</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除/更新外键在子表中的记录</td></tr><tr><td>SET NULL</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（要求该外键允许为null）</td></tr><tr><td>SET DEFAULT</td><td>父表有变更时，子表将外键设为一个默认值（Innodb不支持）</td></tr></tbody></table></div><p>更改删除/更新行为：<br><code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;</code></p><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h3><ul><li>一对多（多对一）</li><li>多对多</li><li>一对一</li></ul><h4 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h4><p>案例：部门与员工<br>关系：一个部门对应多个员工，一个员工对应一个部门<br>实现：在多的一方建立外键，指向一的一方的主键</p><h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><p>案例：学生与课程<br>关系：一个学生可以选多门课程，一门课程也可以供多个学生选修<br>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p><h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><p>案例：用户与用户详情<br>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率<br>实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（UNIQUE）</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>合并查询（笛卡尔积，会展示所有组合结果）：<br><code>select * from employee, dept;</code></p><blockquote><p>笛卡尔积：两个集合A集合和B集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）</p></blockquote><p>消除无效笛卡尔积：<br><code>select * from employee, dept where employee.dept = dept.id;</code></p><h3 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h3><p>内连接查询的是两张表交集的部分</p><p>隐式内连接：<br><code>SELECT 字段列表 FROM 表1, 表2 WHERE 条件 ...;</code></p><p>显式内连接：<br><code>SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ...;</code></p><p>显式性能比隐式高</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工姓名，及关联的部门的名称</span><br><span class="line">-- 隐式</span><br><span class="line">select e.name, d.name from employee as e, dept as d where e.dept = d.id;</span><br><span class="line">-- 显式</span><br><span class="line">select e.name, d.name from employee as e inner join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure><h3 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>左外连接：<br>查询左表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ...;</code><br>相当于查询表1的所有数据，包含表1和表2交集部分数据</p><p>右外连接：<br>查询右表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 左</span><br><span class="line">select e.*, d.name from employee as e left outer join dept as d on e.dept = d.id;</span><br><span class="line">select d.name, e.* from dept d left outer join emp e on e.dept = d.id;  -- 这条语句与下面的语句效果一样</span><br><span class="line">-- 右</span><br><span class="line">select d.name, e.* from employee as e right outer join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure><p>左连接可以查询到没有dept的employee，右连接可以查询到没有employee的dept</p><h3 id="自连接查询"><a href="#自连接查询" class="headerlink" title="自连接查询"></a>自连接查询</h3><p>当前表与自身的连接查询，自连接必须使用表别名</p><p>语法：<br><code>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;</code></p><p>自连接查询，可以是内连接查询，也可以是外连接查询</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工及其所属领导的名字</span><br><span class="line">select a.name, b.name from employee a, employee b where a.manager = b.id;</span><br><span class="line">-- 没有领导的也查询出来</span><br><span class="line">select a.name, b.name from employee a left join employee b on a.manager = b.id;</span><br></pre></td></tr></table></figure><h3 id="联合查询-union-union-all"><a href="#联合查询-union-union-all" class="headerlink" title="联合查询 union, union all"></a>联合查询 union, union all</h3><p>把多次查询的结果合并，形成一个新的查询集</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表A ...</span><br><span class="line">UNION [ALL]</span><br><span class="line">SELECT 字段列表 FROM 表B ...</span><br></pre></td></tr></table></figure><h4 id="注意事项-7"><a href="#注意事项-7" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>UNION ALL 会有重复结果，UNION 不会</li><li>联合查询比使用or效率高，不会使索引失效</li></ul><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>SQL语句中嵌套SELECT语句，称谓嵌套查询，又称子查询。<br><code>SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);</code><br><strong>子查询外部的语句可以是 INSERT / UPDATE / DELETE / SELECT 的任何一个</strong></p><p>根据子查询结果可以分为：</p><ul><li>标量子查询（子查询结果为单个值）</li><li>列子查询（子查询结果为一列）</li><li>行子查询（子查询结果为一行）</li><li>表子查询（子查询结果为多行多列）</li></ul><p>根据子查询位置可分为：</p><ul><li>WHERE 之后</li><li>FROM 之后</li><li>SELECT 之后</li></ul><h4 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h4><p>子查询返回的结果是单个值（数字、字符串、日期等）。<br>常用操作符：- &lt; &gt; &gt; &gt;= &lt; &lt;=</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 查询销售部所有员工</span><br><span class="line">select id from dept where name = &#x27;销售部&#x27;;</span><br><span class="line">-- 根据销售部部门ID，查询员工信息</span><br><span class="line">select * from employee where dept = 4;</span><br><span class="line">-- 合并（子查询）</span><br><span class="line">select * from employee where dept = (select id from dept where name = &#x27;销售部&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查询xxx入职之后的员工信息</span><br><span class="line">select * from employee where entrydate &gt; (select entrydate from employee where name = &#x27;xxx&#x27;);</span><br></pre></td></tr></table></figure><h4 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h4><p>返回的结果是一列（可以是多行）。</p><p>常用操作符：</p><div class="table-container"><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>IN</td><td>在指定的集合范围内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定的集合范围内</td></tr><tr><td>ANY</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>SOME</td><td>与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td>ALL</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table></div><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 查询销售部和市场部的所有员工信息</span><br><span class="line">select * from employee where dept in (select id from dept where name = &#x27;销售部&#x27; or name = &#x27;市场部&#x27;);</span><br><span class="line">-- 查询比财务部所有人工资都高的员工信息</span><br><span class="line">select * from employee where salary &gt; all(select salary from employee where dept = (select id from dept where name = &#x27;财务部&#x27;));</span><br><span class="line">-- 查询比研发部任意一人工资高的员工信息</span><br><span class="line">select * from employee where salary &gt; any (select salary from employee where dept = (select id from dept where name = &#x27;研发部&#x27;));</span><br></pre></td></tr></table></figure><h4 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h4><p>返回的结果是一行（可以是多列）。<br>常用操作符：=, &lt;, &gt;, IN, NOT IN</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 查询与xxx的薪资及直属领导相同的员工信息</span><br><span class="line">select * from employee where (salary, manager) = (12500, 1);</span><br><span class="line">select * from employee where (salary, manager) = (select salary, manager from employee where name = &#x27;xxx&#x27;);</span><br></pre></td></tr></table></figure><h4 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h4><p>返回的结果是多行多列<br>常用操作符：IN</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询与xxx1，xxx2的职位和薪资相同的员工</span><br><span class="line">select * from employee where (job, salary) in (select job, salary from employee where name = &#x27;xxx1&#x27; or name = &#x27;xxx2&#x27;);</span><br><span class="line">-- 查询入职日期是2006-01-01之后的员工，及其部门信息</span><br><span class="line">select e.*, d.* from (select * from employee where entrydate &gt; &#x27;2006-01-01&#x27;) as e left join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务是一组操作的集合，事务会把所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><p>基本操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-- 1. 查询张三账户余额</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">-- 2. 将张三账户余额-1000</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">-- 此语句出错后张三钱减少但是李四钱没有增加</span><br><span class="line">模拟sql语句错误</span><br><span class="line">-- 3. 将李四账户余额+1000</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查看事务提交方式</span><br><span class="line">SELECT @@AUTOCOMMIT;</span><br><span class="line">-- 设置事务提交方式，1为自动提交，0为手动提交，该设置只对当前会话有效</span><br><span class="line">SET @@AUTOCOMMIT = 0;</span><br><span class="line">-- 提交事务</span><br><span class="line">COMMIT;</span><br><span class="line">-- 回滚事务</span><br><span class="line">ROLLBACK;</span><br><span class="line"></span><br><span class="line">-- 设置手动提交后上面代码改为：</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><p>操作方式二：</p><p>开启事务：<br><code>START TRANSACTION 或 BEGIN TRANSACTION;</code><br>提交事务：<br><code>COMMIT;</code><br>回滚事务：<br><code>ROLLBACK;</code></p><p>操作实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start transaction;</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h3 id="四大特性ACID"><a href="#四大特性ACID" class="headerlink" title="四大特性ACID"></a>四大特性ACID</h3><ul><li>原子性(Atomicity)：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li><li>一致性(Consistency)：事务完成时，必须使所有数据都保持一致状态</li><li>隔离性(Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性(Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li></ul><h3 id="并发事务"><a href="#并发事务" class="headerlink" title="并发事务"></a>并发事务</h3><div class="table-container"><table><thead><tr><th>问题</th><th>描述</th></tr></thead><tbody><tr><td>脏读</td><td>一个事务读到另一个事务还没提交的数据</td></tr><tr><td>不可重复读</td><td>一个事务先后读取同一条记录，但两次读取的数据不同</td></tr><tr><td>幻读</td><td>一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td></tr></tbody></table></div><blockquote><p>这三个问题的详细演示：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd</a> </p></blockquote><p>并发事务隔离级别：</p><div class="table-container"><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>Read uncommitted</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Read committed</td><td>×</td><td>√</td><td>√</td></tr><tr><td>Repeatable Read(默认)</td><td>×</td><td>×</td><td>√</td></tr><tr><td>Serializable</td><td>×</td><td>×</td><td>×</td></tr></tbody></table></div><ul><li>√表示在当前隔离级别下该问题会出现</li><li>Serializable 性能最低；Read uncommitted 性能最高，数据安全性最差</li></ul><p>查看事务隔离级别：<br><code>SELECT @@TRANSACTION_ISOLATION;</code><br>设置事务隔离级别：<br><code>SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE &#125;;</code><br>SESSION 是会话级别，表示只针对当前会话有效，GLOBAL 表示对所有会话有效</p><h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><p>MySQL体系结构：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/MySQL体系结构_20220315034329549927.png" alt="结构图" title="结构图"><br><img src="https://dhc.pythonanywhere.com/media/editor/MySQL体系结构层级含义_20220315034359342837.png" alt="层级描述" title="层级描述"></p><p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。<br>默认存储引擎是InnoDB。</p><p>相关操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 查询建表语句</span><br><span class="line">show create table account;</span><br><span class="line">-- 建表时指定存储引擎</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">...</span><br><span class="line">) ENGINE=INNODB;</span><br><span class="line">-- 查看当前数据库支持的存储引擎</span><br><span class="line">show engines;</span><br></pre></td></tr></table></figure><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 引擎。</p><p>特点：</p><ul><li>DML 操作遵循 ACID 模型，支持<strong>事务</strong></li><li><strong>行级锁</strong>，提高并发访问性能</li><li>支持<strong>外键</strong>约束，保证数据的完整性和正确性</li></ul><p>文件：</p><ul><li>xxx.ibd: xxx代表表名，InnoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。</li></ul><p>参数：innodb_file_per_table，决定多张表共享一个表空间还是每张表对应一个表空间</p><p>知识点：</p><p>查看 Mysql 变量：<br><code>show variables like &#39;innodb_file_per_table&#39;;</code></p><p>从idb文件提取表结构数据：<br>（在cmd运行）<br><code>ibd2sdi xxx.ibd</code></p><p>InnoDB 逻辑存储结构：<br><img src="https://dhc.pythonanywhere.com/media/editor/逻辑存储结构_20220316030616590001.png" alt="InnoDB逻辑存储结构" title="InnoDB逻辑存储结构"></p><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p>MyISAM 是 MySQL 早期的默认存储引擎。</p><p>特点：</p><ul><li>不支持事务，不支持外键</li><li>支持表锁，不支持行锁</li><li>访问速度快</li></ul><p>文件：</p><ul><li>xxx.sdi: 存储表结构信息</li><li>xxx.MYD: 存储数据</li><li>xxx.MYI: 存储索引</li></ul><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><p>Memory 引擎的表数据是存储在内存中的，受硬件问题、断电问题的影响，只能将这些表作为临时表或缓存使用。</p><p>特点：</p><ul><li>存放在内存中，速度快</li><li>hash索引（默认）</li></ul><p>文件：</p><ul><li>xxx.sdi: 存储表结构信息</li></ul><h3 id="存储引擎特点"><a href="#存储引擎特点" class="headerlink" title="存储引擎特点"></a>存储引擎特点</h3><div class="table-container"><table><thead><tr><th>特点</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>存储限制</td><td>64TB</td><td>有</td><td>有</td></tr><tr><td>事务安全</td><td>支持</td><td>-</td><td>-</td></tr><tr><td>锁机制</td><td>行锁</td><td>表锁</td><td>表锁</td></tr><tr><td>B+tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>-</td><td>-</td><td>支持</td></tr><tr><td>全文索引</td><td>支持（5.6版本之后）</td><td>支持</td><td>-</td></tr><tr><td>空间使用</td><td>高</td><td>低</td><td>N/A</td></tr><tr><td>内存使用</td><td>高</td><td>低</td><td>中等</td></tr><tr><td>批量插入速度</td><td>低</td><td>高</td><td>高</td></tr><tr><td>支持外键</td><td>支持</td><td>-</td><td>-</td></tr></tbody></table></div><h3 id="存储引擎的选择"><a href="#存储引擎的选择" class="headerlink" title="存储引擎的选择"></a>存储引擎的选择</h3><p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。</p><ul><li>InnoDB: 如果应用对事物的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，则 InnoDB 是比较合适的选择</li><li>MyISAM: 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不高，那这个存储引擎是非常合适的。</li><li>Memory: 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。Memory 的缺陷是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性</li></ul><p>电商中的足迹和评论适合使用 MyISAM 引擎，缓存适合使用 Memory 引擎。</p><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><h3 id="查看执行频次"><a href="#查看执行频次" class="headerlink" title="查看执行频次"></a>查看执行频次</h3><p>查看当前数据库的 INSERT, UPDATE, DELETE, SELECT 访问频次：<br><code>SHOW GLOBAL STATUS LIKE &#39;Com_______&#39;;</code> 或者 <code>SHOW SESSION STATUS LIKE &#39;Com_______&#39;;</code><br>例：<code>show global status like &#39;Com_______&#39;</code></p><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认10秒）的所有SQL语句的日志。<br>MySQL的慢查询日志默认没有开启，需要在MySQL的配置文件（/etc/my.cnf）中配置如下信息：</p><pre><code># 开启慢查询日志开关slow_query_log=1# 设置慢查询日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志long_query_time=2</code></pre><p>更改后记得重启MySQL服务，日志文件位置：/var/lib/mysql/localhost-slow.log</p><p>查看慢查询日志开关状态：<br><code>show variables like &#39;slow_query_log&#39;;</code></p><h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h3><p>show profile 能在做SQL优化时帮我们了解时间都耗费在哪里。通过 have_profiling 参数，能看到当前 MySQL 是否支持 profile 操作：<br><code>SELECT @@have_profiling;</code><br>profiling 默认关闭，可以通过set语句在session/global级别开启 profiling：<br><code>SET profiling = 1;</code><br>查看所有语句的耗时：<br><code>show profiles;</code><br>查看指定query_id的SQL语句各个阶段的耗时：<br><code>show profile for query query_id;</code><br>查看指定query_id的SQL语句CPU的使用情况<br><code>show profile cpu for query query_id;</code></p><h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><p>EXPLAIN 或者 DESC 命令获取 MySQL 如何执行 SELECT 语句的信息，包括在 SELECT 语句执行过程中表如何连接和连接的顺序。<br>语法：</p><pre><code># 直接在select语句之前加上关键字 explain / descEXPLAIN SELECT 字段列表 FROM 表名 HWERE 条件;</code></pre><p>EXPLAIN 各字段含义：</p><ul><li>id：select 查询的序列号，表示查询中执行 select 子句或者操作表的顺序（id相同，执行顺序从上到下；id不同，值越大越先执行）</li><li>select_type：表示 SELECT 的类型，常见取值有 SIMPLE（简单表，即不适用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION中的第二个或者后面的查询语句）、SUBQUERY（SELECT/WHERE之后包含了子查询）等</li><li>type：表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all</li><li>possible_key：可能应用在这张表上的索引，一个或多个</li><li>Key：实际使用的索引，如果为 NULL，则没有使用索引</li><li>Key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好</li><li>rows：MySQL认为必须要执行的行数，在InnoDB引擎的表中，是一个估计值，可能并不总是准确的</li><li>filtered：表示返回结果的行数占需读取行数的百分比，filtered的值越大越好</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>索引是帮助 MySQL <strong>高效获取数据</strong>的<strong>数据结构（有序）</strong>。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查询算法，这种数据结构就是索引。</p><p>优缺点：</p><p>优点：</p><ul><li>提高数据检索效率，降低数据库的IO成本</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗</li></ul><p>缺点：</p><ul><li>索引列也是要占用空间的</li><li>索引大大提高了查询效率，但降低了更新的速度，比如 INSERT、UPDATE、DELETE</li></ul><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><div class="table-container"><table><thead><tr><th>索引结构</th><th>描述</th></tr></thead><tbody><tr><td>B+Tree</td><td>最常见的索引类型，大部分引擎都支持B+树索引</td></tr><tr><td>Hash</td><td>底层数据结构是用哈希表实现，只有精确匹配索引列的查询才有效，不支持范围查询</td></tr><tr><td>R-Tree(空间索引)</td><td>空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td></tr><tr><td>Full-Text(全文索引)</td><td>是一种通过建立倒排索引，快速匹配文档的方式，类似于 Lucene, Solr, ES</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>索引</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>B+Tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>R-Tree索引</td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>Full-text</td><td>5.6版本后支持</td><td>支持</td><td>不支持</td></tr></tbody></table></div><h4 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h4><p><img src="https://dhc.pythonanywhere.com/media/editor/二叉树_20220316153214227108.png" alt="二叉树" title="二叉树"></p><p>二叉树的缺点可以用红黑树来解决：<br><img src="https://dhc.pythonanywhere.com/media/editor/红黑树_20220316163142686602.png" alt="红黑树" title="红黑树"><br>红黑树也存在大数据量情况下，层级较深，检索速度慢的问题。</p><p>为了解决上述问题，可以使用 B-Tree 结构。<br>B-Tree (多路平衡查找树) 以一棵最大度数（max-degree，指一个节点的子节点个数）为5（5阶）的 b-tree 为例（每个节点最多存储4个key，5个指针）</p><p><img src="https://dhc.pythonanywhere.com/media/editor/B-Tree结构_20220316163813441163.png" alt="B-Tree结构" title="B-Tree结构"></p><blockquote><p>B-Tree 的数据插入过程动画参照：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68</a><br>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BTree.html">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a></p></blockquote><h4 id="B-Tree-1"><a href="#B-Tree-1" class="headerlink" title="B+Tree"></a>B+Tree</h4><p>结构图：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/B+Tree结构图_20220316170700591277.png" alt="B+Tree结构图" title="B+Tree结构图"></p><blockquote><p>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html">https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html</a></p></blockquote><p>与 B-Tree 的区别：</p><ul><li>所有的数据都会出现在叶子节点</li><li>叶子节点形成一个单向链表</li></ul><p>MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能。</p><p><img src="https://dhc.pythonanywhere.com/media/editor/结构图_20220316171730865611.png" alt="MySQL B+Tree 结构图" title="MySQL B+Tree 结构图"></p><h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h4><p>哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。<br>如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了hash冲突（也称为hash碰撞），可以通过链表来解决。</p><p><img src="https://dhc.pythonanywhere.com/media/editor/Hash索引原理图_20220317143226150679.png" alt="Hash索引原理图" title="Hash索引原理图"></p><p>特点：</p><ul><li>Hash索引只能用于对等比较（=、in），不支持范围查询（betwwn、&gt;、&lt;、…）</li><li>无法利用索引完成排序操作</li><li>查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+Tree 索引</li></ul><p>存储引擎支持：</p><ul><li>Memory</li><li>InnoDB: 具有自适应hash功能，hash索引是存储引擎根据 B+Tree 索引在指定条件下自动构建的</li></ul><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><ol><li>为什么 InnoDB 存储引擎选择使用 B+Tree 索引结构？</li></ol><ul><li>相对于二叉树，层级更少，搜索效率高</li><li>对于 B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针也跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低</li><li>相对于 Hash 索引，B+Tree 支持范围匹配及排序操作</li></ul><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><div class="table-container"><table><thead><tr><th>分类</th><th>含义</th><th>特点</th><th>关键字</th></tr></thead><tbody><tr><td>主键索引</td><td>针对于表中主键创建的索引</td><td>默认自动创建，只能有一个</td><td>PRIMARY</td></tr><tr><td>唯一索引</td><td>避免同一个表中某数据列中的值重复</td><td>可以有多个</td><td>UNIQUE</td></tr><tr><td>常规索引</td><td>快速定位特定数据</td><td>可以有多个</td><td></td></tr><tr><td>全文索引</td><td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td><td>可以有多个</td><td>FULLTEXT</td></tr></tbody></table></div><p>在 InnoDB 存储引擎中，根据索引的存储形式，又可以分为以下两种：</p><div class="table-container"><table><thead><tr><th>分类</th><th>含义</th><th>特点</th></tr></thead><tbody><tr><td>聚集索引(Clustered Index)</td><td>将数据存储与索引放一块，索引结构的叶子节点保存了行数据</td><td>必须有，而且只有一个</td></tr><tr><td>二级索引(Secondary Index)</td><td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td><td>可以存在多个</td></tr></tbody></table></div><p>演示图：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/原理图_20220318194454880073.png" alt="大致原理" title="大致原理"><br><img src="https://dhc.pythonanywhere.com/media/editor/演示图_20220319215403721066.png" alt="演示图" title="演示图"></p><p>聚集索引选取规则：</p><ul><li>如果存在主键，主键索引就是聚集索引</li><li>如果不存在主键，将使用第一个唯一(UNIQUE)索引作为聚集索引</li><li>如果表没有主键或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引</li></ul><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><p>1. 以下 SQL 语句，哪个执行效率高？为什么？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from user where id = 10;</span><br><span class="line">select * from user where name = &#x27;Arm&#x27;;</span><br><span class="line">-- 备注：id为主键，name字段创建的有索引</span><br></pre></td></tr></table></figure><p>答：第一条语句，因为第二条需要回表查询，相当于两个步骤。</p><p>2. InnoDB 主键索引的 B+Tree 高度为多少？</p><p>答：假设一行数据大小为1k，一页中可以存储16行这样的数据。InnoDB 的指针占用6个字节的空间，主键假设为bigint，占用字节数为8.<br>可得公式：<code>n * 8 + (n + 1) * 6 = 16 * 1024</code>，其中 8 表示 bigint 占用的字节数，n 表示当前节点存储的key的数量，(n + 1) 表示指针数量（比key多一个）。算出n约为1170。</p><p>如果树的高度为2，那么他能存储的数据量大概为：<code>1171 * 16 = 18736</code>；<br>如果树的高度为3，那么他能存储的数据量大概为：<code>1171 * 1171 * 16 = 21939856</code>。</p><p>另外，如果有成千上万的数据，那么就要考虑分表，涉及运维篇知识。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>创建索引：<br><code>CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...);</code><br>如果不加 CREATE 后面不加索引类型参数，则创建的是常规索引</p><p>查看索引：<br><code>SHOW INDEX FROM table_name;</code></p><p>删除索引：<br><code>DROP INDEX index_name ON table_name;</code></p><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- name字段为姓名字段，该字段的值可能会重复，为该字段创建索引</span><br><span class="line">create index idx_user_name on tb_user(name);</span><br><span class="line">-- phone手机号字段的值非空，且唯一，为该字段创建唯一索引</span><br><span class="line">create unique index idx_user_phone on tb_user (phone);</span><br><span class="line">-- 为profession, age, status创建联合索引</span><br><span class="line">create index idx_user_pro_age_stat on tb_user(profession, age, status);</span><br><span class="line">-- 为email建立合适的索引来提升查询效率</span><br><span class="line">create index idx_user_email on tb_user(email);</span><br><span class="line"></span><br><span class="line">-- 删除索引</span><br><span class="line">drop index idx_user_email on tb_user;</span><br></pre></td></tr></table></figure><h3 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h3><h4 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a>最左前缀法则</h4><p>如果索引关联了多列（联合索引），要遵守最左前缀法则，最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。<br>如果跳跃某一列，索引将部分失效（后面的字段索引失效）。</p><p>联合索引中，出现范围查询（&lt;, &gt;），范围查询右侧的列索引失效。可以用&gt;=或者&lt;=来规避索引失效问题。</p><h4 id="索引失效情况"><a href="#索引失效情况" class="headerlink" title="索引失效情况"></a>索引失效情况</h4><ol><li>在索引列上进行运算操作，索引将失效。如：<code>explain select * from tb_user where substring(phone, 10, 2) = &#39;15&#39;;</code></li><li>字符串类型字段使用时，不加引号，索引将失效。如：<code>explain select * from tb_user where phone = 17799990015;</code>，此处phone的值没有加引号</li><li>模糊查询中，如果仅仅是尾部模糊匹配，索引不会是失效；如果是头部模糊匹配，索引失效。如：<code>explain select * from tb_user where profession like &#39;%工程&#39;;</code>，前后都有 % 也会失效。</li><li>用 or 分割开的条件，如果 or 其中一个条件的列没有索引，那么涉及的索引都不会被用到。</li><li>如果 MySQL 评估使用索引比全表更慢，则不使用索引。</li></ol><h4 id="SQL-提示"><a href="#SQL-提示" class="headerlink" title="SQL 提示"></a>SQL 提示</h4><p>是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。</p><p>例如，使用索引：<br><code>explain select * from tb_user use index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>不使用哪个索引：<br><code>explain select * from tb_user ignore index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>必须使用哪个索引：<br><code>explain select * from tb_user force index(idx_user_pro) where profession=&quot;软件工程&quot;;</code></p><p>use 是建议，实际使用哪个索引 MySQL 还会自己权衡运行速度去更改，force就是无论如何都强制使用该索引。</p><h4 id="覆盖索引-amp-回表查询"><a href="#覆盖索引-amp-回表查询" class="headerlink" title="覆盖索引&amp;回表查询"></a>覆盖索引&amp;回表查询</h4><p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能找到），减少 select *。</p><p>explain 中 extra 字段含义：<br><code>using index condition</code>：查找使用了索引，但是需要回表查询数据<br><code>using where; using index;</code>：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询</p><p>如果在聚集索引中直接能找到对应的行，则直接返回行数据，只需要一次查询，哪怕是select *；如果在辅助索引中找聚集索引，如<code>select id, name from xxx where name=&#39;xxx&#39;;</code>，也只需要通过辅助索引(name)查找到对应的id，返回name和name索引对应的id即可，只需要一次查询；如果是通过辅助索引查找其他字段，则需要回表查询，如<code>select id, name, gender from xxx where name=&#39;xxx&#39;;</code></p><p>所以尽量不要用<code>select *</code>，容易出现回表查询，降低效率，除非有联合索引包含了所有字段</p><p>面试题：一张表，有四个字段（id, username, password, status），由于数据量大，需要对以下SQL语句进行优化，该如何进行才是最优方案：<br><code>select id, username, password from tb_user where username=&#39;itcast&#39;;</code></p><p>解：给username和password字段建立联合索引，则不需要回表查询，直接覆盖索引</p><h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p>当字段类型为字符串（varchar, text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO，影响查询效率，此时可以只降字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。</p><p>语法：<code>create index idx_xxxx on table_name(columnn(n));</code><br>前缀长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的。<br>求选择性公式：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select count(distinct email) / count(*) from tb_user;</span><br><span class="line">select count(distinct substring(email, 1, 5)) / count(*) from tb_user;</span><br></pre></td></tr></table></figure></p><p>show index 里面的sub_part可以看到接取的长度</p><h4 id="单列索引-amp-联合索引"><a href="#单列索引-amp-联合索引" class="headerlink" title="单列索引&amp;联合索引"></a>单列索引&amp;联合索引</h4><p>单列索引：即一个索引只包含单个列<br>联合索引：即一个索引包含了多个列<br>在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。</p><p>单列索引情况：<br><code>explain select id, phone, name from tb_user where phone = &#39;17799990010&#39; and name = &#39;韩信&#39;;</code><br>这句只会用到phone索引字段</p><h5 id="注意事项-8"><a href="#注意事项-8" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>多条件联合查询时，MySQL优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询</li></ul><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><ol><li>针对于数据量较大，且查询比较频繁的表建立索引</li><li>针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引</li><li>尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高</li><li>如果是字符串类型的字段，字段长度较长，可以针对于字段的特点，建立前缀索引</li><li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率</li><li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率</li><li>如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询</li></ol><h2 id="SQL-优化"><a href="#SQL-优化" class="headerlink" title="SQL 优化"></a>SQL 优化</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>普通插入：</p><ol><li>采用批量插入（一次插入的数据不建议超过1000条）</li><li>手动提交事务</li><li>主键顺序插入</li></ol><p>大批量插入：<br>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令插入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 客户端连接服务端时，加上参数 --local-infile（这一行在bash/cmd界面输入）</span><br><span class="line">mysql --local-infile -u root -p</span><br><span class="line"># 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关</span><br><span class="line">set global local_infile = 1;</span><br><span class="line">select @@local_infile;</span><br><span class="line"># 执行load指令将准备好的数据，加载到表结构中</span><br><span class="line">load data local infile &#x27;/root/sql1.log&#x27; into table &#x27;tb_user&#x27; fields terminated by &#x27;,&#x27; lines terminated by &#x27;\n&#x27;;</span><br></pre></td></tr></table></figure><h3 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h3><p>数据组织方式：在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表（Index organized table, IOT）</p><p>页分裂：页可以为空，也可以填充一般，也可以填充100%，每个页包含了2-N行数据（如果一行数据过大，会行溢出），根据主键排列。<br>页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录到达 MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前后）看看是否可以将这两个页合并以优化空间使用。</p><p>MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或创建索引时指定</p><blockquote><p>文字说明不够清晰明了，具体可以看视频里的PPT演示过程：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90</a></p></blockquote><p>主键设计原则：</p><ul><li>满足业务需求的情况下，尽量降低主键的长度</li><li>插入数据时，尽量选择顺序插入，选择使用 AUTO_INCREMENT 自增主键</li><li>尽量不要使用 UUID 做主键或者是其他的自然主键，如身份证号</li><li>业务操作时，避免对主键的修改</li></ul><h3 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h3><ol><li>Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区 sort buffer 中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序</li><li>Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高</li></ol><p>如果order by字段全部使用升序排序或者降序排序，则都会走索引，但是如果一个字段升序排序，另一个字段降序排序，则不会走索引，explain的extra信息显示的是<code>Using index, Using filesort</code>，如果要优化掉Using filesort，则需要另外再创建一个索引，如：<code>create index idx_user_age_phone_ad on tb_user(age asc, phone desc);</code>，此时使用<code>select id, age, phone from tb_user order by age asc, phone desc;</code>会全部走索引</p><p>总结：</p><ul><li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</li><li>尽量使用覆盖索引</li><li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC/DESC）</li><li>如果不可避免出现filesort，大数据量排序时，可以适当增大排序缓冲区大小 sort_buffer_size（默认256k）</li></ul><h3 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h3><ul><li>在分组操作时，可以通过索引来提高效率</li><li>分组操作时，索引的使用也是满足最左前缀法则的</li></ul><p>如索引为<code>idx_user_pro_age_stat</code>，则句式可以是<code>select ... where profession order by age</code>，这样也符合最左前缀法则</p><h3 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h3><p>常见的问题如<code>limit 2000000, 10</code>，此时需要 MySQL 排序前2000000条记录，但仅仅返回2000000 - 2000010的记录，其他记录丢弃，查询排序的代价非常大。<br>优化方案：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 此语句耗时很长</span><br><span class="line">select * from tb_sku limit 9000000, 10;</span><br><span class="line">-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询</span><br><span class="line">select id from tb_sku order by id limit 9000000, 10;</span><br><span class="line">-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit</span><br><span class="line">-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);</span><br><span class="line">-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度</span><br><span class="line">select * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id;</span><br></pre></td></tr></table></figure><h3 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h3><p>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个数，效率很高（前提是不适用where）；<br>InnoDB 在执行 count(*) 时，需要把数据一行一行地从引擎里面读出来，然后累计计数。<br>优化方案：自己计数，如创建key-value表存储在内存或硬盘，或者是用redis</p><p>count的几种用法：</p><ul><li>如果count函数的参数（count里面写的那个字段）不是NULL（字段值不为NULL），累计值就加一，最后返回累计值</li><li>用法：count(*)、count(主键)、count(字段)、count(1)</li><li>count(主键)跟count(*)一样，因为主键不能为空；count(字段)只计算字段值不为NULL的行；count(1)引擎会为每行添加一个1，然后就count这个1，返回结果也跟count(*)一样；count(null)返回0</li></ul><p>各种用法的性能：</p><ul><li>count(主键)：InnoDB引擎会遍历整张表，把每行的主键id值都取出来，返回给服务层，服务层拿到主键后，直接按行进行累加（主键不可能为空）</li><li>count(字段)：没有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加；有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加</li><li>count(1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一层，放一个数字 1 进去，直接按行进行累加</li><li>count(*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加</li></ul><p>按效率排序：count(字段) &lt; count(主键) &lt; count(1) &lt; count(*)，所以尽量使用 count(*)</p><h3 id="update优化（避免行锁升级为表锁）"><a href="#update优化（避免行锁升级为表锁）" class="headerlink" title="update优化（避免行锁升级为表锁）"></a>update优化（避免行锁升级为表锁）</h3><p>InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。</p><p>如以下两条语句：<br><code>update student set no = &#39;123&#39; where id = 1;</code>，这句由于id有主键索引，所以只会锁这一行；<br><code>update student set no = &#39;123&#39; where name = &#39;test&#39;;</code>，这句由于name没有索引，所以会把整张表都锁住进行数据更新，解决方法是给name字段添加索引</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><div class="table-container"><table><thead><tr><th>类型名称</th><th>取值范围</th><th>大小</th></tr></thead><tbody><tr><td>TINYINT</td><td>-128〜127</td><td>1个字节</td></tr><tr><td>SMALLINT</td><td>-32768〜32767</td><td>2个宇节</td></tr><tr><td>MEDIUMINT</td><td>-8388608〜8388607</td><td>3个字节</td></tr><tr><td>INT (INTEGHR)</td><td>-2147483648〜2147483647</td><td>4个字节</td></tr><tr><td>BIGINT</td><td>-9223372036854775808〜9223372036854775807</td><td>8个字节</td></tr></tbody></table></div><p>无符号在数据类型后加 unsigned 关键字。</p><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><div class="table-container"><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>FLOAT</td><td>单精度浮点数</td><td>4 个字节</td></tr><tr><td>DOUBLE</td><td>双精度浮点数</td><td>8 个字节</td></tr><tr><td>DECIMAL (M, D)，DEC</td><td>压缩的“严格”定点数</td><td>M+2 个字节</td></tr></tbody></table></div><h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><div class="table-container"><table><thead><tr><th>类型名称</th><th>日期格式</th><th>日期范围</th><th>存储需求</th></tr></thead><tbody><tr><td>YEAR</td><td>YYYY</td><td>1901 ~ 2155</td><td>1 个字节</td></tr><tr><td>TIME</td><td>HH:MM:SS</td><td>-838:59:59 ~ 838:59:59</td><td>3 个字节</td></tr><tr><td>DATE</td><td>YYYY-MM-DD</td><td>1000-01-01 ~ 9999-12-3</td><td>3 个字节</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td><td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td><td>8 个字节</td></tr><tr><td>TIMESTAMP</td><td>YYYY-MM-DD HH:MM:SS</td><td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td><td>4 个字节</td></tr></tbody></table></div><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><div class="table-container"><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>CHAR(M)</td><td>固定长度非二进制字符串</td><td>M 字节，1&lt;=M&lt;=255</td></tr><tr><td>VARCHAR(M)</td><td>变长非二进制字符串</td><td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td></tr><tr><td>TINYTEXT</td><td>非常小的非二进制字符串</td><td>L+1字节，在此，L&lt;2^8</td></tr><tr><td>TEXT</td><td>小的非二进制字符串</td><td>L+2字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMTEXT</td><td>中等大小的非二进制字符串</td><td>L+3字节，在此，L&lt;2^24</td></tr><tr><td>LONGTEXT</td><td>大的非二进制字符串</td><td>L+4字节，在此，L&lt;2^32</td></tr><tr><td>ENUM</td><td>枚举类型，只能有一个枚举字符串值</td><td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td></tr><tr><td>SET</td><td>一个设置，字符串对象可以有零个或 多个SET成员</td><td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td></tr></tbody></table></div><h2 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h2><div class="table-container"><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>BIT(M)</td><td>位字段类型</td><td>大约 (M+7)/8 字节</td></tr><tr><td>BINARY(M)</td><td>固定长度二进制字符串</td><td>M 字节</td></tr><tr><td>VARBINARY (M)</td><td>可变长度二进制字符串</td><td>M+1 字节</td></tr><tr><td>TINYBLOB (M)</td><td>非常小的BLOB</td><td>L+1 字节，在此，L&lt;2^8</td></tr><tr><td>BLOB (M)</td><td>小 BLOB</td><td>L+2 字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMBLOB (M)</td><td>中等大小的BLOB</td><td>L+3 字节，在此，L&lt;2^24</td></tr><tr><td>LONGBLOB (M)</td><td>非常大的BLOB</td><td>L+4 字节，在此，L&lt;2^32</td></tr></tbody></table></div><h1 id="权限一览表"><a href="#权限一览表" class="headerlink" title="权限一览表"></a>权限一览表</h1><blockquote><p>具体权限的作用详见<a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html" title="官方文档">官方文档</a></p></blockquote><p>GRANT 和 REVOKE 允许的静态权限</p><div class="table-container"><table><thead><tr><th style="text-align:left">Privilege</th><th style="text-align:left">Grant Table Column</th><th style="text-align:left">Context</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_all"><code>ALL [PRIVILEGES]</code></a></td><td style="text-align:left">Synonym for “all privileges”</td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter"><code>ALTER</code></a></td><td style="text-align:left"><code>Alter_priv</code></td><td style="text-align:left">Tables</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter-routine"><code>ALTER ROUTINE</code></a></td><td style="text-align:left"><code>Alter_routine_priv</code></td><td style="text-align:left">Stored routines</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create"><code>CREATE</code></a></td><td style="text-align:left"><code>Create_priv</code></td><td style="text-align:left">Databases, tables, or indexes</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-role"><code>CREATE ROLE</code></a></td><td style="text-align:left"><code>Create_role_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-routine"><code>CREATE ROUTINE</code></a></td><td style="text-align:left"><code>Create_routine_priv</code></td><td style="text-align:left">Stored routines</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-tablespace"><code>CREATE TABLESPACE</code></a></td><td style="text-align:left"><code>Create_tablespace_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-temporary-tables"><code>CREATE TEMPORARY TABLES</code></a></td><td style="text-align:left"><code>Create_tmp_table_priv</code></td><td style="text-align:left">Tables</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-user"><code>CREATE USER</code></a></td><td style="text-align:left"><code>Create_user_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-view"><code>CREATE VIEW</code></a></td><td style="text-align:left"><code>Create_view_priv</code></td><td style="text-align:left">Views</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_delete"><code>DELETE</code></a></td><td style="text-align:left"><code>Delete_priv</code></td><td style="text-align:left">Tables</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop"><code>DROP</code></a></td><td style="text-align:left"><code>Drop_priv</code></td><td style="text-align:left">Databases, tables, or views</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop-role"><code>DROP ROLE</code></a></td><td style="text-align:left"><code>Drop_role_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_event"><code>EVENT</code></a></td><td style="text-align:left"><code>Event_priv</code></td><td style="text-align:left">Databases</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_execute"><code>EXECUTE</code></a></td><td style="text-align:left"><code>Execute_priv</code></td><td style="text-align:left">Stored routines</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_file"><code>FILE</code></a></td><td style="text-align:left"><code>File_priv</code></td><td style="text-align:left">File access on server host</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_grant-option"><code>GRANT OPTION</code></a></td><td style="text-align:left"><code>Grant_priv</code></td><td style="text-align:left">Databases, tables, or stored routines</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_index"><code>INDEX</code></a></td><td style="text-align:left"><code>Index_priv</code></td><td style="text-align:left">Tables</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_insert"><code>INSERT</code></a></td><td style="text-align:left"><code>Insert_priv</code></td><td style="text-align:left">Tables or columns</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_lock-tables"><code>LOCK TABLES</code></a></td><td style="text-align:left"><code>Lock_tables_priv</code></td><td style="text-align:left">Databases</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_process"><code>PROCESS</code></a></td><td style="text-align:left"><code>Process_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_proxy"><code>PROXY</code></a></td><td style="text-align:left">See <code>proxies_priv</code> table</td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_references"><code>REFERENCES</code></a></td><td style="text-align:left"><code>References_priv</code></td><td style="text-align:left">Databases or tables</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_reload"><code>RELOAD</code></a></td><td style="text-align:left"><code>Reload_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-client"><code>REPLICATION CLIENT</code></a></td><td style="text-align:left"><code>Repl_client_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave"><code>REPLICATION SLAVE</code></a></td><td style="text-align:left"><code>Repl_slave_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_select"><code>SELECT</code></a></td><td style="text-align:left"><code>Select_priv</code></td><td style="text-align:left">Tables or columns</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-databases"><code>SHOW DATABASES</code></a></td><td style="text-align:left"><code>Show_db_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-view"><code>SHOW VIEW</code></a></td><td style="text-align:left"><code>Show_view_priv</code></td><td style="text-align:left">Views</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_shutdown"><code>SHUTDOWN</code></a></td><td style="text-align:left"><code>Shutdown_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_super"><code>SUPER</code></a></td><td style="text-align:left"><code>Super_priv</code></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_trigger"><code>TRIGGER</code></a></td><td style="text-align:left"><code>Trigger_priv</code></td><td style="text-align:left">Tables</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_update"><code>UPDATE</code></a></td><td style="text-align:left"><code>Update_priv</code></td><td style="text-align:left">Tables or columns</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_usage"><code>USAGE</code></a></td><td style="text-align:left">Synonym for “no privileges”</td><td style="text-align:left">Server administration</td></tr></tbody></table></div><p>GRANT 和 REVOKE 允许的动态权限</p><div class="table-container"><table><thead><tr><th style="text-align:left">Privilege</th><th style="text-align:left">Context</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_application-password-admin"><code>APPLICATION_PASSWORD_ADMIN</code></a></td><td style="text-align:left">Dual password administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-abort-exempt"><code>AUDIT_ABORT_EXEMPT</code></a></td><td style="text-align:left">Allow queries blocked by audit log filter</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-admin"><code>AUDIT_ADMIN</code></a></td><td style="text-align:left">Audit log administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_authentication-policy-admin"><code>AUTHENTICATION_POLICY_ADMIN</code></a></td><td style="text-align:left">Authentication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_backup-admin"><code>BACKUP_ADMIN</code></a></td><td style="text-align:left">Backup administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin"><code>BINLOG_ADMIN</code></a></td><td style="text-align:left">Backup and Replication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-encryption-admin"><code>BINLOG_ENCRYPTION_ADMIN</code></a></td><td style="text-align:left">Backup and Replication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_clone-admin"><code>CLONE_ADMIN</code></a></td><td style="text-align:left">Clone administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin"><code>CONNECTION_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_encryption-key-admin"><code>ENCRYPTION_KEY_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-admin"><code>FIREWALL_ADMIN</code></a></td><td style="text-align:left">Firewall administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-exempt"><code>FIREWALL_EXEMPT</code></a></td><td style="text-align:left">Firewall administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-user"><code>FIREWALL_USER</code></a></td><td style="text-align:left">Firewall administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-optimizer-costs"><code>FLUSH_OPTIMIZER_COSTS</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-status"><code>FLUSH_STATUS</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-tables"><code>FLUSH_TABLES</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-user-resources"><code>FLUSH_USER_RESOURCES</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-admin"><code>GROUP_REPLICATION_ADMIN</code></a></td><td style="text-align:left">Replication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-stream"><code>GROUP_REPLICATION_STREAM</code></a></td><td style="text-align:left">Replication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_innodb-redo-log-archive"><code>INNODB_REDO_LOG_ARCHIVE</code></a></td><td style="text-align:left">Redo log archiving administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_ndb-stored-user"><code>NDB_STORED_USER</code></a></td><td style="text-align:left">NDB Cluster</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_passwordless-user-admin"><code>PASSWORDLESS_USER_ADMIN</code></a></td><td style="text-align:left">Authentication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_persist-ro-variables-admin"><code>PERSIST_RO_VARIABLES_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-applier"><code>REPLICATION_APPLIER</code></a></td><td style="text-align:left"><code>PRIVILEGE_CHECKS_USER</code> for a replication channel</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave-admin"><code>REPLICATION_SLAVE_ADMIN</code></a></td><td style="text-align:left">Replication administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-admin"><code>RESOURCE_GROUP_ADMIN</code></a></td><td style="text-align:left">Resource group administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-user"><code>RESOURCE_GROUP_USER</code></a></td><td style="text-align:left">Resource group administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin"><code>ROLE_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_session-variables-admin"><code>SESSION_VARIABLES_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_set-user-id"><code>SET_USER_ID</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-routine"><code>SHOW_ROUTINE</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user"><code>SYSTEM_USER</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-variables-admin"><code>SYSTEM_VARIABLES_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_table-encryption-admin"><code>TABLE_ENCRYPTION_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_version-token-admin"><code>VERSION_TOKEN_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr><tr><td style="text-align:left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin"><code>XA_RECOVER_ADMIN</code></a></td><td style="text-align:left">Server administration</td></tr></tbody></table></div><h1 id="图形化界面工具"><a href="#图形化界面工具" class="headerlink" title="图形化界面工具"></a>图形化界面工具</h1><ul><li>Workbench(免费): <a href="http://dev.mysql.com/downloads/workbench/">http://dev.mysql.com/downloads/workbench/</a></li><li>navicat(收费，试用版30天): <a href="https://www.navicat.com/en/download/navicat-for-mysql">https://www.navicat.com/en/download/navicat-for-mysql</a></li><li>Sequel Pro(开源免费，仅支持Mac OS): <a href="http://www.sequelpro.com/">http://www.sequelpro.com/</a></li><li>HeidiSQL(免费): <a href="http://www.heidisql.com/">http://www.heidisql.com/</a></li><li>phpMyAdmin(免费): <a href="https://www.phpmyadmin.net/">https://www.phpmyadmin.net/</a></li><li>SQLyog: <a href="https://sqlyog.en.softonic.com/">https://sqlyog.en.softonic.com/</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><ol><li>在SQL语句之后加上<code>\G</code>会将结果的表格形式转换成行文本形式</li><li>查看Mysql数据库占用空间：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema &quot;Database Name&quot;</span><br><span class="line">     , SUM(data_length + index_length) / (1024 * 1024) &quot;Database Size in MB&quot;</span><br><span class="line">FROM information_schema.TABLES</span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure></li></ol><h1 id="后续内容"><a href="#后续内容" class="headerlink" title="后续内容"></a>后续内容</h1><p>后续内容因为跟当前学习、工作计划有冲突，所以后续课程的学习计划会无限期推后。<br>目前的工作重点放在重做一个学习笔记网站，当然这是边做边学的，开发过程中遇到的难点和知识点我也会记录下来供大家学习。<br><strong>在此感谢B站同样爱学习的同学 @守心-人 提供的后续课程笔记，大家有条件一定要去给个star，你的每一个star和点赞都是我们前进的动力</strong><br><strong><a href="https://github.com/Buildings-Lei/mysql_note/blob/main/README.md">https://github.com/Buildings-Lei/mysql_note/blob/main/README.md</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> mysqldump </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据备份及还原 (二 )-xtrabackup工具</title>
      <link href="/2023/01/12/MySQL%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F%20(%E4%BA%8C%20)-xtrabackup%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/01/12/MySQL%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F%20(%E4%BA%8C%20)-xtrabackup%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>MySQL</code> 数据库备份和恢复是数据库管理员日常工作中的一项重要任务。在备份和恢复数据时，可以使用多种工具，其中之一就是 <code>xtrabackup</code>。<code>xtrabackup</code> 是一个 <code>MySQL</code> 数据库备份和还原工具，由 <code>Percona</code> 开发，它支持对 <code>InnoDB</code> 存储引擎的在线备份和恢复。</p><h2 id="安装-xtrabackup"><a href="#安装-xtrabackup" class="headerlink" title="安装 xtrabackup"></a>安装 xtrabackup</h2><p>首先，我们需要安装 <code>xtrabackup</code> 工具。<code>xtrabackup</code> 支持多种操作系统，如 <code>Linux</code>、<code>macOS</code> 和 <code>Windows</code>。</p><p>在 <code>Linux</code> 系统上，可以使用以下命令来安装 <code>xtrabackup</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.20/binary/tarball/percona-xtrabackup-2.4.20-Linux-x86_64.tar.gz</span><br><span class="line">$ tar -xvf percona-xtrabackup-2.4.20-Linux-x86_64.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> percona-xtrabackup-2.4.20-Linux-x86_64/bin</span><br><span class="line">$ <span class="built_in">sudo</span> <span class="built_in">cp</span> -r * /usr/local/bin/</span><br></pre></td></tr></table></figure><h2 id="备份-MySQL-数据库"><a href="#备份-MySQL-数据库" class="headerlink" title="备份 MySQL 数据库"></a>备份 MySQL 数据库</h2><p>使用 <code>xtrabackup</code> 备份 <code>MySQL</code> 数据库非常简单。只需要使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xtrabackup --backup --user=&lt;username&gt; --password=&lt;password&gt; --target-dir=/path/to/backup/directory</span><br></pre></td></tr></table></figure><p>其中，<code>&lt;username&gt;</code> 和 <code>&lt;password&gt;</code> 是 <code>MySQL</code> 数据库的用户名和密码。<code>/path/to/backup/directory</code> 是备份文件存放的目录。</p><p>在备份过程中，<code>xtrabackup</code> 工具会锁定 <code>InnoDB</code> 存储引擎，但不会锁定 <code>MyISAM</code> 存储引擎。因此，在备份之前，最好将所有表转换为 <code>InnoDB</code> 存储引擎。</p><p>备份完成后，备份目录中将包含备份文件和一个 <code>xtrabackup_info</code> 文件，其中包含有关备份过程的详细信息。</p><h2 id="恢复-MySQL-数据库"><a href="#恢复-MySQL-数据库" class="headerlink" title="恢复 MySQL 数据库"></a>恢复 MySQL 数据库</h2><p>使用 xtrabackup 进行数据库恢复也非常简单。只需要使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xtrabackup --prepare --target-dir=/path/to/backup/directory</span><br></pre></td></tr></table></figure><p>这个命令会将备份文件还原到原始数据目录中，并对备份文件进行必要的清理。在还原之前，确保 <code>MySQL</code> 数据库已经停止运行。</p><p>恢复完成后，启动 <code>MySQL</code> 数据库即可。</p><h2 id="使用-xtrabackup-进行增量备份"><a href="#使用-xtrabackup-进行增量备份" class="headerlink" title="使用 xtrabackup 进行增量备份"></a>使用 xtrabackup 进行增量备份</h2><p><code>xtrabackup</code> 还支持增量备份。增量备份只备份自上次备份以来发生更改的数据。这样可以大大减少备份文件的大小和备份时间。</p><p>以下是使用 <code>xtrabackup</code> 进行增量备份的步骤：</p><ul><li>首先进行完整备份，使用以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xtrabackup --backup --user=&lt;username&gt; --password=&lt;password&gt; --target-dir=/path/to/full/backup/directory</span><br></pre></td></tr></table></figure><ul><li>完整备份完成后，执行增量备份，使用以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xtrabackup --backup --user=&lt;username&gt; --password=&lt;password&gt; --target-dir=/path/to/incremental/backup/directory --incremental-basedir=/path/to/full/backup/directory</span><br></pre></td></tr></table></figure><p>其中，<code>/path/to/incremental/backup/directory</code> 是增量备份文件存放的目录，<code>/path/to/full/backup/directory</code> 是完整备份文件的目录。</p><ul><li>备份完成后，使用以下命令将备份文件还原到原始数据目录中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xtrabackup --prepare --target-dir=/path/to/full/backup/directory --incremental-dir=/path/to/incremental/backup/directory</span><br></pre></td></tr></table></figure><p>恢复完成后，启动 <code>MySQL</code> 数据库即可。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>xtrabackup</code> 是一个功能强大的 <code>MySQL</code> 数据库备份和恢复工具，支持对 <code>InnoDB</code> 存储引擎的在线备份和恢复。它还支持增量备份，可以大大减少备份文件的大小和备份时间。在备份和恢复 <code>MySQL</code> 数据库时，使用 <code>xtrabackup</code> 工具可以使任务变得更加简单和高效。</p><p>当然，在实际使用过程中，还有很多细节需要注意。例如，备份和恢复时需要考虑到 <code>MySQL</code> 数据库的版本和配置等因素。因此，在使用 <code>xtrabackup</code> 进行 <code>MySQL</code> 数据库备份和恢复之前，建议仔细阅读相关文档并进行充分的测试，以确保数据的安全和完整性。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> xtrabackup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用samba实现文件共享</title>
      <link href="/2023/01/10/Linux%E4%BD%BF%E7%94%A8samba%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
      <url>/2023/01/10/Linux%E4%BD%BF%E7%94%A8samba%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li><strong>samserver</strong> 10.15.3.42</li><li><strong>samclient</strong> 10.15.3.100</li></ul><h1 id="服务端-amp-amp-客户端"><a href="#服务端-amp-amp-客户端" class="headerlink" title="服务端&amp;&amp;客户端"></a>服务端&amp;&amp;客户端</h1><h2 id="1-新建共享文件夹-并赋权"><a href="#1-新建共享文件夹-并赋权" class="headerlink" title="1.新建共享文件夹,并赋权"></a>1.新建共享文件夹,并赋权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# <span class="built_in">mkdir</span> -p /datab/common</span><br><span class="line">[root@sambserver ~]# <span class="built_in">cd</span> /datab/</span><br><span class="line">[root@sambserver datab]# <span class="built_in">chmod</span> 777 common/</span><br></pre></td></tr></table></figure><h2 id="2-安装samba服务端"><a href="#2-安装samba服务端" class="headerlink" title="2.安装samba服务端"></a>2.安装samba服务端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# yum install samba -y</span><br></pre></td></tr></table></figure><h2 id="3-自定义共享目录-配置-etc-samba-smb-conf文件-写入common目录共享"><a href="#3-自定义共享目录-配置-etc-samba-smb-conf文件-写入common目录共享" class="headerlink" title="3.自定义共享目录,配置/etc/samba/smb.conf文件,写入common目录共享"></a>3.自定义共享目录,配置/etc/samba/smb.conf文件,写入common目录共享</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# vi /etc/samba/smb.conf</span><br><span class="line">[root@sambserver ~]# <span class="built_in">tail</span> /etc/samba/smb.conf</span><br><span class="line">        write list = @printadmin root</span><br><span class="line">        force group = @printadmin</span><br><span class="line">        create mask = 0664</span><br><span class="line">        directory mask = 0775</span><br><span class="line"></span><br><span class="line">[common]</span><br><span class="line">        comment = gonggong</span><br><span class="line">        path = /datab/common</span><br><span class="line">        writeable = <span class="built_in">yes</span></span><br><span class="line">        browsable = <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h2 id="3-查看状态"><a href="#3-查看状态" class="headerlink" title="3.查看状态"></a>3.查看状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# netstat -antp |grep smbd</span><br><span class="line">tcp        0      0 0.0.0.0:139             0.0.0.0:*               LISTEN      373/smbd            </span><br><span class="line">tcp        0      0 0.0.0.0:445             0.0.0.0:*               LISTEN      373/smbd            </span><br><span class="line">tcp6       0      0 :::139                  :::*                    LISTEN      373/smbd            </span><br><span class="line">tcp6       0      0 :::445                  :::*                    LISTEN      373/smbd  </span><br></pre></td></tr></table></figure><h2 id="4-新建账户"><a href="#4-新建账户" class="headerlink" title="4.新建账户"></a>4.新建账户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver  ~]# useradd -s /sbin/nologin smbser  <span class="comment"># 将linux系统用户设为samba用户,并按照提示设置密码</span></span><br><span class="line">[root@sambserver  ~]# pdbedit -a smbser</span><br><span class="line">new password:</span><br><span class="line">retype new password:</span><br><span class="line">Unix username:        smbser</span><br><span class="line">NT username:          </span><br><span class="line">Account Flags:        [U          ]</span><br><span class="line">User SID:             S-1-5-21-2348822856-2243297598-2784838519-1000</span><br><span class="line">Primary Group SID:    S-1-5-21-2348822856-2243297598-2784838519-513</span><br><span class="line">....</span><br><span class="line">[root@sambserver  ~]# pdbedit -L  <span class="comment"># 读取当前samba用户列表</span></span><br><span class="line">smbser:1001:</span><br></pre></td></tr></table></figure><h2 id="5-查看samba共享文件-默认是samba用户的家目录"><a href="#5-查看samba共享文件-默认是samba用户的家目录" class="headerlink" title="5.查看samba共享文件,默认是samba用户的家目录"></a>5.查看samba共享文件,默认是samba用户的家目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@sambclient ~]# smbclient -U smbser -L //10.15.3.42</span><br><span class="line">Enter SAMBA\smbser<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Sharename       Type      Comment</span></span><br><span class="line"><span class="string">        ---------       ----      -------</span></span><br><span class="line"><span class="string">        print$          Disk      Printer Drivers</span></span><br><span class="line"><span class="string">        common          Disk      gonggong           ##自定义共享文件夹目录</span></span><br><span class="line"><span class="string">        IPC$            IPC       IPC Service (Samba 4.10.16)</span></span><br><span class="line"><span class="string">        smbser          Disk      Home Directories   ##samba用户家目录</span></span><br><span class="line"><span class="string">Reconnecting with SMB1 for workgroup listing.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Server               Comment</span></span><br><span class="line"><span class="string">        ---------            -------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Workgroup            Master</span></span><br><span class="line"><span class="string">        ---------            -------</span></span><br></pre></td></tr></table></figure><h2 id="6-客户端client-登录查看共享文件-用户家目录"><a href="#6-客户端client-登录查看共享文件-用户家目录" class="headerlink" title="6.客户端client 登录查看共享文件(用户家目录)"></a>6.客户端client 登录查看共享文件(用户家目录)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[rootsambclient ~]# smbclient -U smbser //10.15.3.42/smbser</span><br><span class="line">Enter SAMBA\smbser<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Try &quot;help&quot; to get a list of possible commands.</span></span><br><span class="line"><span class="string">smb: \&gt; </span></span><br></pre></td></tr></table></figure><h2 id="7-客户端client-登录查看共享文件-自定义空间"><a href="#7-客户端client-登录查看共享文件-自定义空间" class="headerlink" title="7.客户端client 登录查看共享文件(自定义空间)"></a>7.客户端client 登录查看共享文件(自定义空间)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[rootsambclient ~]# smbclient -U smbser //10.15.3.42/common</span><br><span class="line">Enter SAMBA\smbser<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Try &quot;help&quot; to get a list of possible commands.</span></span><br><span class="line"><span class="string">smb: \&gt; </span></span><br></pre></td></tr></table></figure><h2 id="8-开机自启"><a href="#8-开机自启" class="headerlink" title="8.开机自启"></a>8.开机自启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# systemctl daemon-reload <span class="comment">#重新加载服务文件</span></span><br><span class="line">[root@sambserver ~]#systemctl start smb</span><br><span class="line">[root@sambserver ~]#systemctl <span class="built_in">enable</span> smb</span><br></pre></td></tr></table></figure><h2 id="9-查看配置是否正确"><a href="#9-查看配置是否正确" class="headerlink" title="9.查看配置是否正确"></a>9.查看配置是否正确</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# testparm</span><br><span class="line">Load smb config files from /etc/samba/smb.conf</span><br><span class="line">Loaded services file OK.</span><br></pre></td></tr></table></figure><h1 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h1><h2 id="1-client端新建挂载点pro-common，根目录下创建-pro-common"><a href="#1-client端新建挂载点pro-common，根目录下创建-pro-common" class="headerlink" title="1.client端新建挂载点pro_common，根目录下创建 pro_common"></a>1.client端新建挂载点pro_common，根目录下创建 pro_common</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@client ~]# <span class="built_in">mkdir</span> /pro_common</span><br></pre></td></tr></table></figure><h2 id="2-永久挂载，编辑client端fstab文件，重启服务器查看挂载情况"><a href="#2-永久挂载，编辑client端fstab文件，重启服务器查看挂载情况" class="headerlink" title="2.永久挂载，编辑client端fstab文件，重启服务器查看挂载情况"></a>2.永久挂载，编辑client端fstab文件，重启服务器查看挂载情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@client ~]# vim /etc/fstab <span class="comment">##添加挂载内容</span></span><br><span class="line">//10.15.3.42/common  /pro_common  cifs  defaults,username=smbser,password=1234</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="1-查看client端挂载的共享文件夹，新建测试文件"><a href="#1-查看client端挂载的共享文件夹，新建测试文件" class="headerlink" title="1.查看client端挂载的共享文件夹，新建测试文件"></a>1.查看client端挂载的共享文件夹，新建测试文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@client ~]# <span class="built_in">cd</span> /pro_common/</span><br><span class="line"> <span class="comment"># 新建测试文件aaa</span></span><br><span class="line">[root@client ~]# <span class="built_in">touch</span> aaa</span><br><span class="line"> <span class="comment"># 查看当前文件列表</span></span><br><span class="line">[root@nues pro_common]# <span class="built_in">ls</span></span><br><span class="line">aaa</span><br></pre></td></tr></table></figure><h2 id="2-在server服务端查看测试文件"><a href="#2-在server服务端查看测试文件" class="headerlink" title="2.在server服务端查看测试文件"></a>2.在server服务端查看测试文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@sambserver ~]# <span class="built_in">cd</span> /datab/</span><br><span class="line">[root@prometheus datab]# <span class="built_in">ls</span></span><br><span class="line">common</span><br><span class="line">[root@sambserver datab]# <span class="built_in">cd</span> common/</span><br><span class="line">[root@sambserver common]# <span class="built_in">ls</span></span><br><span class="line">aaa</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Samba </tag>
            
            <tag> 文件共享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana导入node_exporter图标后，页面显示Panel plugin not found:table-old</title>
      <link href="/2023/01/10/Grafana%E5%AF%BC%E5%85%A5node_exporter%E5%9B%BE%E6%A0%87%E5%90%8E%EF%BC%8C%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BAPanel%20plugin%20not%20foundtable-old%20-%20%E5%89%AF%E6%9C%AC%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2023/01/10/Grafana%E5%AF%BC%E5%85%A5node_exporter%E5%9B%BE%E6%A0%87%E5%90%8E%EF%BC%8C%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BAPanel%20plugin%20not%20foundtable-old%20-%20%E5%89%AF%E6%9C%AC%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><p><code>Grafana</code>导入<code>node_exporter</code>图标后，页面显示<code>Panel plugin not found:table-old</code></p><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><ul><li>可能是<code>Grafana</code>的版本比较老，建议将版本升级为<code>7.x</code></li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>升级<code>Grafana</code></p><h3 id="查看Grafana版本"><a href="#查看Grafana版本" class="headerlink" title="查看Grafana版本"></a>查看Grafana版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]# grafana-server -v</span><br><span class="line">Version 6.6.0 (commit: 5c11bbdfb4, branch: HEAD)</span><br></pre></td></tr></table></figure><h3 id="下载、升级"><a href="#下载、升级" class="headerlink" title="下载、升级"></a>下载、升级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]# wget https://dl.grafana.com/oss/release/grafana-7.2.1-1.x86_64.rpm</span><br><span class="line">[root@prometheus ~]# yum localinstall grafana-7.2.1-1.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]# systemctl start grafana-server</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">刷新页面即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每天一个Linux命令--域名查询nslookup</title>
      <link href="/2023/01/08/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--%E5%9F%9F%E5%90%8D%E6%9F%A5%E8%AF%A2nslookup/"/>
      <url>/2023/01/08/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--%E5%9F%9F%E5%90%8D%E6%9F%A5%E8%AF%A2nslookup/</url>
      
        <content type="html"><![CDATA[<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup [参数] [域名]</span><br></pre></td></tr></table></figure><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-sil</td><td>不显示任何警告信息</td></tr><tr><td>exit</td><td>退出命令</td></tr><tr><td>server</td><td>指定解析域名的服务器地址</td></tr><tr><td>set type=soa</td><td>设置查询域名授权起始信息</td></tr><tr><td>set type=a</td><td>设置查询域名A记录</td></tr><tr><td>set type=mx</td><td>设置查询域名邮件交换记录</td></tr></tbody></table></div><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="在非交互模式下查询域名基本信息"><a href="#在非交互模式下查询域名基本信息" class="headerlink" title="在非交互模式下查询域名基本信息"></a>在非交互模式下查询域名基本信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nslookup dosbat.com</span><br><span class="line">Server:         183.60.83.19</span><br><span class="line">Address:        183.60.83.19#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:   dosbat.com</span><br><span class="line">Address: 42.192.42.243</span><br></pre></td></tr></table></figure><h2 id="进入交互模式下查询域名信息"><a href="#进入交互模式下查询域名信息" class="headerlink" title="进入交互模式下查询域名信息"></a>进入交互模式下查询域名信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nslookup</span><br><span class="line">&gt; dosbat.com</span><br><span class="line">Server:         183.60.83.19</span><br><span class="line">Address:        183.60.83.19#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:   dosbat.com</span><br><span class="line">Address: 42.192.42.243</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h2 id="在交互模式下使用“set”选项设置域名查询类型进行查询"><a href="#在交互模式下使用“set”选项设置域名查询类型进行查询" class="headerlink" title="在交互模式下使用“set”选项设置域名查询类型进行查询"></a>在交互模式下使用“set”选项设置域名查询类型进行查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nslookup</span><br><span class="line">&gt; <span class="built_in">set</span> <span class="built_in">type</span>=mx</span><br><span class="line">&gt; dosbat.com</span><br><span class="line">Server:         183.60.83.19</span><br><span class="line">Address:        183.60.83.19#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">dosbat.com      mail exchanger = 10 mx.ym.163.com.</span><br><span class="line"></span><br><span class="line">Authoritative answers can be found from:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nslookup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每天一个Linux命令--处理编辑文本文件sed</title>
      <link href="/2023/01/07/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--%E5%A4%84%E7%90%86%E7%BC%96%E8%BE%91%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6sed/"/>
      <url>/2023/01/07/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--%E5%A4%84%E7%90%86%E7%BC%96%E8%BE%91%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6sed/</url>
      
        <content type="html"><![CDATA[<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p><code>sed [参数]</code></p><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><div class="table-container"><table><thead><tr><th>参数</th><th>定义</th></tr></thead><tbody><tr><td>-e或—expression</td><td>以选项中指定的script来处理输入的文本文件</td></tr><tr><td>-f或—file</td><td>以选项中指定的script文件来处理输入的文本文件</td></tr><tr><td>-h或—help</td><td>显示帮助</td></tr><tr><td>-n或—quiet或—silent</td><td>仅显示script处理后的结果</td></tr><tr><td>-V或—version</td><td>显示版本信息</td></tr></tbody></table></div><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="在file文件的第四行后添加一行，并将结果输出到标准输出"><a href="#在file文件的第四行后添加一行，并将结果输出到标准输出" class="headerlink" title="在file文件的第四行后添加一行，并将结果输出到标准输出"></a>在file文件的第四行后添加一行，并将结果输出到标准输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# sed -e 4a\newline file </span><br><span class="line">HELLO LINUX!   </span><br><span class="line">Linux is a free unix-type opterating system.  </span><br><span class="line">This is a linux testfile!  </span><br><span class="line">Linux <span class="built_in">test</span>  </span><br><span class="line">newline </span><br></pre></td></tr></table></figure><h3 id="将-dir-的内容列出并且列印行号，同时删除第-2-5-行"><a href="#将-dir-的内容列出并且列印行号，同时删除第-2-5-行" class="headerlink" title="将 /dir 的内容列出并且列印行号，同时删除第 2~5 行"></a>将 /dir 的内容列出并且列印行号，同时删除第 2~5 行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">nl</span> /dir | sed <span class="string">&#x27;2,5d&#x27;</span></span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">6 <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br></pre></td></tr></table></figure><h3 id="在第二行后面加入两行字，例如-Drink-tea-or-…-与-drink-beer"><a href="#在第二行后面加入两行字，例如-Drink-tea-or-…-与-drink-beer" class="headerlink" title="在第二行后面加入两行字，例如 Drink tea or ….. 与 drink beer"></a>在第二行后面加入两行字，例如 Drink tea or ….. 与 drink beer</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">nl</span> /dir | sed <span class="string">&#x27;2a Drink tea or ......\</span></span><br><span class="line"><span class="string">&gt; drink beer ?&#x27;</span></span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">Drink tea or ......</span><br><span class="line">drink beer ?</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="将第2-5行的内容取代成为No-2-5-number"><a href="#将第2-5行的内容取代成为No-2-5-number" class="headerlink" title="将第2-5行的内容取代成为No 2-5 number"></a>将第2-5行的内容取代成为No 2-5 number</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">nl</span> /dir | sed <span class="string">&#x27;2,5c No 2-5 number&#x27;</span></span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">No 2-5 number</span><br><span class="line">6 <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br></pre></td></tr></table></figure><h3 id="以行为单位的显示"><a href="#以行为单位的显示" class="headerlink" title="以行为单位的显示"></a>以行为单位的显示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">nl</span> /dir | sed -n <span class="string">&#x27;5,7p&#x27;</span></span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">6 <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每天一个Linux命令--过滤器xargs</title>
      <link href="/2023/01/05/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--%E8%BF%87%E6%BB%A4%E5%99%A8xargs/"/>
      <url>/2023/01/05/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--%E8%BF%87%E6%BB%A4%E5%99%A8xargs/</url>
      
        <content type="html"><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xargs [参数]</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><div class="table-container"><table><thead><tr><th>参数</th><th>定义</th></tr></thead><tbody><tr><td>-n</td><td>多行输出</td></tr><tr><td>-d</td><td>自定义一个定界符</td></tr><tr><td>-I</td><td>指定一个替换字符串{}</td></tr><tr><td>-t</td><td>打印出 xargs 执行的命令</td></tr><tr><td>-p</td><td>执行每一个命令时弹出确认</td></tr></tbody></table></div><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="多行输出"><a href="#多行输出" class="headerlink" title="多行输出"></a>多行输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]#<span class="built_in">cat</span> test.txt | xargs -n3</span><br></pre></td></tr></table></figure><h3 id="自定义一个定界符："><a href="#自定义一个定界符：" class="headerlink" title="自定义一个定界符："></a>自定义一个定界符：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]#<span class="built_in">echo</span> <span class="string">&quot;nameXnameXnameXname&quot;</span> | xargs -dX</span><br><span class="line"></span><br><span class="line">name name name name</span><br></pre></td></tr></table></figure><h3 id="指定一个替换字符串"><a href="#指定一个替换字符串" class="headerlink" title="指定一个替换字符串"></a>指定一个替换字符串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]#<span class="built_in">cat</span> arg.txt | xargs -I &#123;&#125; ./sk.sh -p &#123;&#125; -l</span><br><span class="line">-p aaa -l</span><br><span class="line">-p bbb -l</span><br><span class="line">-p ccc -l</span><br></pre></td></tr></table></figure><h3 id="打印出-xargs-执行的命令"><a href="#打印出-xargs-执行的命令" class="headerlink" title="打印出 xargs 执行的命令"></a>打印出 xargs 执行的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]#<span class="built_in">ls</span> | xargs -t -I&#123;&#125; <span class="built_in">echo</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="执行每一个命令时弹出确认，当你需要非常准确的确认每一次操作时"><a href="#执行每一个命令时弹出确认，当你需要非常准确的确认每一次操作时" class="headerlink" title="执行每一个命令时弹出确认，当你需要非常准确的确认每一次操作时"></a>执行每一个命令时弹出确认，当你需要非常准确的确认每一次操作时</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]#find . -maxdepth 1 -name <span class="string">&quot;*.log&quot;</span> | xargs -p -I&#123;&#125; <span class="built_in">rm</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xargs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux运维工程师：100道面试题整理</title>
      <link href="/2023/01/05/Linux%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%9A100%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/"/>
      <url>/2023/01/05/Linux%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%9A100%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-cron-后台常驻程序-daemon-用于？"><a href="#1-cron-后台常驻程序-daemon-用于？" class="headerlink" title="1.cron 后台常驻程序 (daemon) 用于？"></a>1.cron 后台常驻程序 (daemon) 用于？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 负责文件在网络中的共享</span><br><span class="line">B. 管理打印子系统</span><br><span class="line">C. 跟踪管理系统信息和错误</span><br><span class="line">D. 管理系统日常任务的调度</span><br></pre></td></tr></table></figure><h2 id="2-在大多数Linux发行版本中，以下哪个属于块设备-block-devices-？"><a href="#2-在大多数Linux发行版本中，以下哪个属于块设备-block-devices-？" class="headerlink" title="2.在大多数Linux发行版本中，以下哪个属于块设备 (block devices)？"></a>2.在大多数Linux发行版本中，以下哪个属于块设备 (block devices)？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 串行口</span><br><span class="line">B. 硬盘</span><br><span class="line">C. 虚拟终端</span><br><span class="line">D. 打印机</span><br></pre></td></tr></table></figure><h2 id="3-下面哪个Linux命令可以一次显示一页内容？"><a href="#3-下面哪个Linux命令可以一次显示一页内容？" class="headerlink" title="3.下面哪个Linux命令可以一次显示一页内容？"></a>3.下面哪个Linux命令可以一次显示一页内容？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. pause</span><br><span class="line">B. cat</span><br><span class="line">C. more</span><br><span class="line">D. grep</span><br></pre></td></tr></table></figure><h2 id="4-怎样了解您在当前目录下还有多大空间？"><a href="#4-怎样了解您在当前目录下还有多大空间？" class="headerlink" title="4.怎样了解您在当前目录下还有多大空间？"></a>4.怎样了解您在当前目录下还有多大空间？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. Use df</span><br><span class="line">B. Use du /</span><br><span class="line">C. Use du .</span><br><span class="line">D. Use df .</span><br></pre></td></tr></table></figure><h2 id="5-怎样更改一个文件的权限设置？"><a href="#5-怎样更改一个文件的权限设置？" class="headerlink" title="5.怎样更改一个文件的权限设置？"></a>5.怎样更改一个文件的权限设置？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. attrib</span><br><span class="line">B. chmod</span><br><span class="line">C. change</span><br><span class="line">D. file</span><br></pre></td></tr></table></figure><h2 id="6-假如您需要找出-etc-my-conf-文件属于哪个包-package-，您可以执行？"><a href="#6-假如您需要找出-etc-my-conf-文件属于哪个包-package-，您可以执行？" class="headerlink" title="6.假如您需要找出 /etc/my.conf 文件属于哪个包 (package) ，您可以执行？"></a>6.假如您需要找出 /etc/my.conf 文件属于哪个包 (package) ，您可以执行？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rpm -q /etc/my.conf</span><br><span class="line">B. rpm -requires /etc/my.conf</span><br><span class="line">C. rpm -qf /etc/my.conf</span><br><span class="line">D. rpm -q | grep /etc/my.conf</span><br></pre></td></tr></table></figure><h2 id="7-假如当前系统是在-level-3-运行，怎样不重启系统就可转换到-level-5-运行？"><a href="#7-假如当前系统是在-level-3-运行，怎样不重启系统就可转换到-level-5-运行？" class="headerlink" title="7.假如当前系统是在 level 3 运行，怎样不重启系统就可转换到 level 5 运行？"></a>7.假如当前系统是在 level 3 运行，怎样不重启系统就可转换到 level 5 运行？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. Set level = 5</span><br><span class="line">B. telinit 5</span><br><span class="line">C. run 5</span><br><span class="line">D. ALT-F7-5</span><br></pre></td></tr></table></figure><h2 id="8-那个命令用于改变-IDE-硬盘的设置？"><a href="#8-那个命令用于改变-IDE-硬盘的设置？" class="headerlink" title="8.那个命令用于改变 IDE 硬盘的设置？"></a>8.那个命令用于改变 IDE 硬盘的设置？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. hdparam</span><br><span class="line">B. ideconfig</span><br><span class="line">C. hdparm</span><br><span class="line">D. hddparm</span><br></pre></td></tr></table></figure><h2 id="9-下面哪个命令可以列出定义在以后特定时间运行一次的所有任务？"><a href="#9-下面哪个命令可以列出定义在以后特定时间运行一次的所有任务？" class="headerlink" title="9.下面哪个命令可以列出定义在以后特定时间运行一次的所有任务？"></a>9.下面哪个命令可以列出定义在以后特定时间运行一次的所有任务？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. atq</span><br><span class="line">B. cron</span><br><span class="line">C. batch</span><br><span class="line">D. at</span><br></pre></td></tr></table></figure><h2 id="10-下面命令的作用是：set-PS1-”-uwt-“-export-PS1"><a href="#10-下面命令的作用是：set-PS1-”-uwt-“-export-PS1" class="headerlink" title="10.下面命令的作用是：set PS1=”[uwt]$“ ; export PS1"></a>10.下面命令的作用是：set PS1=”[uwt]$“ ; export PS1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 改变错误信息提示</span><br><span class="line">B. 改变命令提示符</span><br><span class="line">C. 改变一些终端参数</span><br><span class="line">D. 改变辅助命令提示符</span><br></pre></td></tr></table></figure><h2 id="11-作为一个管理员，你希望在每一个新用户的目录下放一个文件-bashrc-，那么你应该在哪个目录下放这个文件，以便于新用户创建主目录时自动将这个文件复制到自己的目录下。"><a href="#11-作为一个管理员，你希望在每一个新用户的目录下放一个文件-bashrc-，那么你应该在哪个目录下放这个文件，以便于新用户创建主目录时自动将这个文件复制到自己的目录下。" class="headerlink" title="11.作为一个管理员，你希望在每一个新用户的目录下放一个文件 .bashrc ，那么你应该在哪个目录下放这个文件，以便于新用户创建主目录时自动将这个文件复制到自己的目录下。"></a>11.作为一个管理员，你希望在每一个新用户的目录下放一个文件 .bashrc ，那么你应该在哪个目录下放这个文件，以便于新用户创建主目录时自动将这个文件复制到自己的目录下。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/skel/</span><br><span class="line">B. /etc/default/</span><br><span class="line">C. /etc/defaults/</span><br><span class="line">D. /etc/profile.d/</span><br></pre></td></tr></table></figure><h2 id="12-在bash中，export命令的作用是："><a href="#12-在bash中，export命令的作用是：" class="headerlink" title="12.在bash中，export命令的作用是："></a>12.在bash中，export命令的作用是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 在子shell中运行命令</span><br><span class="line">B. 使在子shell中可以使用命令历史记录</span><br><span class="line">C. 为其它应用程序设置环境变量</span><br><span class="line">D. 提供NFS分区给网络中的其它系统使用</span><br></pre></td></tr></table></figure><h2 id="13-在使用了shadow口令的系统中，-etc-passwd和-etc-shadow两个文件的权限正确的是："><a href="#13-在使用了shadow口令的系统中，-etc-passwd和-etc-shadow两个文件的权限正确的是：" class="headerlink" title="13.在使用了shadow口令的系统中，/etc/passwd和/etc/shadow两个文件的权限正确的是："></a>13.在使用了shadow口令的系统中，/etc/passwd和/etc/shadow两个文件的权限正确的是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. -rw-r----- , -r--------</span><br><span class="line">B. -rw-r--r-- , -r--r--r--</span><br><span class="line">C. -rw-r--r-- , -r--------</span><br><span class="line">D. -rw-r--rw- , -r-----r--</span><br></pre></td></tr></table></figure><h2 id="14．下面哪个参数可以删除一个用户并同时删除用户的主目录？"><a href="#14．下面哪个参数可以删除一个用户并同时删除用户的主目录？" class="headerlink" title="14．下面哪个参数可以删除一个用户并同时删除用户的主目录？"></a>14．下面哪个参数可以删除一个用户并同时删除用户的主目录？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rmuser -r</span><br><span class="line">B. deluser -r</span><br><span class="line">C. userdel -r</span><br><span class="line">D. usermgr -r</span><br></pre></td></tr></table></figure><h2 id="15．有一个备份程序mybackup，需要在周一至周五下午1点和晚上8点各运行一次，下面哪条crontab的项可以完成这项工作？"><a href="#15．有一个备份程序mybackup，需要在周一至周五下午1点和晚上8点各运行一次，下面哪条crontab的项可以完成这项工作？" class="headerlink" title="15．有一个备份程序mybackup，需要在周一至周五下午1点和晚上8点各运行一次，下面哪条crontab的项可以完成这项工作？"></a>15．有一个备份程序mybackup，需要在周一至周五下午1点和晚上8点各运行一次，下面哪条crontab的项可以完成这项工作？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 0 13,20 * * 1,5 mybackup</span><br><span class="line">B. 0 13,20 * * 1,2,3,4,5 mybackup</span><br><span class="line">C. * 13,20 * * 1,2,3,4,5 mybackup</span><br><span class="line">D. 0 13,20 1,5 * *  mybackup</span><br></pre></td></tr></table></figure><h2 id="16．如何从当前系统中卸载一个已装载的文件系统"><a href="#16．如何从当前系统中卸载一个已装载的文件系统" class="headerlink" title="16．如何从当前系统中卸载一个已装载的文件系统"></a>16．如何从当前系统中卸载一个已装载的文件系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. umount</span><br><span class="line">B. dismount</span><br><span class="line">C. mount -u</span><br><span class="line">D. 从 /etc/fstab 中删除这个文件系统项</span><br></pre></td></tr></table></figure><h2 id="17．如果你的umask设置为022，缺省的你创建的文件的权限为："><a href="#17．如果你的umask设置为022，缺省的你创建的文件的权限为：" class="headerlink" title="17．如果你的umask设置为022，缺省的你创建的文件的权限为："></a>17．如果你的umask设置为022，缺省的你创建的文件的权限为：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. ----w--w-</span><br><span class="line">B. -w--w----</span><br><span class="line">C. r-xr-x---</span><br><span class="line">D. rw-r--r--</span><br></pre></td></tr></table></figure><h2 id="18．在一条命令中如何查找一个二进制命令-Xconfigurator-的路径？"><a href="#18．在一条命令中如何查找一个二进制命令-Xconfigurator-的路径？" class="headerlink" title="18．在一条命令中如何查找一个二进制命令 Xconfigurator 的路径？"></a>18．在一条命令中如何查找一个二进制命令 Xconfigurator 的路径？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. apropos Xconfigurator</span><br><span class="line">B. find Xconfigurator</span><br><span class="line">C. where Xconfigurator</span><br><span class="line">D. which Xconfigurator</span><br></pre></td></tr></table></figure><h2 id="19．哪一条命令用来装载所有在-etc-fstab-中定义的文件系统？"><a href="#19．哪一条命令用来装载所有在-etc-fstab-中定义的文件系统？" class="headerlink" title="19．哪一条命令用来装载所有在 /etc/fstab 中定义的文件系统？"></a>19．哪一条命令用来装载所有在 /etc/fstab 中定义的文件系统？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. amount</span><br><span class="line">B. mount -a</span><br><span class="line">C. fmount</span><br><span class="line">D. mount -f</span><br></pre></td></tr></table></figure><h2 id="20．运行一个脚本，用户不需要什么样的权限？"><a href="#20．运行一个脚本，用户不需要什么样的权限？" class="headerlink" title="20．运行一个脚本，用户不需要什么样的权限？"></a>20．运行一个脚本，用户不需要什么样的权限？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. read</span><br><span class="line">B. write</span><br><span class="line">C. execute</span><br><span class="line">D. browse on the directory</span><br></pre></td></tr></table></figure><h2 id="21．在Linux中，如何标识接在IDE0上的slave硬盘的第2个扩展分区？"><a href="#21．在Linux中，如何标识接在IDE0上的slave硬盘的第2个扩展分区？" class="headerlink" title="21．在Linux中，如何标识接在IDE0上的slave硬盘的第2个扩展分区？"></a>21．在Linux中，如何标识接在IDE0上的slave硬盘的第2个扩展分区？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /dev/hdb2</span><br><span class="line">B. /dev/hd1b2</span><br><span class="line">C. /dev/hdb6</span><br><span class="line">D. /dev/hd1b6</span><br></pre></td></tr></table></figure><h2 id="22．在应用程序起动时，如何设置进程的优先级？"><a href="#22．在应用程序起动时，如何设置进程的优先级？" class="headerlink" title="22．在应用程序起动时，如何设置进程的优先级？"></a>22．在应用程序起动时，如何设置进程的优先级？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. priority</span><br><span class="line">B. nice</span><br><span class="line">C. renice</span><br><span class="line">D. setpri</span><br></pre></td></tr></table></figure><h2 id="23．在-bash-中-在一条命令后加入”1-gt-amp-2”-意味着："><a href="#23．在-bash-中-在一条命令后加入”1-gt-amp-2”-意味着：" class="headerlink" title="23．在 bash 中, 在一条命令后加入”1&gt;&amp;2” 意味着："></a>23．在 bash 中, 在一条命令后加入”1&gt;&amp;2” 意味着：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 标准错误输出重定向到标准输入</span><br><span class="line">B. 标准输入重定向到标准错误输出</span><br><span class="line">C. 标准输出重定向到标准错误输出</span><br><span class="line">D. 标准输出重定向到标准输入</span><br></pre></td></tr></table></figure><h2 id="24．下面哪条命令可以把f1-txt复制为f2-txt"><a href="#24．下面哪条命令可以把f1-txt复制为f2-txt" class="headerlink" title="24．下面哪条命令可以把f1.txt复制为f2.txt?"></a>24．下面哪条命令可以把f1.txt复制为f2.txt?</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. cp f1.txt | f2.txt</span><br><span class="line">B. cat f1.txt | f2.txt</span><br><span class="line">C. cat f1.txt &gt; f2.txt</span><br><span class="line">D. copy f1.txt | f2.txt</span><br></pre></td></tr></table></figure><h2 id="25．显示一个文件最后几行的命令是："><a href="#25．显示一个文件最后几行的命令是：" class="headerlink" title="25．显示一个文件最后几行的命令是："></a>25．显示一个文件最后几行的命令是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. tac</span><br><span class="line">B. tail</span><br><span class="line">C. rear</span><br><span class="line">D. last</span><br></pre></td></tr></table></figure><h2 id="26-如何快速切换到用户John的主目录下？"><a href="#26-如何快速切换到用户John的主目录下？" class="headerlink" title="26.如何快速切换到用户John的主目录下？"></a>26.如何快速切换到用户John的主目录下？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. cd @John</span><br><span class="line">B. cd #John</span><br><span class="line">C. cd &amp;John</span><br><span class="line">D. cd ~John</span><br></pre></td></tr></table></figure><h2 id="27-把一个流中所有字符转换成大写字符，可以使用下面哪个命令？"><a href="#27-把一个流中所有字符转换成大写字符，可以使用下面哪个命令？" class="headerlink" title="27.把一个流中所有字符转换成大写字符，可以使用下面哪个命令？"></a>27.把一个流中所有字符转换成大写字符，可以使用下面哪个命令？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. tr a-z A-Z</span><br><span class="line">B. tac a-z A-Z</span><br><span class="line">C.sed /a-z/A-Z</span><br><span class="line">D. sed --toupper</span><br></pre></td></tr></table></figure><h2 id="28-使用什么命令可以查看Linux的启动信息？"><a href="#28-使用什么命令可以查看Linux的启动信息？" class="headerlink" title="28.使用什么命令可以查看Linux的启动信息？"></a>28.使用什么命令可以查看Linux的启动信息？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. mesg -d</span><br><span class="line">B. dmesg</span><br><span class="line">C. cat /etc/mesg</span><br><span class="line">D. cat /var/mesg</span><br></pre></td></tr></table></figure><h2 id="29-运行级定义在："><a href="#29-运行级定义在：" class="headerlink" title="29.运行级定义在："></a>29.运行级定义在：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. in the kernel</span><br><span class="line">B. in /etc/inittab</span><br><span class="line">C. in /etc/runlevels</span><br><span class="line">D. using the rl command</span><br></pre></td></tr></table></figure><h2 id="30-如何装载-mount-上在-etc-fstab-文件中定义的所有文件系统？"><a href="#30-如何装载-mount-上在-etc-fstab-文件中定义的所有文件系统？" class="headerlink" title="30.如何装载(mount)上在 /etc/fstab 文件中定义的所有文件系统？"></a>30.如何装载(mount)上在 /etc/fstab 文件中定义的所有文件系统？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. mount -a</span><br><span class="line">B. mount /mnt/*</span><br><span class="line">C. mount</span><br><span class="line">D. mount /etc/fstab</span><br></pre></td></tr></table></figure><h2 id="31-使用ln命令将生成了一个指向文件old的符号链接new，如果你将文件old删除，是否还能够访问文件中的数据？"><a href="#31-使用ln命令将生成了一个指向文件old的符号链接new，如果你将文件old删除，是否还能够访问文件中的数据？" class="headerlink" title="31.使用ln命令将生成了一个指向文件old的符号链接new，如果你将文件old删除，是否还能够访问文件中的数据？"></a>31.使用ln命令将生成了一个指向文件old的符号链接new，如果你将文件old删除，是否还能够访问文件中的数据？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 不可能再访问</span><br><span class="line">B. 仍然可以访问</span><br><span class="line">C. 能否访问取决于文件的所有者</span><br><span class="line">D. 能否访问取决于文件的权限</span><br></pre></td></tr></table></figure><h2 id="32-xt2fs文件系统中，缺省的为root用户保留多大的空间？"><a href="#32-xt2fs文件系统中，缺省的为root用户保留多大的空间？" class="headerlink" title="32.xt2fs文件系统中，缺省的为root用户保留多大的空间？"></a>32.xt2fs文件系统中，缺省的为root用户保留多大的空间？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 3%</span><br><span class="line">B. 5%</span><br><span class="line">C. 10%</span><br><span class="line">D. 15%</span><br></pre></td></tr></table></figure><h2 id="33-哪个命令用来显示系统中各个分区中inode的使用情况？"><a href="#33-哪个命令用来显示系统中各个分区中inode的使用情况？" class="headerlink" title="33.哪个命令用来显示系统中各个分区中inode的使用情况？"></a>33.哪个命令用来显示系统中各个分区中inode的使用情况？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. df -i</span><br><span class="line">B. df -H</span><br><span class="line">C. free -b</span><br><span class="line">D. du -a -c /</span><br></pre></td></tr></table></figure><h2 id="34-多数Linux发行版本中，图形方式的运行级定义为？"><a href="#34-多数Linux发行版本中，图形方式的运行级定义为？" class="headerlink" title="34.多数Linux发行版本中，图形方式的运行级定义为？"></a>34.多数Linux发行版本中，图形方式的运行级定义为？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 1</span><br><span class="line">B. 2</span><br><span class="line">C. 3</span><br><span class="line">D. 5</span><br></pre></td></tr></table></figure><h2 id="35-在系统文档中找到关于print这个单词的所有说明？"><a href="#35-在系统文档中找到关于print这个单词的所有说明？" class="headerlink" title="35.在系统文档中找到关于print这个单词的所有说明？"></a>35.在系统文档中找到关于print这个单词的所有说明？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. man print</span><br><span class="line">B. which print</span><br><span class="line">C. locate print</span><br><span class="line">D. apropos print</span><br></pre></td></tr></table></figure><h2 id="36-man-5-passwd-含义是？"><a href="#36-man-5-passwd-含义是？" class="headerlink" title="36.man 5 passwd 含义是？"></a>36.man 5 passwd 含义是？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 显示 passwd 命令的使用方法</span><br><span class="line">B. 显示 passwd 文件的结构</span><br><span class="line">C. 显示 passwd 命令的说明的前五行</span><br><span class="line">D. 显示关于passwd的前五处说明文档。</span><br></pre></td></tr></table></figure><h2 id="37-如何在文件中查找显示所有以”-”打头的行？"><a href="#37-如何在文件中查找显示所有以”-”打头的行？" class="headerlink" title="37.如何在文件中查找显示所有以”*”打头的行？"></a>37.如何在文件中查找显示所有以”*”打头的行？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. find \* file</span><br><span class="line">B. wc -l * &lt; file</span><br><span class="line">C. grep -n * file</span><br><span class="line">D. grep ‘^\*’ file</span><br></pre></td></tr></table></figure><h2 id="38-在ps命令中什么参数是用来显示所有用户的进程的？"><a href="#38-在ps命令中什么参数是用来显示所有用户的进程的？" class="headerlink" title="38.在ps命令中什么参数是用来显示所有用户的进程的？"></a>38.在ps命令中什么参数是用来显示所有用户的进程的？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. a</span><br><span class="line">B. b</span><br><span class="line">C. u</span><br><span class="line">D. x</span><br></pre></td></tr></table></figure><h2 id="39-显示二进制文件的命令是？"><a href="#39-显示二进制文件的命令是？" class="headerlink" title="39.显示二进制文件的命令是？"></a>39.显示二进制文件的命令是？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. od</span><br><span class="line">B. vil</span><br><span class="line">C. view</span><br><span class="line">D. binview</span><br></pre></td></tr></table></figure><h2 id="40-如何显示Linux系统中注册的用户数（包含系统用户）？"><a href="#40-如何显示Linux系统中注册的用户数（包含系统用户）？" class="headerlink" title="40.如何显示Linux系统中注册的用户数（包含系统用户）？"></a>40.如何显示Linux系统中注册的用户数（包含系统用户）？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. account -l</span><br><span class="line">B. nl /etc/passwd |head</span><br><span class="line">C. wc --users /etc/passwd</span><br><span class="line">D. wc --lines /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="41-在一行结束位置加上什么符号，表示未结束，下一行继续？"><a href="#41-在一行结束位置加上什么符号，表示未结束，下一行继续？" class="headerlink" title="41.在一行结束位置加上什么符号，表示未结束，下一行继续？"></a>41.在一行结束位置加上什么符号，表示未结束，下一行继续？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /</span><br><span class="line">B. \</span><br><span class="line">C. ;</span><br><span class="line">D. |</span><br></pre></td></tr></table></figure><h2 id="42-命令-kill-9-的含义是："><a href="#42-命令-kill-9-的含义是：" class="headerlink" title="42.命令 kill 9 的含义是："></a>42.命令 kill 9 的含义是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. kills the process whose PID is 9.</span><br><span class="line">B. kills all processes belonging to UID 9.</span><br><span class="line">C. sends SIGKILL to the process whose PID is 9.</span><br><span class="line">D. sends SIGTERM to the process whose PID IS 9.</span><br></pre></td></tr></table></figure><h2 id="43-如何删除一个非空子目录-tmp？"><a href="#43-如何删除一个非空子目录-tmp？" class="headerlink" title="43.如何删除一个非空子目录/tmp？"></a>43.如何删除一个非空子目录/tmp？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. del /tmp/*</span><br><span class="line">B. rm -rf /tmp</span><br><span class="line">C. rm -Ra /tmp/*</span><br><span class="line">D. rm -rf /tmp/*</span><br></pre></td></tr></table></figure><h2 id="44-使用什么命令可以在今天午夜运行命令-cmd1-？"><a href="#44-使用什么命令可以在今天午夜运行命令-cmd1-？" class="headerlink" title="44.使用什么命令可以在今天午夜运行命令 cmd1 ？"></a>44.使用什么命令可以在今天午夜运行命令 cmd1 ？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. at midnight cmd1</span><br><span class="line">B. cron -at &quot;00:00&quot; cmd1</span><br><span class="line">C. batch -t &quot;00:00&quot; &lt; cmd1</span><br><span class="line">D. echo &quot;cmd1&quot; | at midnight</span><br></pre></td></tr></table></figure><h2 id="45-你的系统使用增量备份策略，当需要恢复系统时，你需要按什么顺序恢复备份数据？"><a href="#45-你的系统使用增量备份策略，当需要恢复系统时，你需要按什么顺序恢复备份数据？" class="headerlink" title="45.你的系统使用增量备份策略，当需要恢复系统时，你需要按什么顺序恢复备份数据？"></a>45.你的系统使用增量备份策略，当需要恢复系统时，你需要按什么顺序恢复备份数据？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 最后一次全备份，然后从最早到最近的增量备份</span><br><span class="line">B. 最后一次全备份，然后从最近到最早的增量备份</span><br><span class="line">C. 最早到最近的增量备份，然后最后一次全备份</span><br><span class="line">D. 最近到最早的增量备份，然后最后一次全备份</span><br></pre></td></tr></table></figure><h2 id="46-对所有用户的变量设置，应当放在哪个文件下？"><a href="#46-对所有用户的变量设置，应当放在哪个文件下？" class="headerlink" title="46.对所有用户的变量设置，应当放在哪个文件下？"></a>46.对所有用户的变量设置，应当放在哪个文件下？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/bashrc</span><br><span class="line">B. /etc/profile</span><br><span class="line">C. ~/.bash_profile</span><br><span class="line">D. /etc/skel/.bashrc</span><br></pre></td></tr></table></figure><h2 id="47-Linux系统中，一般把命令-ls-定义为-ls-—color-的别名，以便以不同颜色来标识不同类型的文件。但是，如何能够使用原先的ls命令？"><a href="#47-Linux系统中，一般把命令-ls-定义为-ls-—color-的别名，以便以不同颜色来标识不同类型的文件。但是，如何能够使用原先的ls命令？" class="headerlink" title="47.Linux系统中，一般把命令 ls 定义为 ls —color 的别名，以便以不同颜色来标识不同类型的文件。但是，如何能够使用原先的ls命令？"></a>47.Linux系统中，一般把命令 ls 定义为 ls —color 的别名，以便以不同颜色来标识不同类型的文件。但是，如何能够使用原先的ls命令？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. \ls</span><br><span class="line">B. ;ls</span><br><span class="line">C. ls $$</span><br><span class="line">D. ls --noalias</span><br></pre></td></tr></table></figure><h2 id="48-在Linux系统中的脚本文件一般以什么开头？"><a href="#48-在Linux系统中的脚本文件一般以什么开头？" class="headerlink" title="48.在Linux系统中的脚本文件一般以什么开头？"></a>48.在Linux系统中的脚本文件一般以什么开头？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. $/bin/sh</span><br><span class="line">B. #!/bin/sh</span><br><span class="line">C. use /bin/sh</span><br><span class="line">D. set shell=/bin/sh</span><br></pre></td></tr></table></figure><h2 id="49-下面哪种写法表示如果cmd1成功执行，则执行cmd2命令？"><a href="#49-下面哪种写法表示如果cmd1成功执行，则执行cmd2命令？" class="headerlink" title="49.下面哪种写法表示如果cmd1成功执行，则执行cmd2命令？"></a>49.下面哪种写法表示如果cmd1成功执行，则执行cmd2命令？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. cmd1&amp;&amp;cmd2</span><br><span class="line">B. cmd1|cmd2</span><br><span class="line">C. cmd1;cmd2</span><br><span class="line">D. cmd1||cmd2</span><br></pre></td></tr></table></figure><h2 id="50-在哪个文件中定义网卡的I-O地址？"><a href="#50-在哪个文件中定义网卡的I-O地址？" class="headerlink" title="50.在哪个文件中定义网卡的I/O地址？"></a>50.在哪个文件中定义网卡的I/O地址？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. cat /proc/modules</span><br><span class="line">B. cat /proc/devices</span><br><span class="line">C. cat /proc/ioports</span><br><span class="line">D. cat /io/dma</span><br></pre></td></tr></table></figure><h2 id="51-Linux中，提供TCP-IP包过滤功能的软件叫什么？"><a href="#51-Linux中，提供TCP-IP包过滤功能的软件叫什么？" class="headerlink" title="51.Linux中，提供TCP/IP包过滤功能的软件叫什么？"></a>51.Linux中，提供TCP/IP包过滤功能的软件叫什么？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rarp</span><br><span class="line">B. route</span><br><span class="line">C. iptables</span><br><span class="line">D. filter</span><br></pre></td></tr></table></figure><h2 id="52-如何暂停一个打印队列？"><a href="#52-如何暂停一个打印队列？" class="headerlink" title="52.如何暂停一个打印队列？"></a>52.如何暂停一个打印队列？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. lpr</span><br><span class="line">B. lpq</span><br><span class="line">C. lpc</span><br><span class="line">D. lpd</span><br></pre></td></tr></table></figure><h2 id="53-在vi中退出不保存的命令是？"><a href="#53-在vi中退出不保存的命令是？" class="headerlink" title="53.在vi中退出不保存的命令是？"></a>53.在vi中退出不保存的命令是？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. :q</span><br><span class="line">B. :w</span><br><span class="line">C. :wq</span><br><span class="line">D. :q!</span><br></pre></td></tr></table></figure><h2 id="54-在-XFree86-3-x-中-缺省的字体服务器为："><a href="#54-在-XFree86-3-x-中-缺省的字体服务器为：" class="headerlink" title="54.在 XFree86 3.x 中, 缺省的字体服务器为："></a>54.在 XFree86 3.x 中, 缺省的字体服务器为：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. xfs</span><br><span class="line">B. xfserv</span><br><span class="line">C. fonts</span><br><span class="line">D. xfstt</span><br></pre></td></tr></table></figure><h2 id="55-使用什么命令检测基本网络连接？"><a href="#55-使用什么命令检测基本网络连接？" class="headerlink" title="55.使用什么命令检测基本网络连接？"></a>55.使用什么命令检测基本网络连接？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. ping</span><br><span class="line">B. route</span><br><span class="line">C. netstat</span><br><span class="line">D. ifconfig</span><br></pre></td></tr></table></figure><h2 id="56-下面哪个协议使用了二个以上的端口？"><a href="#56-下面哪个协议使用了二个以上的端口？" class="headerlink" title="56.下面哪个协议使用了二个以上的端口？"></a>56.下面哪个协议使用了二个以上的端口？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. telnet</span><br><span class="line">B. FTP</span><br><span class="line">C. rsh</span><br><span class="line">D. HTTP</span><br></pre></td></tr></table></figure><h2 id="57-在PPP协议中，哪个认证协议不以明文传递密码？"><a href="#57-在PPP协议中，哪个认证协议不以明文传递密码？" class="headerlink" title="57.在PPP协议中，哪个认证协议不以明文传递密码？"></a>57.在PPP协议中，哪个认证协议不以明文传递密码？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. PAM</span><br><span class="line">B. PAP</span><br><span class="line">C. PGP</span><br><span class="line">D. CHAP</span><br></pre></td></tr></table></figure><h2 id="58-下面哪个文件系统应该分配最大的空间？"><a href="#58-下面哪个文件系统应该分配最大的空间？" class="headerlink" title="58.下面哪个文件系统应该分配最大的空间？"></a>58.下面哪个文件系统应该分配最大的空间？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /usr</span><br><span class="line">B. /lib</span><br><span class="line">C. /root</span><br><span class="line">D. /bin</span><br></pre></td></tr></table></figure><h2 id="59-如何在Debian系统中安装rpm包？"><a href="#59-如何在Debian系统中安装rpm包？" class="headerlink" title="59.如何在Debian系统中安装rpm包？"></a>59.如何在Debian系统中安装rpm包？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. alien pkgname.rpm</span><br><span class="line">B. dpkg --rpm pkgname.rpm</span><br><span class="line">C. dpkg --alien pkgname.rpm</span><br><span class="line">D. alien pkganme.rpm ; dpkg -i pkganme.deb</span><br></pre></td></tr></table></figure><h2 id="60-在安装软件时下面哪一步需要root权限？"><a href="#60-在安装软件时下面哪一步需要root权限？" class="headerlink" title="60.在安装软件时下面哪一步需要root权限？"></a>60.在安装软件时下面哪一步需要root权限？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. make</span><br><span class="line">B. make deps</span><br><span class="line">C. make config</span><br><span class="line">D. make install</span><br></pre></td></tr></table></figure><h2 id="61-什么命令用来只更新已经安装过的rpm软件包？"><a href="#61-什么命令用来只更新已经安装过的rpm软件包？" class="headerlink" title="61.什么命令用来只更新已经安装过的rpm软件包？"></a>61.什么命令用来只更新已经安装过的rpm软件包？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rpm -U *.rpm</span><br><span class="line">B. rpm -F *.rpm</span><br><span class="line">C. rpm -e *.rpm</span><br><span class="line">D. rpm -q *.rpm</span><br></pre></td></tr></table></figure><h2 id="62-在-windows-与-Linux-双起动的系统中，如果要让LILO-管理引导，则-LILO-应该放在："><a href="#62-在-windows-与-Linux-双起动的系统中，如果要让LILO-管理引导，则-LILO-应该放在：" class="headerlink" title="62.在 windows 与 Linux 双起动的系统中，如果要让LILO 管理引导，则 LILO 应该放在："></a>62.在 windows 与 Linux 双起动的系统中，如果要让LILO 管理引导，则 LILO 应该放在：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. MBR</span><br><span class="line">B. /</span><br><span class="line">C. root分区的首扇区</span><br><span class="line">D. /LILO</span><br></pre></td></tr></table></figure><h2 id="63-ldconfig的配置文件是"><a href="#63-ldconfig的配置文件是" class="headerlink" title="63.ldconfig的配置文件是"></a>63.ldconfig的配置文件是</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /lib/ld.so</span><br><span class="line">B. /etc/ld.so.conf</span><br><span class="line">C. /etc/ld.so.cache</span><br><span class="line">D. /etc/modules.conf</span><br></pre></td></tr></table></figure><h2 id="64-下面哪个命令可以压缩部分文件："><a href="#64-下面哪个命令可以压缩部分文件：" class="headerlink" title="64.下面哪个命令可以压缩部分文件："></a>64.下面哪个命令可以压缩部分文件：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. tar -dzvf filename.tgz *</span><br><span class="line">B. tar -tzvf filename.tgz *</span><br><span class="line">C. tar -czvf filename.tgz *</span><br><span class="line">D. tar -xzvf filename.tgz *</span><br></pre></td></tr></table></figure><h2 id="65-网络服务的daemon是："><a href="#65-网络服务的daemon是：" class="headerlink" title="65.网络服务的daemon是："></a>65.网络服务的daemon是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. lpd</span><br><span class="line">B. netd</span><br><span class="line">C. httpd</span><br><span class="line">D. inetd</span><br></pre></td></tr></table></figure><h2 id="66-Linux与windows-的网上领居互联，需要提供什么daemon"><a href="#66-Linux与windows-的网上领居互联，需要提供什么daemon" class="headerlink" title="66.Linux与windows 的网上领居互联，需要提供什么daemon?"></a>66.Linux与windows 的网上领居互联，需要提供什么daemon?</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. bind</span><br><span class="line">B. smbd</span><br><span class="line">C. nmbd</span><br><span class="line">D. shard</span><br></pre></td></tr></table></figure><h2 id="67-对于Apache服务器，提供的子进程的缺省的用户是："><a href="#67-对于Apache服务器，提供的子进程的缺省的用户是：" class="headerlink" title="67.对于Apache服务器，提供的子进程的缺省的用户是："></a>67.对于Apache服务器，提供的子进程的缺省的用户是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. root</span><br><span class="line">B. apached</span><br><span class="line">C. httpd</span><br><span class="line">D. nobody</span><br></pre></td></tr></table></figure><h2 id="68-sendmail中缺省的未发出信件的存放位置是："><a href="#68-sendmail中缺省的未发出信件的存放位置是：" class="headerlink" title="68.sendmail中缺省的未发出信件的存放位置是："></a>68.sendmail中缺省的未发出信件的存放位置是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /var/mail/</span><br><span class="line">B. /var/spool/mail/</span><br><span class="line">C. /var/spool/mqueue/</span><br><span class="line">D. /var/mail/deliver/</span><br></pre></td></tr></table></figure><h2 id="69-apache的主配置文件是："><a href="#69-apache的主配置文件是：" class="headerlink" title="69.apache的主配置文件是："></a>69.apache的主配置文件是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. httpd.conf</span><br><span class="line">B. httpd.cfg</span><br><span class="line">C. access.cfg</span><br><span class="line">D. apache.conf</span><br></pre></td></tr></table></figure><h2 id="70-关于可装载的模块，装载时的参数，如I-O地址等的存放位置是："><a href="#70-关于可装载的模块，装载时的参数，如I-O地址等的存放位置是：" class="headerlink" title="70.关于可装载的模块，装载时的参数，如I/O地址等的存放位置是："></a>70.关于可装载的模块，装载时的参数，如I/O地址等的存放位置是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/conf.modules</span><br><span class="line">B. /etc/lilo.conf</span><br><span class="line">C. /boot/System.map</span><br><span class="line">D. /etc/sysconfig</span><br></pre></td></tr></table></figure><h2 id="71-在-Linux-中，如何关闭邮件提示？"><a href="#71-在-Linux-中，如何关闭邮件提示？" class="headerlink" title="71.在 Linux 中，如何关闭邮件提示？"></a>71.在 Linux 中，如何关闭邮件提示？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. biff n</span><br><span class="line">B. mesg n</span><br><span class="line">C. notify off</span><br><span class="line">D. set notify=off</span><br></pre></td></tr></table></figure><h2 id="72-在-bash-shell-环境下，当一命令正在执行时，按下-control-Z-会："><a href="#72-在-bash-shell-环境下，当一命令正在执行时，按下-control-Z-会：" class="headerlink" title="72.在 bash shell 环境下，当一命令正在执行时，按下 control-Z 会："></a>72.在 bash shell 环境下，当一命令正在执行时，按下 control-Z 会：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 中止前台任务</span><br><span class="line">B. 给当前文件加上 EOF.</span><br><span class="line">C. 将前台任务转入后台</span><br><span class="line">D. 注销当前用户</span><br></pre></td></tr></table></figure><h2 id="73-定义bash环境的用户文件是："><a href="#73-定义bash环境的用户文件是：" class="headerlink" title="73.定义bash环境的用户文件是："></a>73.定义bash环境的用户文件是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. bash &amp; .bashrc</span><br><span class="line">B. bashrc &amp; .bash_conf</span><br><span class="line">C. bashrc &amp; bash_profile</span><br><span class="line">D. .bashrc &amp; .bash_profile</span><br></pre></td></tr></table></figure><h2 id="74-下面哪条命令用来显示一个程序所使用的库文件？"><a href="#74-下面哪条命令用来显示一个程序所使用的库文件？" class="headerlink" title="74.下面哪条命令用来显示一个程序所使用的库文件？"></a>74.下面哪条命令用来显示一个程序所使用的库文件？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. ldd</span><br><span class="line">B. ld so</span><br><span class="line">C. modprobe</span><br><span class="line">D. ldconfig</span><br></pre></td></tr></table></figure><h2 id="75-如何查看一个RPM软件的配置文件的存放位置？"><a href="#75-如何查看一个RPM软件的配置文件的存放位置？" class="headerlink" title="75.如何查看一个RPM软件的配置文件的存放位置？"></a>75.如何查看一个RPM软件的配置文件的存放位置？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rpm -qc rpm1</span><br><span class="line">B. rpm -Vc rpm1</span><br><span class="line">C. rpm --config rpm1</span><br><span class="line">D. rpm -qa --config rpm1</span><br></pre></td></tr></table></figure><h2 id="76-如何查看一个RPM软件的修改记录？"><a href="#76-如何查看一个RPM软件的修改记录？" class="headerlink" title="76.如何查看一个RPM软件的修改记录？"></a>76.如何查看一个RPM软件的修改记录？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rpm -Vc postfix</span><br><span class="line">B. rpm -qpil postfix</span><br><span class="line">C. rpm --changelog postfix</span><br><span class="line">D. rpm -q --changelog postfix</span><br></pre></td></tr></table></figure><h2 id="77-通过Makefile来安装已编译过的代码的命令是："><a href="#77-通过Makefile来安装已编译过的代码的命令是：" class="headerlink" title="77.通过Makefile来安装已编译过的代码的命令是："></a>77.通过Makefile来安装已编译过的代码的命令是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. make</span><br><span class="line">B. install</span><br><span class="line">C. make depend</span><br><span class="line">D. make install</span><br></pre></td></tr></table></figure><h2 id="78-什么命令解压缩tar文件？"><a href="#78-什么命令解压缩tar文件？" class="headerlink" title="78.什么命令解压缩tar文件？"></a>78.什么命令解压缩tar文件？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. tar -czvf filename.tgz</span><br><span class="line">B. tar -xzvf filename.tgz</span><br><span class="line">C. tar -tzvf filename.tgz</span><br><span class="line">D. tar -dzvf filename.tgz</span><br></pre></td></tr></table></figure><h2 id="79-在-XF86Config-配置文件中，哪个段用来设置字体文件？"><a href="#79-在-XF86Config-配置文件中，哪个段用来设置字体文件？" class="headerlink" title="79.在 XF86Config 配置文件中，哪个段用来设置字体文件？"></a>79.在 XF86Config 配置文件中，哪个段用来设置字体文件？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. The Fonts section.</span><br><span class="line">B. The Files section.</span><br><span class="line">C. The xfsCodes section.</span><br><span class="line">D. The Graphics section.</span><br></pre></td></tr></table></figure><h2 id="80-8-bit-color-指的是："><a href="#80-8-bit-color-指的是：" class="headerlink" title="80.8 bit color 指的是："></a>80.8 bit color 指的是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. 64K colors</span><br><span class="line">B. 16K colors</span><br><span class="line">C. 256 colors</span><br><span class="line">D. 16M colors</span><br></pre></td></tr></table></figure><h2 id="81-下面哪个文件用来设置-X-window-的显示分辨率？"><a href="#81-下面哪个文件用来设置-X-window-的显示分辨率？" class="headerlink" title="81.下面哪个文件用来设置 X window 的显示分辨率？"></a>81.下面哪个文件用来设置 X window 的显示分辨率？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. xinit</span><br><span class="line">B. xinitrc</span><br><span class="line">C. XF86Setup</span><br><span class="line">D. XF86Config</span><br></pre></td></tr></table></figure><h2 id="82-哪个变量用来指定一个远程X应用程序将输出放到哪个X-server上？"><a href="#82-哪个变量用来指定一个远程X应用程序将输出放到哪个X-server上？" class="headerlink" title="82.哪个变量用来指定一个远程X应用程序将输出放到哪个X server上？"></a>82.哪个变量用来指定一个远程X应用程序将输出放到哪个X server上？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. DISPLAY</span><br><span class="line">B. TERM</span><br><span class="line">C. ECHO</span><br><span class="line">D. OUTPUT</span><br></pre></td></tr></table></figure><h2 id="83-在xdm的配置目录中，哪个文件用来设置在用户通过xdm登录后自动起动的应用程序？"><a href="#83-在xdm的配置目录中，哪个文件用来设置在用户通过xdm登录后自动起动的应用程序？" class="headerlink" title="83.在xdm的配置目录中，哪个文件用来设置在用户通过xdm登录后自动起动的应用程序？"></a>83.在xdm的配置目录中，哪个文件用来设置在用户通过xdm登录后自动起动的应用程序？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. The Xsession file</span><br><span class="line">B. The Xsetup_0 file</span><br><span class="line">C. The Xstart_up file</span><br><span class="line">D. The GiveConsole file</span><br></pre></td></tr></table></figure><h2 id="84-命令-netstat-a-停了很长时间没有响应，这可能是哪里的问题？"><a href="#84-命令-netstat-a-停了很长时间没有响应，这可能是哪里的问题？" class="headerlink" title="84.命令 netstat -a 停了很长时间没有响应，这可能是哪里的问题？"></a>84.命令 netstat -a 停了很长时间没有响应，这可能是哪里的问题？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. NFS.</span><br><span class="line">B. DNS.</span><br><span class="line">C. NIS.</span><br><span class="line">D. routing.</span><br></pre></td></tr></table></figure><h2 id="85-ping使用的协议是："><a href="#85-ping使用的协议是：" class="headerlink" title="85.ping使用的协议是："></a>85.ping使用的协议是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. TCP</span><br><span class="line">B. UDP</span><br><span class="line">C. SMB</span><br><span class="line">D. ICMP</span><br></pre></td></tr></table></figure><h2 id="86-下面哪个命令不是用来查看网络故障的？"><a href="#86-下面哪个命令不是用来查看网络故障的？" class="headerlink" title="86.下面哪个命令不是用来查看网络故障的？"></a>86.下面哪个命令不是用来查看网络故障的？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. ping</span><br><span class="line">B. init</span><br><span class="line">C. telnet</span><br><span class="line">D. netstat</span><br></pre></td></tr></table></figure><h2 id="87-拨号上网使用的协议通常是："><a href="#87-拨号上网使用的协议通常是：" class="headerlink" title="87.拨号上网使用的协议通常是："></a>87.拨号上网使用的协议通常是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. PPP</span><br><span class="line">B. UUCP</span><br><span class="line">C. SLIP</span><br><span class="line">D. Ethernet</span><br></pre></td></tr></table></figure><h2 id="88-TCP-IP中，哪个协议是用来进行IP自动分配的？"><a href="#88-TCP-IP中，哪个协议是用来进行IP自动分配的？" class="headerlink" title="88.TCP/IP中，哪个协议是用来进行IP自动分配的？"></a>88.TCP/IP中，哪个协议是用来进行IP自动分配的？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. ARP</span><br><span class="line">B. NFS</span><br><span class="line">C. DHCP</span><br><span class="line">D. DNS</span><br></pre></td></tr></table></figure><h2 id="89-下面哪个文件定义了网络服务的端口？"><a href="#89-下面哪个文件定义了网络服务的端口？" class="headerlink" title="89.下面哪个文件定义了网络服务的端口？"></a>89.下面哪个文件定义了网络服务的端口？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/netport</span><br><span class="line">B. /etc/services</span><br><span class="line">C. /etc/server</span><br><span class="line">D. /etc/netconf</span><br></pre></td></tr></table></figure><h2 id="90-下面哪个功能用来生成一个文件的校验码？"><a href="#90-下面哪个功能用来生成一个文件的校验码？" class="headerlink" title="90.下面哪个功能用来生成一个文件的校验码？"></a>90.下面哪个功能用来生成一个文件的校验码？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. md5</span><br><span class="line">B. tar</span><br><span class="line">C. crypt</span><br><span class="line">D. md5sum</span><br></pre></td></tr></table></figure><h2 id="91-缺省的，用户邮件放在："><a href="#91-缺省的，用户邮件放在：" class="headerlink" title="91.缺省的，用户邮件放在："></a>91.缺省的，用户邮件放在：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. ~/mail/</span><br><span class="line">B. /var/mail/</span><br><span class="line">C. /var/mail/spool/</span><br><span class="line">D. /var/spool/mail/</span><br></pre></td></tr></table></figure><h2 id="92-下面哪个文件包含了供-NFS-daemon-使用的目录列表？"><a href="#92-下面哪个文件包含了供-NFS-daemon-使用的目录列表？" class="headerlink" title="92.下面哪个文件包含了供 NFS daemon 使用的目录列表？"></a>92.下面哪个文件包含了供 NFS daemon 使用的目录列表？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/nfs</span><br><span class="line">B. /etc/nfs.conf</span><br><span class="line">C. /etc/exports</span><br><span class="line">D. /etc/netdir</span><br></pre></td></tr></table></figure><h2 id="93-如何停止一台机器的telnet服务？"><a href="#93-如何停止一台机器的telnet服务？" class="headerlink" title="93.如何停止一台机器的telnet服务？"></a>93.如何停止一台机器的telnet服务？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. Put NONE in /etc/telnet.allow</span><br><span class="line">B. Put a line &#x27;ALL:ALL&#x27; in /etc/hosts.deny</span><br><span class="line">C. Comment the telnet entry in /etc/inittab</span><br><span class="line">D. Comment the telnet entry in /etc/xinetd.conf</span><br></pre></td></tr></table></figure><h2 id="94-在哪个文件中保存了sendmail的别名？"><a href="#94-在哪个文件中保存了sendmail的别名？" class="headerlink" title="94.在哪个文件中保存了sendmail的别名？"></a>94.在哪个文件中保存了sendmail的别名？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/aliases</span><br><span class="line">B. /etc/mailaliases</span><br><span class="line">C. /etc/sendmail.aliases</span><br><span class="line">D. /etc/sendmail/aliases</span><br></pre></td></tr></table></figure><h2 id="95-smbd-and-nmbddaemons-的配置文件是："><a href="#95-smbd-and-nmbddaemons-的配置文件是：" class="headerlink" title="95.smbd and nmbddaemons 的配置文件是："></a>95.smbd and nmbddaemons 的配置文件是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. /etc/exports</span><br><span class="line">B. /etc/smb.conf</span><br><span class="line">C. /etc/samba/config</span><br><span class="line">D. /usr/local/samba.cfg</span><br></pre></td></tr></table></figure><h2 id="96-下面哪个命令用来卸载一个内核模块？"><a href="#96-下面哪个命令用来卸载一个内核模块？" class="headerlink" title="96.下面哪个命令用来卸载一个内核模块？"></a>96.下面哪个命令用来卸载一个内核模块？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. rmmod</span><br><span class="line">B. unmod</span><br><span class="line">C. delmod</span><br><span class="line">D. modprobe</span><br></pre></td></tr></table></figure><h2 id="97-什么情况下必须运行lilo"><a href="#97-什么情况下必须运行lilo" class="headerlink" title="97.什么情况下必须运行lilo"></a>97.什么情况下必须运行lilo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. once a day from cron</span><br><span class="line">B. once a week from cron</span><br><span class="line">C. after installing a new kernel</span><br><span class="line">D. after installing a new module</span><br></pre></td></tr></table></figure><h2 id="98-什么命令显示所有装载的模块？"><a href="#98-什么命令显示所有装载的模块？" class="headerlink" title="98.什么命令显示所有装载的模块？"></a>98.什么命令显示所有装载的模块？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. lsmod</span><br><span class="line">B. dirmod</span><br><span class="line">C. modules</span><br><span class="line">D. modlist</span><br></pre></td></tr></table></figure><h2 id="99-下面哪个命令刷新打印机队列？"><a href="#99-下面哪个命令刷新打印机队列？" class="headerlink" title="99.下面哪个命令刷新打印机队列？"></a>99.下面哪个命令刷新打印机队列？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. lpflush</span><br><span class="line">B. lprm -</span><br><span class="line">C. lpclear</span><br><span class="line">D. lprm all</span><br></pre></td></tr></table></figure><h2 id="100-下面哪个命令可以查看网卡的中断？"><a href="#100-下面哪个命令可以查看网卡的中断？" class="headerlink" title="100.下面哪个命令可以查看网卡的中断？"></a>100.下面哪个命令可以查看网卡的中断？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A. cat /proc/ioports</span><br><span class="line">B. cat /proc/interrupts</span><br><span class="line">C. cat /proc/memoryinfo</span><br><span class="line">D. which interrupts</span><br></pre></td></tr></table></figure><h2 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">01.D    02.B    03.C    04.C    05.B</span><br><span class="line"></span><br><span class="line">06.C    07.B    08.C    09.A    10.B</span><br><span class="line"></span><br><span class="line">11.A    12.C    13.C    14.C    15.B</span><br><span class="line"></span><br><span class="line">16.A    17.D    18.D    19.B    20.B</span><br><span class="line"></span><br><span class="line">21.C    22.B    23.C    24.C    25.B</span><br><span class="line"></span><br><span class="line">26.D    27.A    28.B    29.B    30.A</span><br><span class="line"></span><br><span class="line">31.A    32.C    33.A    34.D    35.D</span><br><span class="line"></span><br><span class="line">36.B    37.D    38.A    39.A    40.D</span><br><span class="line"></span><br><span class="line">41.B    42.D    43.B    44.D    45.B</span><br><span class="line"></span><br><span class="line">46.B    47.A    48.B    49.A     50.C</span><br><span class="line"></span><br><span class="line">51.C    52.C    53.D    54.A    55.A</span><br><span class="line"></span><br><span class="line">56.B    57.D    58.A    59.D    60.D</span><br><span class="line"></span><br><span class="line">61.B    62.A    63.B    64.C    65.D</span><br><span class="line"></span><br><span class="line">66.B    67.D    68.C    69.A    70.A</span><br><span class="line"></span><br><span class="line">71.A    72.C    73.D    74.A    75.A</span><br><span class="line"></span><br><span class="line">76.D    77.D    78.B    79.B    80.C</span><br><span class="line"></span><br><span class="line">81.D    82.A    83.B    84.B    85.D</span><br><span class="line"></span><br><span class="line">86.B    87.A    88.C    89.B    90.A</span><br><span class="line"></span><br><span class="line">91.D    92.C    93.D    94.A    95.B</span><br><span class="line"></span><br><span class="line">96.A    97.C    98.A    99.B    100.B</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源共享 </category>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux关闭防火墙，Docker容器启动失败问题</title>
      <link href="/2023/01/04/Linux%20%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99%E5%90%8E%EF%BC%8CDocker%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
      <url>/2023/01/04/Linux%20%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99%E5%90%8E%EF%BC%8CDocker%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><strong>Linux关闭防火墙，Docker容器启动失败</strong></p><p>由于<code>Docker</code>自身内部有一套网络，这套内部网路会依托<code>Linux</code>系统的防火墙，所以当我们将<code>Linux</code>系统的防火墙关闭时，<code>Docker</code>内部网络会被破坏，导致<code>Docker</code>容器启动异常报错。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="重建Docker0网络"><a href="#重建Docker0网络" class="headerlink" title="重建Docker0网络"></a>重建Docker0网络</h2><h3 id="按照进程名杀死docker进程"><a href="#按照进程名杀死docker进程" class="headerlink" title="按照进程名杀死docker进程"></a>按照进程名杀死docker进程</h3><pre><code>pkill docker</code></pre><h3 id="清空防火墙规则-清空nat表的所有链"><a href="#清空防火墙规则-清空nat表的所有链" class="headerlink" title="清空防火墙规则-清空nat表的所有链"></a>清空防火墙规则-清空nat表的所有链</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -F</span><br></pre></td></tr></table></figure><h3 id="查看定义规则的详细信息"><a href="#查看定义规则的详细信息" class="headerlink" title="查看定义规则的详细信息"></a>查看定义规则的详细信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n -v </span><br></pre></td></tr></table></figure><h3 id="关闭docker0接口"><a href="#关闭docker0接口" class="headerlink" title="关闭docker0接口"></a>关闭docker0接口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig docker0 down</span><br></pre></td></tr></table></figure><h3 id="删除docker0接口"><a href="#删除docker0接口" class="headerlink" title="删除docker0接口"></a>删除docker0接口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brctl delbr docker0</span><br></pre></td></tr></table></figure><h2 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="查看是否启用"><a href="#查看是否启用" class="headerlink" title="查看是否启用"></a>查看是否启用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 备忘录</title>
      <link href="/2023/01/03/Kubernetes%20%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/01/03/Kubernetes%20%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="列出资源"><a href="#列出资源" class="headerlink" title="列出资源"></a>列出资源</h2><p><strong>获取所有命名空间的列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get namespaces</span><br></pre></td></tr></table></figure><p><strong>获取所有 pod 的列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods</span><br></pre></td></tr></table></figure><p><strong>获取包含 IP、节点名称等详细信息的所有 pod 列表…</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -o wide</span><br></pre></td></tr></table></figure><p><strong>获取在特定节点服务器上运行的所有 pod 的列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods --field-selector=spec.nodeName=[server-name]</span><br></pre></td></tr></table></figure><p><strong>获取所有复制控制器和服务的列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get replicationcontroller,services</span><br></pre></td></tr></table></figure><p><strong>获取守护进程列表</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get daemonset</span><br></pre></td></tr></table></figure><h2 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h2><p><strong>创建一个新的命名空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace [namespace-name]</span><br></pre></td></tr></table></figure><p><strong>从 JSON 或 YAML 文件创建一个新的命名空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create –f [filename]</span><br></pre></td></tr></table></figure><h2 id="更新资源"><a href="#更新资源" class="headerlink" title="更新资源"></a>更新资源</h2><p>要应用或更新资源，请使用该<code>kubectl apply</code>命令</p><p><strong>使用 [service-config].yaml 中包含的定义创建一个新服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f [service-config].yaml</span><br></pre></td></tr></table></figure><p><strong>使用 [controller-config].yaml 中包含的定义创建一个新的复制控制器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f [controller-config].yaml</span><br></pre></td></tr></table></figure><p><strong>在目录中的任何 .yaml、.yml 或 .json 文件中创建定义的对象</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f [yaml-file/directory-name]</span><br></pre></td></tr></table></figure><p><strong>编辑服务配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit svc/[service-name]</span><br></pre></td></tr></table></figure><p><strong>上面的命令在默认编辑器中打开文件。要选择另一个编辑器，请在命令前指定它：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KUBE_EDITOR=”[editor-name]” kubectl edit svc/[service-name]</span><br></pre></td></tr></table></figure><h2 id="显示资源状态"><a href="#显示资源状态" class="headerlink" title="显示资源状态"></a>显示资源状态</h2><p><strong>获取有关特定节点的详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe nodes [node-name]</span><br></pre></td></tr></table></figure><p><strong>获取有关特定 pod 的详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pods [pod-name]</span><br></pre></td></tr></table></figure><p><strong>获取有关名称和类型列在中的特定 pod 的详细信息 pod.json</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe –f pod.json</span><br></pre></td></tr></table></figure><p><strong>获取有关由特定复制控制器管理的特定 pod 的详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pods [replication-controller-name]</span><br></pre></td></tr></table></figure><p><strong>获取有关所有 Pod 的详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pods</span><br></pre></td></tr></table></figure><h2 id="删除资源"><a href="#删除资源" class="headerlink" title="删除资源"></a>删除资源</h2><p><strong>使用 pod.yaml 中提到的名称和类型删除 pod</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f pod.yaml</span><br></pre></td></tr></table></figure><p><strong>删除带有特定标签的所有 Pod 和服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pods,services -l [label-key]=[label-value]</span><br></pre></td></tr></table></figure><p><strong>删除所有 Pod</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pods --all</span><br></pre></td></tr></table></figure><p>执行命令<br><strong>从在 pod 中的第一个容器上运行的命令获取输出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> [pod-name] -- [<span class="built_in">command</span>]</span><br></pre></td></tr></table></figure><p><strong>从在 pod 中的特定容器上运行的命令获取输出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> [pod-name] -c [container-name] -- [<span class="built_in">command</span>]</span><br></pre></td></tr></table></figure><p><strong>从特定的 pod 运行 /bin/bash。接收到的输出来自第一个容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -ti [pod-name] -- /bin/bash</span><br></pre></td></tr></table></figure><h2 id="打印容器日志"><a href="#打印容器日志" class="headerlink" title="打印容器日志"></a>打印容器日志</h2><p><strong>从 Pod 打印日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl logs [pod-name]</span><br></pre></td></tr></table></figure><p><strong>从 Pod 流式传输日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl logs -f [pod-name]</span><br></pre></td></tr></table></figure><p><strong>来自 Pod 的尾部日志（打印来自 Pod 的最后 200 条日志）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl logs --<span class="built_in">tail</span>=200 [pod-name]</span><br></pre></td></tr></table></figure><h2 id="修改-Kubeconfig-文件"><a href="#修改-Kubeconfig-文件" class="headerlink" title="修改 Kubeconfig 文件"></a>修改 <code>Kubeconfig</code> 文件</h2><p><strong>kubectl config 命令允许您查看和修改 kubeconfig 文件。</strong><br><strong>获取上下文</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config current-context</span><br></pre></td></tr></table></figure><p><strong>在 kubeconfig 中设置集群条目</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster [cluster-name] --server=[server-name]</span><br></pre></td></tr></table></figure><p><strong>在 kubeconfig 中取消设置条目</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">unset</span> [property-name]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus告警模板</title>
      <link href="/2023/01/02/Prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF/"/>
      <url>/2023/01/02/Prometheus%E5%91%8A%E8%AD%A6%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="告警模板参数大致解析"><a href="#告警模板参数大致解析" class="headerlink" title="告警模板参数大致解析"></a>告警模板参数大致解析</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span> <span class="comment"># 组名</span></span><br><span class="line">  <span class="comment"># 触发规则列表</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">HighErrorRate</span> <span class="comment"># 警告名</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">job:request_latency_seconds:mean5m&#123;job=&quot;myjob&quot;&#125;</span> <span class="string">&gt;</span> <span class="number">0.5</span> <span class="comment"># 触发规则</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">10m</span> <span class="comment"># 规则触发持续多长时间发送告警</span></span><br><span class="line">    <span class="comment"># 告警附加标签</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">page</span></span><br><span class="line">    <span class="comment"># 告警附加注释</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">High</span> <span class="string">request</span> <span class="string">latency</span></span><br></pre></td></tr></table></figure><h2 id="node-alived-yml-实例存活告警规则"><a href="#node-alived-yml-实例存活告警规则" class="headerlink" title="node_alived.yml ( 实例存活告警规则 )"></a>node_alived.yml ( 实例存活告警规则 )</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">实例存活告警规则</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">实例存活告警</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">up</span> <span class="string">==</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">user:</span> <span class="string">prometheus</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;主机宕机 !!!&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;该实例主机已经宕机超过一分钟了。&quot;</span></span><br></pre></td></tr></table></figure><h2 id="memory-over-yml-内存报警规则"><a href="#memory-over-yml-内存报警规则" class="headerlink" title="memory_over.yml (内存报警规则)"></a>memory_over.yml (内存报警规则)</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">内存报警规则</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">内存使用率告警</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">(1</span> <span class="bullet">-</span> <span class="string">(node_memory_MemAvailable_bytes</span> <span class="string">/</span> <span class="string">(node_memory_MemTotal_bytes)))</span> <span class="string">*</span> <span class="number">100</span> <span class="string">&gt;</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;服务器可用内存不足。&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;内存使用率已超过50%（当前值：<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>%）&quot;</span></span><br></pre></td></tr></table></figure><h2 id="cpu-over-yml-（-CPU报警规则-）"><a href="#cpu-over-yml-（-CPU报警规则-）" class="headerlink" title="cpu_over.yml （ CPU报警规则 ）"></a>cpu_over.yml （ CPU报警规则 ）</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CPU报警规则</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">CPU使用率告警</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="number">100</span> <span class="bullet">-</span> <span class="string">(avg</span> <span class="string">by</span> <span class="string">(instance)(irate(node_cpu_seconds_total&#123;mode=&quot;idle&quot;&#125;[1m])</span> <span class="string">))</span> <span class="string">*</span> <span class="number">100</span> <span class="string">&gt;</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;CPU使用率正在飙升。&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;CPU使用率超过50%（当前值：<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>%）&quot;</span></span><br></pre></td></tr></table></figure><h2 id="disk-over-yml-磁盘使用率报警规则"><a href="#disk-over-yml-磁盘使用率报警规则" class="headerlink" title="disk_over.yml (磁盘使用率报警规则 )"></a>disk_over.yml (磁盘使用率报警规则 )</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">磁盘使用率报警规则</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">磁盘使用率告警</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="number">100</span> <span class="bullet">-</span> <span class="string">node_filesystem_free_bytes&#123;fstype=~&quot;xfs|ext4&quot;&#125;</span> <span class="string">/</span> <span class="string">node_filesystem_size_bytes&#123;fstype=~&quot;xfs|ext4&quot;&#125;</span> <span class="string">*</span> <span class="number">100</span> <span class="string">&gt;</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">20m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;硬盘分区使用率过高&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;分区使用大于80%（当前值：<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>%）&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置mail发送qq邮箱</title>
      <link href="/2023/01/01/Linux%20%E9%85%8D%E7%BD%AEmail%20%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
      <url>/2023/01/01/Linux%20%E9%85%8D%E7%BD%AEmail%20%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="配置安装mailx"><a href="#配置安装mailx" class="headerlink" title="配置安装mailx"></a>配置安装mailx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mailx</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mail.rc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> from=发送方qq邮箱</span><br><span class="line"><span class="built_in">set</span> smtp=smtps://smtp.qq.com:465</span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=发送方qq邮箱</span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=鉴权密码</span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore</span><br><span class="line"><span class="built_in">set</span> nss-config-dir=/etc/pki/nssdb</span><br></pre></td></tr></table></figure><h2 id="获取邮箱鉴权密码"><a href="#获取邮箱鉴权密码" class="headerlink" title="获取邮箱鉴权密码"></a>获取邮箱鉴权密码</h2><ul><li>在任何邮箱平台中开启smtp,开启后会得到一个授权码</li><li>这个授权码就代替了密码（邮箱设置界面开启）</li></ul><h2 id="配SSL证书"><a href="#配SSL证书" class="headerlink" title="配SSL证书"></a>配SSL证书</h2><h3 id="下载证书输出到指定目录"><a href="#下载证书输出到指定目录" class="headerlink" title="下载证书输出到指定目录"></a>下载证书输出到指定目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>   -n <span class="string">&quot; &quot;</span> |  openssl s_client -connect smtp.qq.com:465 | sed -ne  <span class="string">&#x27;/-BEGIN CERTIFICATE-/,/-END CERTIFIICATE-/p&#x27;</span>  &gt;  /etc/pki/nssdb/qq.crt</span><br></pre></td></tr></table></figure><h3 id="配置协议"><a href="#配置协议" class="headerlink" title="配置协议"></a>配置协议</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -A -n <span class="string">&#x27;qq&#x27;</span> -t <span class="string">&quot;P,P,P&quot;</span> -d /etc/pki/nssdb -i /etc/pki/nssdb/qq.crt</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> | mail -s <span class="string">&quot;test&quot;</span> 接收方邮箱地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 备忘录</title>
      <link href="/2023/01/01/Docker%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/01/01/Docker%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="生命周期命令"><a href="#生命周期命令" class="headerlink" title="生命周期命令"></a>生命周期命令</h2><p><strong>创建一个容器（不启动它）：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker create [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>重命名现有容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rename [CONTAINER_NAME] [NEW_CONTAINER_NAME]</span><br></pre></td></tr></table></figure><p><strong>在新容器中运行命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run [IMAGE] [COMMAND]</span><br></pre></td></tr></table></figure><p><strong>退出后移除容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>启动一个容器并保持运行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -td [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>启动一个容器并在容器中创建一个交互式 bash shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>在容器内创建、启动和运行命令，并在执行命令后移除容器。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it-rm [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>在已经运行的容器内执行命令。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it [container]</span><br></pre></td></tr></table></figure><p><strong>删除一个容器（如果它没有运行）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>更新容器的配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update [CONTAINER]</span><br></pre></td></tr></table></figure><h2 id="启动和停止容器"><a href="#启动和停止容器" class="headerlink" title="启动和停止容器"></a>启动和停止容器</h2><p><strong>启动容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>停止运行容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>停止运行容器并重新启动它</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>暂停正在运行的容器中的进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pause [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>取消暂停正在运行的容器中的进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker unpause [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>阻塞一个容器直到其他容器停止</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">wait</span> [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>通过向正在运行的容器发送 SIGKILL 来杀死容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">kill</span> [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>将本地标准输入、输出和错误流附加到正在运行的容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach [CONTAINER]</span><br></pre></td></tr></table></figure><h2 id="Docker-镜像命令"><a href="#Docker-镜像命令" class="headerlink" title="Docker 镜像命令"></a>Docker 镜像命令</h2><p><strong>从 Dockerfile 创建镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build [URL/FILE]</span><br></pre></td></tr></table></figure><p><strong>从带有标签的 Dockerfile 创建镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t &lt;tag&gt; [URL/FILE]</span><br></pre></td></tr></table></figure><p><strong>从注册表中心拉取镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>将镜像推送到注册中心</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>从 tarball 创建镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import [URL/FILE]</span><br></pre></td></tr></table></figure><p><strong>从容器创建镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit [CONTAINER] [NEW_IMAGE_NAME]</span><br></pre></td></tr></table></figure><p><strong>删除镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi [IMAGE]</span><br></pre></td></tr></table></figure><p><strong>从 tar 存档或标准输入加载镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load [TAR_FILE/STDIN_FILE]</span><br></pre></td></tr></table></figure><p><strong>将镜像保存到 tar 存档</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save [IMAGE] &gt; [TAR_FILE]</span><br></pre></td></tr></table></figure><h2 id="Docker-容器和镜像信息"><a href="#Docker-容器和镜像信息" class="headerlink" title="Docker 容器和镜像信息"></a>Docker 容器和镜像信息</h2><p><strong>列出正在运行的容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><strong>列出正在运行的容器和已停止的容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p><strong>列出正在运行的容器中的日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>列出 Docker 对象的低级信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect [OBJECT_NAME/ID]</span><br></pre></td></tr></table></figure><p><strong>列出来自容器的实时事件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker events [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>显示容器的端口映射</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker port [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>显示容器中正在运行的进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>显示容器的实时资源使用统计</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stats [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>显示文件系统上文件（或目录）的更改</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker diff [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>列出本地使用 docker 引擎存储的所有镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker [image] <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><strong>显示镜像的历史</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">history</span> [IMAGE]</span><br></pre></td></tr></table></figure><h2 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h2><p><strong>列出网络</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><strong>删除一个或多个网络</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network <span class="built_in">rm</span> [NETWORK]</span><br></pre></td></tr></table></figure><p><strong>显示一个或多个网络的信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network inspect [NETWORK]</span><br></pre></td></tr></table></figure><p><strong>将容器连接到网络</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network connect [NETWORK] [CONTAINER]</span><br></pre></td></tr></table></figure><p><strong>断开容器与网络的连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network disconnect [NETWORK] [CONTAINER]</span><br></pre></td></tr></table></figure><h2 id="docker设置容器的开机自启"><a href="#docker设置容器的开机自启" class="headerlink" title="docker设置容器的开机自启"></a>docker设置容器的开机自启</h2><p><strong>1.设置docker的开机自启</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p><strong>2.设置容器的自动启动</strong></p><p><strong>2.1 创建容器时设置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always --name 设置容器名 使用的镜像</span><br></pre></td></tr></table></figure><p><strong>2.2 已经创建过的容器，如果创建时未指定 —restart=always，可通过update 命令设置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always 容器ID(或者容器名)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 错误：为 repo &#39;appstream&#39; 下载元数据失败...</title>
      <link href="/2023/01/01/Centos%E9%94%99%E8%AF%AF%EF%BC%9A%E4%B8%BArepo%20&#39;appstream&#39;%E4%B8%8B%E8%BD%BD%E5%85%83%E6%95%B0%E6%8D%AE%E5%A4%B1%E8%B4%A5/"/>
      <url>/2023/01/01/Centos%E9%94%99%E8%AF%AF%EF%BC%9A%E4%B8%BArepo%20&#39;appstream&#39;%E4%B8%8B%E8%BD%BD%E5%85%83%E6%95%B0%E6%8D%AE%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><p>​    </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><p>出现如下错误的<br>错误：为 <code>repo ‘appstream’</code> 下载元数据失败 : <code>Cannot prepare internal mirrorlist: No URLs in mirrorlist</code></p><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><ul><li>在2022年1月31日，CentOS团队终于从官方镜像中移除CentOS 8的所有包。</li><li>CentOS8已于2021年12月31日寿终正非，但软件包仍在官方镜像上保留了一段时间。现在他们被转移到<a href="https://vault.centos.org/">https://vault.centos.org</a></li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>如果你仍然需要运行<code>CentOS 8</code>，你可以在<code>/etc/yum.repos.d</code>中更新一下源。使用<code>vault.centos.org</code>代替<code>mirror.centos.org</code>。</p><p><strong>执行一下两行代码进行修改</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i -e &quot;s|mirrorlist=|#mirrorlist=|g&quot; /etc/yum.repos.d/CentOS-* </span><br><span class="line"></span><br><span class="line">sudo sed -i -e &quot;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&quot; /etc/yum.repos.d/CentOS-*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo  #centos8官方源已下线，建议切换centos-vault源</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 错误日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 环境变量详解</title>
      <link href="/2022/12/21/CentOS7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AF%A6%E8%A7%A3/"/>
      <url>/2022/12/21/CentOS7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="1、环境变量的含义"><a href="#1、环境变量的含义" class="headerlink" title="1、环境变量的含义"></a>1、环境变量的含义</h3><p>程序（<code>操作系统命令</code>和<code>应用程序</code>）的执行都需要运行环境，这个环境是由多个环境变量组成的。</p><h3 id="2、环境变量的分类"><a href="#2、环境变量的分类" class="headerlink" title="2、环境变量的分类"></a>2、环境变量的分类</h3><ul><li>按生效的范围分类。<br><strong>系统环境变量：</strong>公共的，对全部的用户都生效。<br><strong>用户环境变量：</strong>用户私有的、自定义的个性化设置，只对该用户生效。</li><li>按生存周期分类。<br><strong>永久环境变量：</strong>在环境变量脚本文件中配置，用户每次登录时会自动执行这些脚本，相当于永久生效。<br><strong>临时环境变量：</strong>使用时在<code>Shell</code>中临时定义，退出<code>Shell</code>后失效。</li></ul><h3 id="3、Linux环境变量"><a href="#3、Linux环境变量" class="headerlink" title="3、Linux环境变量"></a>3、Linux环境变量</h3><p><code>Linux</code>环境变量也称之为<code>Shell</code>环境量变，以下划线和字母打头，由下划线、字母（区分大小写）和数字组成，习惯上使用大写字母，例如<code>PATH</code>、<code>HOSTNAME</code>、<code>LANG</code>等。</p><h2 id="常用的环境变量"><a href="#常用的环境变量" class="headerlink" title="常用的环境变量"></a>常用的环境变量</h2><h3 id="1、查看环境变量"><a href="#1、查看环境变量" class="headerlink" title="1、查看环境变量"></a>1、查看环境变量</h3><ul><li><code>env</code>命令</li><li><code>echo</code>命令</li></ul><h3 id="2、常用的环境变量"><a href="#2、常用的环境变量" class="headerlink" title="2、常用的环境变量"></a>2、常用的环境变量</h3><ul><li><code>PATH</code>：可执行程序的搜索目录，可执行程序包括<code>Linux</code>系统命令和用户的应用程序，<code>PATH</code>变量的具体用法本文后面的章节中有详细的介绍。</li><li><code>LANG</code>：<code>Linux</code>系统的语言、地区、字符集，<code>LANG</code>变量的具体用法本文后面的章节中有详细的介绍。</li><li><code>HOSTNAME</code>：服务器的主机名。</li><li><code>SHELL</code>：用户当前使用的<code>Shell</code>解析器。</li><li><code>HISTSIZE</code>：保存历史命令的数目。</li><li><code>USER</code>：当前登录用户的用户名。</li><li><code>HOME</code>：当前登录用户的主目录。</li><li><code>PWD</code>：当前工作目录。</li><li><code>LD_LIBRARY_PATH</code>：<code>C/C++</code>语言动态链接库文件搜索的目录，它不是<code>Linux</code>缺省的环境变量，但对<code>C/C++</code>程序员来说非常重要，具体用法本文后面的章节中有详细的介绍。</li><li><code>CLASSPATH</code>：<code>JAVA</code>语言库文件搜索的目录，它也不是<code>Linux</code>缺省的环境变量，但对<code>JAVA</code>程序员来说非常重要。</li></ul><h2 id="设置环境量"><a href="#设置环境量" class="headerlink" title="设置环境量"></a>设置环境量</h2><p>如果环境变量的值没有空格等特殊符号，可以不用单引号包含。<br>采用<code>export</code>设置的环境变量，在退出<code>Shell</code>后就会失效，下次登录时需要重新设置。如果希望环境变量永久生效，需要在登录脚本文件中配置。</p><h3 id="1、系统环境变量"><a href="#1、系统环境变量" class="headerlink" title="1、系统环境变量"></a>1、系统环境变量</h3><p>系统环境变量对全部的用户生效，设置系统环境变量有三种方法。<br>1）在<code>/etc/profile</code>文件中设置。<br>用户登录时执行<code>/etc/profile</code>文件中设置系统的环境变量。但是，<code>Linux</code><strong>不建议</strong>在<code>/etc/profile</code>文件中设置系统环境变量。<br>2）在<code>/etc/profile.d</code>目录中增加环境变量脚本文件，这是<code>Linux</code>推荐的方法。<br><code>/etc/profile</code>在每次启动时会执行<code>/etc/profile.d</code>下全部的脚本文件。<code>/etc/profile.d</code>比<code>/etc/profile</code>好维护，不想要什么变量直接删除<code>/etc/profile.d</code>下对应的<code>shell</code>脚本即可。<br>3）在<code>/etc/bashrc</code>文件中设置环境变量。<br>该文件配置的环境变量将会影响全部用户使用的<code>bash shell</code>。但是，<code>Linux</code>也不建议在<code>/etc/bashrc</code>文件中设置系统环境变量。</p><h3 id="2、用户环境变量"><a href="#2、用户环境变量" class="headerlink" title="2、用户环境变量"></a>2、用户环境变量</h3><p>用户环境变量只对当前用户生效，设置用户环境变量也有多种方法。<br>在用户的主目录，有几个特别的文件，用<code>ls</code>是看不见的，用<code>ls .bash_*</code>可以看见。<br>1）<code>.bash_profile</code>（推荐首选）<br>当用户登录时执行，每个用户都可以使用该文件来配置专属于自己的环境变量。</p><p>2）<code>.bashrc</code><br>当用户登录时以及每次打开新的<code>Shell</code>时该文件都将被读取，不推荐在里面配置用户专用的环境变量，因为每开一个<code>Shell</code>，该文件都会被读取一次，效率肯定受影响。</p><p>3）<code>.bash_logout</code><br>当每次退出系统（退出<code>bash shell</code>）时执行该文件。</p><p>4）<code>.bash_history</code><br>保存了当前用户使用过的历史命令。</p><h3 id="3、环境变量脚本文件的执行顺序"><a href="#3、环境变量脚本文件的执行顺序" class="headerlink" title="3、环境变量脚本文件的执行顺序"></a>3、环境变量脚本文件的执行顺序</h3><p>环境变量脚本文件的执行顺序（由上到下）如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d</span><br><span class="line">/etc/bashrc</span><br><span class="line">用户的.bash_profile</span><br><span class="line">用户的.bashrc</span><br></pre></td></tr></table></figure><p>同名的环境变量，如果在多个脚本中有配置，以最后执行的脚本中的配置为准。<br>还有一个问题需要注意，在<code>/etc/profile</code>中执行了<code>/etc/profile.d</code>的脚本，所以，<code>/etc/profile.d</code>和<code>/etc/profile</code>的执行顺序还要看代码怎么写。代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> /etc/profile.d/*.sh ; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ -r <span class="string">&quot;<span class="variable">$i</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;-#*i&#125;</span>&quot;</span> != <span class="string">&quot;$-&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            . <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            . <span class="string">&quot;<span class="variable">$i</span>&quot;</span> &gt;/dev/null</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="重要环境变量的详解"><a href="#重要环境变量的详解" class="headerlink" title="重要环境变量的详解"></a>重要环境变量的详解</h2><h3 id="1、PATH环境变量"><a href="#1、PATH环境变量" class="headerlink" title="1、PATH环境变量"></a>1、<code>PATH</code>环境变量</h3><p>可执行程序的搜索目录，可执行程序包括<code>Linux</code>系统命令和用户的应用程序。如果可执行程序的目录不在<code>PATH</code>指定的目录中，执行时需要指定目录。<br>1）<code>PATH</code>环境变量存放的是目录列表，目录之间用冒号<code>:</code>分隔，最后的圆点<code>.</code>表示当前目录。</p><p>一键复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=目录1:目录2:目录3:......目录n:.</span><br></pre></td></tr></table></figure><p>2）<code>PATH</code>缺省包含了<code>Linux</code>系统命令所在的目录<code>/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin</code>，如果不包含这些目录，<code>Linux</code>的常用命令也无法执行（要输入绝对路径才能执行）。<br>3）在用户的<code>.bash_profile</code>文件中，会对<code>PATH</code>进行扩充，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin</span><br></pre></td></tr></table></figure><p>4）如果<code>PATH</code>变量中没有包含圆点<code>.</code>，执行当前目录下的程序需要加<code>./</code>或使用绝对路径。</p><h3 id="2、LANG环境变量"><a href="#2、LANG环境变量" class="headerlink" title="2、LANG环境变量"></a>2、LANG环境变量</h3><p><code>LANG</code>环境变量存放的是<code>Linux</code>系统的语言、地区、字符集，它不需要系统管理员手工设置，<code>/etc/profile</code>会调用<code>/etc/profile.d/lang.sh</code>脚本完成对<code>PATH</code>的设置。</p><ul><li><p>CentOS6.x 字符集配置文件在<code>/etc/syscconfig/i18n</code>文件中。</p></li><li><p>CentOS7.x 字符集配置文件在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/locale.conf</span><br></pre></td></tr></table></figure><p>文件中，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-bash-4.2# <span class="built_in">cat</span> /etc/locale. conf</span><br><span class="line">LANG=zh_CN.gbk</span><br><span class="line"><span class="comment">#LANG=zh_CN.utf8</span></span><br><span class="line"><span class="comment">#LANG=zh_CN.gb18030</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3、LD-LIBRARY-PATH环境变量"><a href="#3、LD-LIBRARY-PATH环境变量" class="headerlink" title="3、LD_LIBRARY_PATH环境变量"></a>3、<code>LD_LIBRARY_PATH</code>环境变量</h3><p><code>C/C++</code>语言动态链接库文件搜索的目录，它不是<code>Linux</code>缺省的环境变量，但对<code>C/C++</code>程序员来说非常重要。<br><code>LD_LIBRARY_PATH</code>环境变量存放的也是目录列表，目录之间用冒号<code>:</code>分隔，最后的圆点<code>.</code>表示当前目录，与<code>PATH</code>的格式相同。</p><p>一键复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=目录1:目录2:目录3:......目录n:.</span><br></pre></td></tr></table></figure><h3 id="4、CLASSPATH"><a href="#4、CLASSPATH" class="headerlink" title="4、CLASSPATH"></a>4、<code>CLASSPATH</code></h3><p><code>JAVA</code>语言库文件搜索的目录，它也不是<code>Linux</code>缺省的环境变量，但对<code>JAVA</code>程序员来说非常重要。<br><code>CLASSPATH</code>环境变量存放的也是目录列表，目录之间用冒号<code>:</code>分隔，最后的圆点<code>.</code>表示当前目录，与<code>PATH</code>的格式相同。</p><h2 id="环境变量的生效"><a href="#环境变量的生效" class="headerlink" title="环境变量的生效"></a>环境变量的生效</h2><p>1）在<code>Shell</code>下，用<code>export</code>设置的环境变量对当前<code>Shell</code>立即生效，<code>Shell</code>退出后失效。<br>2）在脚本文件中设置的环境变量不会立即生效，退出<code>Shell</code>后重新登录时才生效，或者用<code>source</code>命令让它立即生效，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h2 id="应用经验"><a href="#应用经验" class="headerlink" title="应用经验"></a>应用经验</h2><p>虽然设置环境变量的方法有多种，但是建议系统环境变量建议在<code>/etc/profile.d</code>目录中配置，用户环境变量在用户的<code>.bash_profile</code>中配置，不建议在其它脚本文件中配置环境变，会增加运维的麻烦，容易出错。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a><strong>参考文章</strong></h2><p><strong>文章作者：</strong>鴻塵<br><strong>原文链接：</strong><a href="https://hwame.top/20200523/centos7-environment-variables.html">https://hwame.top/20200523/centos7-environment-variables.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 压力测试</title>
      <link href="/2022/12/21/Nginx%20%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/12/21/Nginx%20%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1-下载测试工具"><a href="#1-下载测试工具" class="headerlink" title="1.下载测试工具"></a><strong>1.下载测试工具</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-test ~]# yum install httpd-tools</span><br></pre></td></tr></table></figure><h3 id="2-查看测试工具版本号"><a href="#2-查看测试工具版本号" class="headerlink" title="2.查看测试工具版本号"></a><strong>2.查看测试工具版本号</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-test ~]# ab -V</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 1430300 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br></pre></td></tr></table></figure><h3 id="3-压力接口测试"><a href="#3-压力接口测试" class="headerlink" title="3.压力接口测试"></a><strong>3.压力接口测试</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-test ~]# ab -n 2000 -c 2  https://nues.cn/</span><br><span class="line">-n 总的请求数</span><br><span class="line">-c 并发数</span><br></pre></td></tr></table></figure><h3 id="4-相关参数"><a href="#4-相关参数" class="headerlink" title="4.相关参数"></a><strong>4.相关参数</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。</span><br><span class="line">-c一次产生的请求个数。默认是一次一个。</span><br><span class="line">-t测试所进行的最大秒数。其内部隐含值是-n 50000，它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。</span><br><span class="line">-p包含了需要POST的数据的文件。</span><br><span class="line">-P对一个中转代理提供BASIC认证信任。用户名和密码由一个：隔开，并以<span class="built_in">base64</span>编码形式发送。无论服务器是否需要(即, 是否发送了401认证需求代码)，此字符串都会被发送。</span><br><span class="line">-T POST数据所使用的Content-<span class="built_in">type</span>头信息。</span><br><span class="line">-v设置显示信息的详细程度-4或更大值会显示头信息，3或更大值可以显示响应代码（404，200等），2或更大值可以显示警告和其他信息。</span><br><span class="line">-V显示版本号并退出。</span><br><span class="line">-w以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。</span><br><span class="line">-i执行HEAD请求，而不是GET。</span><br><span class="line">-x设置属性的字符串。</span><br><span class="line">-X对请求使用代理服务器。</span><br><span class="line">-y设置属性的字符串。</span><br><span class="line">-z设置属性的字符串。</span><br><span class="line">-C对请求附加一个 Cookie: 行。其典型形式是 name=value 的一个参数对，此参数可以重复。</span><br><span class="line">-H对请求附加额外的头信息。此参数的典型形式是一个有效的头信息行，其中包含了以冒号分隔的字段和值的对(如，“Accept-Encoding:zip/zop;8bit”)。</span><br><span class="line">-A对服务器提供BASIC认证信任。用户名和密码由一个:隔开，并以<span class="built_in">base64</span>编码形式发送。无论服务器是否需要（即，是否发送了401认证需求代码），此字符串都会被发送。</span><br><span class="line">-h显示使用方法。</span><br><span class="line">-d不显示”percentage served within XX [ms] table”的消息（为以前的版本提供支持）。</span><br><span class="line">-e产生一个以逗号分隔的（CSV）文件，其中包含了处理每个相应百分比的请求所需要（从1%到100%）的相应百分比的（以微妙为单位）时间。由于这种格式已经“二进制化”，所以比’gnuplot’格式更有用。</span><br><span class="line">-g把所有测试结果写入一个’gnuplot’或者TSV（以Tab分隔的）文件。此文件可以方便地导入到Gnuplot,IDL,Mathematica,Igor甚至Excel中。其中的第一行为标题。</span><br><span class="line">-i执行HEAD请求，而不是GET。</span><br><span class="line">-k启用 HTTP KeepAlive 功能，即在一个HTTP会话中执行多个请求。默认时，不启用 KeepAlive 功能。</span><br><span class="line">-q如果处理的请求数大于150，ab每处理大约10%或者100个请求时，会在stderr输出一个进度计数。此-q标记可以抑制这些信息。</span><br></pre></td></tr></table></figure><h3 id="接口测试返回信息详解"><a href="#接口测试返回信息详解" class="headerlink" title="接口测试返回信息详解"></a>接口测试返回信息详解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-test ~]# ab -n 2000 -c 2  https://nues.cn/</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 1430300 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking nues.cn (be patient)</span><br><span class="line">Completed 200 requests  <span class="comment">#已完成200个请求</span></span><br><span class="line">Completed 400 requests   ...</span><br><span class="line">Completed 600 requests</span><br><span class="line">Completed 800 requests</span><br><span class="line">Completed 1000 requests</span><br><span class="line">Completed 1200 requests</span><br><span class="line">Completed 1400 requests</span><br><span class="line">Completed 1600 requests</span><br><span class="line">Completed 1800 requests</span><br><span class="line">Completed 2000 requests</span><br><span class="line">Finished 2000 requests <span class="comment">#已完成2000个请求</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx</span><br><span class="line">Server Hostname:        nues.cn</span><br><span class="line">Server Port:            443  <span class="comment">#监听端口</span></span><br><span class="line">SSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128</span><br><span class="line"></span><br><span class="line">Document Path:          /</span><br><span class="line">Document Length:        81168 bytes <span class="comment">#提供测试URL大小</span></span><br><span class="line"></span><br><span class="line">Concurrency Level:      2 <span class="comment">#并发数</span></span><br><span class="line">Time taken <span class="keyword">for</span> tests:   1506.503 seconds  <span class="comment">#压力测试消耗的总时间</span></span><br><span class="line">Complete requests:      2000 <span class="comment">#请求总次数</span></span><br><span class="line">Failed requests:        1991 <span class="comment">#失败连接数</span></span><br><span class="line">   (Connect: 0, Receive: 0, Length: 1991, Exceptions: 0)</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      162758648 bytes <span class="comment">#传输数据总量</span></span><br><span class="line">HTML transferred:       162116648 bytes <span class="comment">#HTML文档的总数据量</span></span><br><span class="line">Requests per second:    1.33 [#/sec] (mean)  <span class="comment">#平均每秒的请求数（非常重要的参数，是服务器的吞吐量）</span></span><br><span class="line">Time per request:       1506.503 [ms] (mean)   <span class="comment">#所有并发用户(这里是500)都请求一次的平均时间</span></span><br><span class="line">Time per request:       753.252 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          105.51 [Kbytes/sec] received  <span class="comment">#每秒获取的数据长度 (传输速率，单位：KB/s)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:      107  251 288.5    166    2628</span><br><span class="line">Processing:   448 1254 530.4   1168    7129</span><br><span class="line">Waiting:      272  489 226.4    429    4253</span><br><span class="line">Total:        558 1506 663.1   1360    7878</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%   1360  <span class="comment">#50%的请求在1360ms内返回</span></span><br><span class="line">  66%   1579  ...</span><br><span class="line">  75%   1774</span><br><span class="line">  80%   1946</span><br><span class="line">  90%   2331</span><br><span class="line">  95%   2717</span><br><span class="line">  98%   3343</span><br><span class="line">  99%   3839</span><br><span class="line"> 100%   7878 (longest request)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana7.2.1版本安装zabbix插件，添加数据源找不到zabbix</title>
      <link href="/2022/12/20/Grafana7.2.1%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85zabbix%E6%8F%92%E4%BB%B6%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E6%89%BE%E4%B8%8D%E5%88%B0zabbix/"/>
      <url>/2022/12/20/Grafana7.2.1%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85zabbix%E6%8F%92%E4%BB%B6%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E6%89%BE%E4%B8%8D%E5%88%B0zabbix/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><p><code>Grafana7.2.1</code>版本安装<code>zabbix</code>插件，添加数据源找不到<code>zabbix</code></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@prometheus ~]</span><span class="comment"># vim /etc/grafana/grafana.ini</span></span><br><span class="line"></span><br><span class="line">在690行 加上</span><br><span class="line"></span><br><span class="line"><span class="section">[plugins]</span></span><br><span class="line"><span class="comment">;enable_alpha = false</span></span><br><span class="line"><span class="comment">;app_tls_skip_verify_insecure = false</span></span><br><span class="line"><span class="attr">allow_loading_unsigned_plugins</span> = alexanderzobnin-zabbix-datasource<span class="comment">#添加这行</span></span><br></pre></td></tr></table></figure><p><strong>重启服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]# systemctl restart grafana-server.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 监控平台 </category>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grafana </tag>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitLab的备份与恢复</title>
      <link href="/2022/12/19/GitLab%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
      <url>/2022/12/19/GitLab%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Gitlab的备份目录路径设置"><a href="#一、Gitlab的备份目录路径设置" class="headerlink" title="一、Gitlab的备份目录路径设置"></a>一、Gitlab的备份目录路径设置</h1><p><code>Gitlab</code>的备份目录可以在<code>Gitlab</code>的配置文件中设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><p><strong>修改如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="string">&#x27;manage_backup_path&#x27;</span>] = <span class="literal">true</span>        </span><br><span class="line">gitlab_rails[<span class="string">&#x27;backup_path&#x27;</span>] = <span class="string">&quot;/data/gitlab/backups&quot;</span>    //gitlab备份目录</span><br><span class="line">gitlab_rails[<span class="string">&#x27;backup_archive_permissions&#x27;</span>] = 0644       //生成的备份文件权限</span><br><span class="line">gitlab_rails[<span class="string">&#x27;backup_keep_time&#x27;</span>] = 604800               //默认备份保留天数为7天（这里是604800秒）</span><br></pre></td></tr></table></figure><p><strong>创建备份目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/gitlab/backups</span><br><span class="line"><span class="built_in">chown</span> -R git.git /data/gitlab/backups</span><br></pre></td></tr></table></figure><p>最后使用下面命令重载<code>gitlab</code>配置文件，使上述修改生效！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h1 id="二、GItlab的备份"><a href="#二、GItlab的备份" class="headerlink" title="二、GItlab的备份"></a>二、GItlab的备份</h1><h2 id="手动使用命令备份gitlab"><a href="#手动使用命令备份gitlab" class="headerlink" title="手动使用命令备份gitlab"></a>手动使用命令备份gitlab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><h2 id="然后查看下备份文件（文件权限是设定好的644）"><a href="#然后查看下备份文件（文件权限是设定好的644）" class="headerlink" title="然后查看下备份文件（文件权限是设定好的644）"></a>然后查看下备份文件（文件权限是设定好的644）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab backups]# ll</span><br><span class="line">total 1680</span><br><span class="line">-rw-r--r-- 1 git git 1720320 May 6 17:47 1557136073_2019_05_06_11.10.4_gitlab_backup.tar</span><br></pre></td></tr></table></figure><h3 id="编写备份脚本"><a href="#编写备份脚本" class="headerlink" title="编写备份脚本"></a>编写备份脚本</h3><p><strong>结合crontab实施自动定时备份，比如每天2点备份一次</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/scripts</span><br><span class="line"></span><br><span class="line">vim /opt/scripts/gitlab_backup.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">/usr/bin/gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><p>然后加入到<code>crontab</code>中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 2 * * * /bin/bash /opt/scripts/gitlab_backup.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h1 id="三、Gitlab的恢复"><a href="#三、Gitlab的恢复" class="headerlink" title="三、Gitlab的恢复"></a>三、Gitlab的恢复</h1><p><code>GItlab</code>只能还原到与备份文件相同的<code>gitlab</code>版本。<br>假设在上面gitlab备份之前创建了<code>test</code>项目，然后不小心误删了<code>test</code>项目，现在就进行<code>gitlab</code>恢复操作：</p><h2 id="1、停止相关数据连接服务"><a href="#1、停止相关数据连接服务" class="headerlink" title="1、停止相关数据连接服务"></a>1、停止相关数据连接服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br></pre></td></tr></table></figure><h2 id="2、查看gitlab状态"><a href="#2、查看gitlab状态" class="headerlink" title="2、查看gitlab状态"></a>2、查看gitlab状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl status</span><br></pre></td></tr></table></figure><h2 id="3、通过之前的备份文件进行恢复（这里备份路径我自定义的-data-gitlab-backups，默认的是-var-opt-gitlab-backups）"><a href="#3、通过之前的备份文件进行恢复（这里备份路径我自定义的-data-gitlab-backups，默认的是-var-opt-gitlab-backups）" class="headerlink" title="3、通过之前的备份文件进行恢复（这里备份路径我自定义的/data/gitlab/backups，默认的是/var/opt/gitlab/backups）"></a>3、通过之前的备份文件进行恢复（这里备份路径我自定义的/data/gitlab/backups，默认的是/var/opt/gitlab/backups）</h2><p><code>Gitlab</code>的恢复操作会先将当前所有的数据清空，然后再根据备份数据进行恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:restore BACKUP=/data/gitlab/backups/1557136073_2019_05_06_11.10.4</span><br></pre></td></tr></table></figure><h2 id="4、最后再次启动Gitlab"><a href="#4、最后再次启动Gitlab" class="headerlink" title="4、最后再次启动Gitlab"></a>4、最后再次启动Gitlab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl start</span><br></pre></td></tr></table></figure><h2 id="5、查看gitlab状态"><a href="#5、查看gitlab状态" class="headerlink" title="5、查看gitlab状态"></a>5、查看gitlab状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl status</span><br></pre></td></tr></table></figure><h2 id="6、恢复命令完成后，可以check检查一下恢复情况"><a href="#6、恢复命令完成后，可以check检查一下恢复情况" class="headerlink" title="6、恢复命令完成后，可以check检查一下恢复情况"></a>6、恢复命令完成后，可以check检查一下恢复情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:check SANITIZE=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后稍等一会（如果启动<code>gitlab</code>后，访问出现500，这是因为redis等程序还没完全启动，等一会儿访问就ok了），再次登录<code>Gitlab</code>，就会发现之前误删除的test项目已经恢复了！</p><p>另外：<code>Gitlab</code>迁移与恢复一样，但是要求两个<code>GitLab</code>版本号一致。</p>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> GitLab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不同网段通过静态路由实现互通</title>
      <link href="/2022/12/19/%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E9%80%9A%E8%BF%87%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E4%BA%92%E9%80%9A/"/>
      <url>/2022/12/19/%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E9%80%9A%E8%BF%87%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E4%BA%92%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>静态路由有5个主要的参数：<code>目的地址</code>和<code>掩码</code>、<code>出接口</code>和<code>下一跳</code>、<code>优先级</code>。</p><h1 id="实验拓扑图"><a href="#实验拓扑图" class="headerlink" title="实验拓扑图"></a>实验拓扑图</h1><p>[<img src="https://s1.ax1x.com/2023/02/06/pScw0Q1.png" alt="静态路由主备备份.png"></p><h1 id="1、配置各接口所属VLAN"><a href="#1、配置各接口所属VLAN" class="headerlink" title="1、配置各接口所属VLAN"></a>1、配置各接口所属VLAN</h1><h2 id="配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。"><a href="#配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。" class="headerlink" title="配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。"></a>配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] sysname SwitchA</span><br><span class="line">[SwitchA] vlan batch 10 30</span><br><span class="line">[SwitchA] interface gigabitethernet 0/0/1</span><br><span class="line">[SwitchA-GigabitEthernet0/0/1] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/0/1] port trunk allow-pass vlan 10</span><br><span class="line">[SwitchA-GigabitEthernet0/0/1] quit</span><br><span class="line">[SwitchA] interface gigabitethernet 0/0/2</span><br><span class="line">[SwitchA-GigabitEthernet0/0/2] port link-type access</span><br><span class="line">[SwitchA-GigabitEthernet0/0/2] port default vlan 30</span><br><span class="line">[SwitchA-GigabitEthernet0/0/2] quit</span><br></pre></td></tr></table></figure><h1 id="2、配置各VLANIF接口的IP地址"><a href="#2、配置各VLANIF接口的IP地址" class="headerlink" title="2、配置各VLANIF接口的IP地址"></a>2、配置各VLANIF接口的IP地址</h1><h2 id="配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。-1"><a href="#配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。-1" class="headerlink" title="配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。"></a>配置SwitchA。SwitchB和SwitchC的配置与SwitchA类似。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] interface vlanif 10</span><br><span class="line">[SwitchA-Vlanif10] ip address 10.1.4.1 30</span><br><span class="line">[SwitchA-Vlanif10] quit</span><br><span class="line">[SwitchA] interface vlanif 30</span><br><span class="line">[SwitchA-Vlanif30] ip address 10.1.1.1 24</span><br><span class="line">[SwitchA-Vlanif30] quit</span><br></pre></td></tr></table></figure><h1 id="3、配置主机"><a href="#3、配置主机" class="headerlink" title="3、配置主机"></a>3、配置主机</h1><p>配置主机PC1的缺省网关为10.1.1.1，主机PC2的缺省网关为10.1.2.1，主机PC3的缺省网关为10.1.3.1。</p><h1 id="4、配置静态路由"><a href="#4、配置静态路由" class="headerlink" title="4、配置静态路由"></a>4、配置静态路由</h1><p>在SwitchA配置IP缺省路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] ip route-static 0.0.0.0 0.0.0.0 10.1.4.2</span><br></pre></td></tr></table></figure><p>在SwitchB配置两条IP静态路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SwitchB] ip route-static 10.1.1.0 255.255.255.0 10.1.4.1</span><br><span class="line">[SwitchB] ip route-static 10.1.3.0 255.255.255.0 10.1.4.6</span><br></pre></td></tr></table></figure><p>在SwitchC配置IP缺省路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SwitchC] ip route-static 0.0.0.0 0.0.0.0 10.1.4.5</span><br></pre></td></tr></table></figure><h1 id="5、验证配置结果"><a href="#5、验证配置结果" class="headerlink" title="5、验证配置结果"></a>5、验证配置结果</h1><h2 id="查看SwitchA的IP路由表。"><a href="#查看SwitchA的IP路由表。" class="headerlink" title="查看SwitchA的IP路由表。"></a>查看SwitchA的IP路由表。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] display ip routing-table</span><br><span class="line">Route Flags: R - relay, D - download to fib, T - to vpn-instance</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 7        Routes : 7</span><br><span class="line"> </span><br><span class="line">Destination/Mask    Proto  Pre  Cost   Flags   NextHop      Interface</span><br><span class="line"> </span><br><span class="line">        0.0.0.0/0    Static 60   0        RD    10.1.4.2     Vlanif10</span><br><span class="line">        10.1.1.0/24  Direct 0    0         D    10.1.1.1     Vlanif30</span><br><span class="line">        10.1.1.1/32  Direct 0    0         D    127.0.0.1    Vlanif30</span><br><span class="line">        10.1.4.0/30  Direct 0    0         D    10.1.4.1     Vlanif10</span><br><span class="line">        10.1.4.1/32  Direct 0    0         D    127.0.0.1    Vlanif10</span><br><span class="line">      127.0.0.0/8    Direct 0    0         D    127.0.0.1    InLoopBack0</span><br><span class="line">      127.0.0.1/32   Direct 0    0         D    127.0.0.1    InLoopBack0</span><br></pre></td></tr></table></figure><p>使用ping命令验证连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] ping 10.1.3.1</span><br><span class="line">  PING 10.1.3.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.3.1: bytes=56 Sequence=1 ttl=253 time=62 ms</span><br><span class="line">    Reply from 10.1.3.1: bytes=56 Sequence=2 ttl=253 time=63 ms</span><br><span class="line">    Reply from 10.1.3.1: bytes=56 Sequence=3 ttl=253 time=63 ms</span><br><span class="line">    Reply from 10.1.3.1: bytes=56 Sequence=4 ttl=253 time=62 ms</span><br><span class="line">    Reply from 10.1.3.1: bytes=56 Sequence=5 ttl=253 time=62 ms</span><br><span class="line"></span><br><span class="line">  --- 10.1.3.1 ping statistics ---</span><br><span class="line">    5 packet(s) transmitted</span><br><span class="line">    5 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 62/62/63 ms</span><br></pre></td></tr></table></figure><h2 id="使用Tracert命令验证连通性。"><a href="#使用Tracert命令验证连通性。" class="headerlink" title="使用Tracert命令验证连通性。"></a>使用Tracert命令验证连通性。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] tracert 10.1.3.1</span><br><span class="line"> traceroute to  10.1.3.1(10.1.3.1), max hops: 30 ,packet length: 40,press CTRL_C to break</span><br><span class="line"> 1 10.1.4.2 31 ms  32 ms  31 ms</span><br><span class="line"> 2 10.1.3.1 62 ms  63 ms  62 ms</span><br></pre></td></tr></table></figure><h1 id="6、配置文件"><a href="#6、配置文件" class="headerlink" title="6、配置文件"></a>6、配置文件</h1><h2 id="SwitchA的配置文件"><a href="#SwitchA的配置文件" class="headerlink" title="SwitchA的配置文件"></a>SwitchA的配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">sysname SwitchA</span><br><span class="line">#</span><br><span class="line">vlan batch 10 30</span><br><span class="line">#</span><br><span class="line">interface Vlanif10</span><br><span class="line"> ip address 10.1.4.1 255.255.255.252</span><br><span class="line">#</span><br><span class="line">interface Vlanif30</span><br><span class="line"> ip address 10.1.1.1 255.255.255.0</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 10</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 30</span><br><span class="line">#</span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 10.1.4.2</span><br><span class="line">#</span><br><span class="line">return</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SwitchB的配置文件"><a href="#SwitchB的配置文件" class="headerlink" title="SwitchB的配置文件"></a>SwitchB的配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">sysname SwitchB</span><br><span class="line">#</span><br><span class="line">vlan batch 10 20 40</span><br><span class="line">#</span><br><span class="line">interface Vlanif10</span><br><span class="line"> ip address 10.1.4.2 255.255.255.252</span><br><span class="line">#</span><br><span class="line">interface Vlanif20</span><br><span class="line"> ip address 10.1.4.5 255.255.255.252</span><br><span class="line">#</span><br><span class="line">interface Vlanif40</span><br><span class="line"> ip address 10.1.2.1 255.255.255.0</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 10</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 20</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/3</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 40</span><br><span class="line">#</span><br><span class="line">ip route-static 10.1.1.0 255.255.255.0 10.1.4.1</span><br><span class="line">ip route-static 10.1.3.0 255.255.255.0 10.1.4.6</span><br><span class="line">#</span><br><span class="line">return</span><br></pre></td></tr></table></figure><h2 id="SwitchC的配置文件"><a href="#SwitchC的配置文件" class="headerlink" title="SwitchC的配置文件"></a>SwitchC的配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">sysname SwitchC</span><br><span class="line">#</span><br><span class="line">vlan batch 20 50</span><br><span class="line">#</span><br><span class="line">interface Vlanif20</span><br><span class="line"> ip address 10.1.4.6 255.255.255.252</span><br><span class="line">#</span><br><span class="line">interface Vlanif50</span><br><span class="line"> ip address 10.1.3.1 255.255.255.0</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 20</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 50</span><br><span class="line">#</span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 10.1.4.5</span><br><span class="line">#</span><br><span class="line">return</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络技术 </category>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-配置密码策略（validate_password）插件</title>
      <link href="/2022/12/19/MySQL-%E9%85%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E7%AD%96%E7%95%A5%EF%BC%88validate_password%EF%BC%89%E6%8F%92%E4%BB%B6/"/>
      <url>/2022/12/19/MySQL-%E9%85%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E7%AD%96%E7%95%A5%EF%BC%88validate_password%EF%BC%89%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>validate_password（密码插件）</strong><br><code>validate_password</code>（密码插件）是<code>MySQL5.6</code>版本开始有的，部分版本默认是不开启的。<br><strong>作用：</strong><br>强制要求登入密码符合复杂性规范</p><h1 id="检查插件目录"><a href="#检查插件目录" class="headerlink" title="检查插件目录"></a>检查插件目录</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;plugin_dir&#x27;;</span><br></pre></td></tr></table></figure><h1 id="下载第三方开源插件文件并上传到步骤1目录上"><a href="#下载第三方开源插件文件并上传到步骤1目录上" class="headerlink" title="下载第三方开源插件文件并上传到步骤1目录上"></a>下载第三方开源插件文件并上传到步骤1目录上</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql5.7默认安装了密码安全检查插件（validate_password）</span><br></pre></td></tr></table></figure><h1 id="配置文件中添加对象参数配置"><a href="#配置文件中添加对象参数配置" class="headerlink" title="配置文件中添加对象参数配置"></a>配置文件中添加对象参数配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">plugin-load-add=validate_password.so</span><br><span class="line">or </span><br><span class="line">plugin-load=validate_password.so</span><br><span class="line"># validate_password_policy=2</span><br><span class="line">validate-password=FORCE_PLUS_PERMANENT</span><br></pre></td></tr></table></figure><h1 id="连接数据库并进行安装插件"><a href="#连接数据库并进行安装插件" class="headerlink" title="连接数据库并进行安装插件"></a>连接数据库并进行安装插件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; INSTALL PLUGIN validate_password SONAME &#x27;validate_password.so&#x27;;</span><br></pre></td></tr></table></figure><h1 id="检查确认"><a href="#检查确认" class="headerlink" title="检查确认"></a>检查确认</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    PLUGIN_NAME,</span><br><span class="line">    PLUGIN_STATUS,</span><br><span class="line">    plugin_library,</span><br><span class="line">    load_option</span><br><span class="line">FROM</span><br><span class="line">    INFORMATION_SCHEMA.PLUGINS </span><br><span class="line">WHERE</span><br><span class="line">    plugin_library = &#x27;validate_password.so&#x27;;</span><br><span class="line">       </span><br><span class="line">mysql&gt; show plugins;  </span><br></pre></td></tr></table></figure><h1 id="根据需求配置密码策略"><a href="#根据需求配置密码策略" class="headerlink" title="根据需求配置密码策略"></a>根据需求配置密码策略</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> 1 检查策略变量配置</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| validate_password_check_user_name    | OFF    |</span><br><span class="line">| validate_password_dictionary_file    |        |</span><br><span class="line">| validate_password_length             | 8      |</span><br><span class="line">| validate_password_mixed_case_count   | 1      |</span><br><span class="line">| validate_password_number_count       | 1      |</span><br><span class="line">| validate_password_policy             | MEDIUM |</span><br><span class="line">| validate_password_special_char_count | 1      |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> 2 密码验证插件选项和变量</span><br><span class="line">1）选项--告诉服务启动时如何加载插件</span><br><span class="line">--validate-password[=ON|OFF|FORCE|FORCE_PLUS_PERMANENT]</span><br><span class="line"></span><br><span class="line">ON: 默认值</span><br><span class="line">OFF：关闭</span><br><span class="line">FORCE: 强制</span><br><span class="line">FORCE_PLUS_PERMANENT: mysqld服务启动时加载插件并防止服务在运行中将其删除</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">2）变量--启用的检查配置项</span><br><span class="line"></span><br><span class="line">validate_password_check_user_name : 默认关闭，设置为ON时可以将密码设置成当前用户名</span><br><span class="line">validate_password_dictionary_file : 检查密码的字典文件的路径名</span><br><span class="line">validate_password_length : 默认为8，限制密码长度的最小字符数</span><br><span class="line">validate_password_mixed_case_count : 默认值为1，限制小写字符和大写字符个数 </span><br><span class="line">validate_password_number_count : 默认值为1，限制数字的个数</span><br><span class="line">validate_password_policy : 默认值为1, 密码强度等级 [LOW:0| MEDIUM:1 | STRONG:2]</span><br><span class="line">validate_password_special_char_count : 默认值为1，限制特殊字符个数</span><br><span class="line"></span><br><span class="line">其中，validate_password_policy</span><br><span class="line">0/LOW：只检查长度。</span><br><span class="line">1/MEDIUM：检查长度、数字、大小写、特殊字符。</span><br><span class="line">2/STRONG：检查长度、数字、大小写、特殊字符字典文件。</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> 1 账号密码过期，需修改密码</span><br><span class="line">遇到场景：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 1. 注意密码策略要求 validate_password_policy 等</span><br><span class="line">show variables like &#x27;validate_password%&#x27;;</span><br><span class="line"></span><br><span class="line"># 2. 依据密码策略要求修改密码</span><br><span class="line">/*</span><br><span class="line">-- 2.1 如果密码与Server的策略要求不一致时，临时修改策略及密码后恢复密码策略</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=1;</span><br><span class="line">*/</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;;</span><br><span class="line">/*</span><br><span class="line">set global validate_password_policy=1;</span><br><span class="line">set global validate_password_length=8;</span><br><span class="line">*/</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">-- 2.2 密码符合要求</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;R#isn218aio&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux shell脚本 静态检查工具 shellcheck</title>
      <link href="/2022/12/18/Linux%20shell%E8%84%9A%E6%9C%AC%20%E9%9D%99%E6%80%81%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7%20shellcheck/"/>
      <url>/2022/12/18/Linux%20shell%E8%84%9A%E6%9C%AC%20%E9%9D%99%E6%80%81%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7%20shellcheck/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>shellcheck</code> 是一款实用的 shell脚本静态检查工具。</p><ul><li>首先，可以帮助你提前发现并修复简单的语法错误，节约时间。每次都需要运行才发现写错了一个小地方，确实非常浪费时间。</li><li>其次，可以针对你当前不够完善不够健壮的写法，提供建议，帮助你提前绕开一些坑，避免等问题真的发生了才去调试处理。</li></ul><p><strong>在其介绍中，目标是针对所有用户的，从初学者到高手，都用得上</strong></p><ul><li>指出并澄清典型的初学者的语法问题，那通常会shell提供神秘的错误消息。</li><li>指出并澄清典型的中级的语义问题，这些问题会导致shell出现奇怪且反直觉的行为。</li><li>指出可能导致高级用户的脚本中，可能在未来某种情况下失败的陷阱。</li></ul><h2 id="在网页上使用"><a href="#在网页上使用" class="headerlink" title="在网页上使用"></a>在网页上使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">非常简单，在网页 `https://www.shellcheck.net` 上，贴入你的脚本，运行检查即可</span><br></pre></td></tr></table></figure><h2 id="在命令行中使用"><a href="#在命令行中使用" class="headerlink" title="在命令行中使用"></a>在命令行中使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载后，在命令行中调用 `shellcheck yourscript` 即可</span><br></pre></td></tr></table></figure><h2 id="集成到编辑器中-推荐"><a href="#集成到编辑器中-推荐" class="headerlink" title="集成到编辑器中(推荐)"></a>集成到编辑器中(推荐)</h2><p>推荐将<code>shellcheck</code>直接集成到日常编辑器中，这样就可以直接在编辑器中查看<code>ShellCheck</code>建议，以最快速度发现并修复问题。</p><ul><li><code>Vim</code> 通过 <code>ALE</code>, <code>Neomake</code> 或 <code>Syntastic</code> 进行集成</li><li><code>Emacs</code> 通过 <code>Flycheck</code> 或 <code>Flymake</code> 集成</li><li><code>Sublime</code> 通过 <code>SublimeLinter</code></li><li><code>Atom</code> 通过 <code>Linter</code></li><li><code>VSCode</code> 通过 <code>vscode-shellcheck</code></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><strong>Ubuntu</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install shellcheck</span><br></pre></td></tr></table></figure><p><strong>Centos</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install epel-release</span><br></pre></td></tr></table></figure><p><strong>Fedora</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dnf install ShellCheck</span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ shellcheck myscript.sh</span><br></pre></td></tr></table></figure><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a><strong>举例</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span>[ <span class="variable">$#</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;no para&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$#</span> para&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p><strong>看运行报错</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./test.sh: line 4: <span class="keyword">if</span>[ 0 -eq 0 ]: <span class="built_in">command</span> not found</span><br><span class="line">./test.sh: line 5: syntax error near unexpected token `<span class="keyword">then</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">./test.sh: line 5: `then&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>只是告诉你在then附近有语法问题，到底什么问题呢？我们用shellcheck看看：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ shellcheck test.sh</span><br><span class="line">In test.sh line 4:</span><br><span class="line"><span class="keyword">if</span>[ <span class="variable">$#</span> -eq 0 ]</span><br><span class="line">  ^-- SC1069: You need a space before the [.</span><br></pre></td></tr></table></figure><p><em>这么一看，就很清楚了，原来[前面少了空格。</em></p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shellcheck </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态路由实现主备备份</title>
      <link href="/2022/12/17/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E4%B8%BB%E5%A4%87%E5%A4%87%E4%BB%BD/"/>
      <url>/2022/12/17/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E4%B8%BB%E5%A4%87%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">静态路由的路由备份,就是通过给链路设置优先级来实现的;优先级最大的作为主链路,其余的作为备用链路,当主链路出现故障或断开时,备用链路会自动添加到路由表中使用。</span><br></pre></td></tr></table></figure><h1 id="实验拓扑图"><a href="#实验拓扑图" class="headerlink" title="实验拓扑图"></a>实验拓扑图</h1><p><img src="https://s1.ax1x.com/2023/01/12/pSuQwPx.png" alt="拓扑图"></p><h1 id="配置思路"><a href="#配置思路" class="headerlink" title="配置思路"></a>配置思路</h1><p>采用如下的思路配置静态路由实现主备备份：</p><ul><li>创建<code>VLAN</code>并配置各接口所属<code>VLAN</code>，配置各<code>VLANIF</code>接口的<code>IP</code>地址。</li><li>配置数据流来回两个方向的静态路由。</li><li>在各主机上配置<code>IP</code>地址和默认网关。</li></ul><h1 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h1><h2 id="配置各接口所属VLAN"><a href="#配置各接口所属VLAN" class="headerlink" title="配置各接口所属VLAN"></a>配置各接口所属VLAN</h2><p>配置<code>SwitchA,SwitchB,SwitchC</code>和<code>SwitchD</code>的配置与<code>SwitchA</code>类似。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] sysname SwitchA</span><br><span class="line">[SwitchA] vlan batch 10 100 400</span><br><span class="line">[SwitchA] interface gigabitethernet 0/0/1</span><br><span class="line">[SwitchA-GigabitEthernet0/0/1] port link-type access</span><br><span class="line">[SwitchA-GigabitEthernet0/0/1] port default vlan 10</span><br><span class="line">[SwitchA-GigabitEthernet0/0/1] quit</span><br><span class="line">[SwitchA] interface gigabitethernet 0/0/2</span><br><span class="line">[SwitchA-GigabitEthernet0/0/2] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/0/2] port trunk allow-pass vlan 100</span><br><span class="line">[SwitchA-GigabitEthernet0/0/2] quit</span><br><span class="line">[SwitchA] interface gigabitethernet 0/0/3</span><br><span class="line">[SwitchA-GigabitEthernet0/0/3] port link-type trunk</span><br><span class="line">[SwitchA-GigabitEthernet0/0/3] port trunk allow-pass vlan 400</span><br><span class="line">[SwitchA-GigabitEthernet0/0/3] quit</span><br></pre></td></tr></table></figure><h3 id="1、配置各VLANIF接口的IP地址"><a href="#1、配置各VLANIF接口的IP地址" class="headerlink" title="1、配置各VLANIF接口的IP地址"></a>1、配置各VLANIF接口的IP地址</h3><p>配置<code>SwitchA</code>。<code>SwitchB、SwitchC</code>和<code>SwitchD</code>的配置与<code>SwitchA</code>类似。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] interface vlanif 10</span><br><span class="line">[SwitchA-Vlanif10] ip address 10.1.1.1 24</span><br><span class="line">[SwitchA-Vlanif10] quit</span><br><span class="line">[SwitchA] interface vlanif 100</span><br><span class="line">[SwitchA-Vlanif100] ip address 192.168.12.1 24</span><br><span class="line">[SwitchA-Vlanif100] quit</span><br><span class="line">[SwitchA] interface vlanif 400</span><br><span class="line">[SwitchA-Vlanif400] ip address 192.168.14.1 24</span><br><span class="line">[SwitchA-Vlanif400] quit</span><br></pre></td></tr></table></figure><h3 id="2、配置PC1–PC2的去程的静态路由"><a href="#2、配置PC1–PC2的去程的静态路由" class="headerlink" title="2、配置PC1–PC2的去程的静态路由"></a>2、配置PC1–PC2的去程的静态路由</h3><h4 id="配置SwitchA"><a href="#配置SwitchA" class="headerlink" title="配置SwitchA"></a>配置SwitchA</h4><p>配置两条优先级不同的静态路由，下一跳分别指向<code>SwitchB</code>和<code>SwitchD</code>，实现数据流优先发往<code>SwitchB</code>，当去往<code>SwitchB</code>的链路发生故障的时候流量自动切换至<code>SwitchD</code>。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] ip route-static 10.1.2.0 24 192.168.12.2</span><br><span class="line">[SwitchA] ip route-static 10.1.2.0 24 192.168.14.2 preference 70</span><br></pre></td></tr></table></figure><h4 id="配置SwitchB"><a href="#配置SwitchB" class="headerlink" title="配置SwitchB"></a>配置SwitchB</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SwitchB] ip route-static 10.1.2.0 24 192.168.23.2</span><br></pre></td></tr></table></figure><h4 id="配置SwitchD"><a href="#配置SwitchD" class="headerlink" title="配置SwitchD"></a>配置SwitchD</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SwitchD] ip route-static 10.1.2.0 24 192.168.34.1</span><br></pre></td></tr></table></figure><h3 id="3、配置PC1–PC2的回程的静态路由，需要注意数据流来回的路径主备是一致的。"><a href="#3、配置PC1–PC2的回程的静态路由，需要注意数据流来回的路径主备是一致的。" class="headerlink" title="3、配置PC1–PC2的回程的静态路由，需要注意数据流来回的路径主备是一致的。"></a>3、配置PC1–PC2的回程的静态路由，需要注意数据流来回的路径主备是一致的。</h3><p>配置<code>SwitchC</code>，配置两条优先级不同的静态路由，下一跳分别指向<code>SwitchB</code>和<code>SwitchD</code>，实现数据流优先发往<code>SwitchB</code>，当去往<code>SwitchB</code>的链路发生故障的时候流量自动切换至<code>SwitchD</code>。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SwitchC] ip route-static 10.1.1.0 24 192.168.23.1</span><br><span class="line">[SwitchC] ip route-static 10.1.1.0 24 192.168.34.2 preference 70</span><br></pre></td></tr></table></figure><p>配置SwitchB</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SwitchB] ip route-static 10.1.1.0 24 192.168.12.1</span><br></pre></td></tr></table></figure><p>配置SwitchD</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SwitchD] ip route-static 10.1.1.0 24 192.168.14.1</span><br></pre></td></tr></table></figure><h3 id="4、配置主机"><a href="#4、配置主机" class="headerlink" title="4、配置主机"></a>4、配置主机</h3><p>配置主机<code>PC1</code>的IP地址为<code>10.1.1.2/24</code>，默认网关为<code>10.1.1.1</code>；配置主机<code>PC2</code>的<code>IP</code>地址为<code>10.1.2.2/24</code>，默认网关为<code>10.1.2.1</code>。</p><h1 id="验证配置结果"><a href="#验证配置结果" class="headerlink" title="验证配置结果"></a>验证配置结果</h1><h3 id="查看SwitchA的IP路由表"><a href="#查看SwitchA的IP路由表" class="headerlink" title="查看SwitchA的IP路由表"></a>查看SwitchA的IP路由表</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] display ip routing-table</span><br><span class="line">Route Flags: R - relay, D - download to fib, T - to vpn-instance</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 9        Routes : 9        </span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">       10.1.1.0/24  Direct  0    0           D   10.1.1.1        Vlanif10</span><br><span class="line">       10.1.1.1/32  Direct  0    0           D   127.0.0.1       Vlanif10</span><br><span class="line">       10.1.2.0/24  Static  60   0          RD   192.168.12.2    Vlanif100</span><br><span class="line">      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">   192.168.12.0/24  Direct  0    0           D   192.168.12.1    Vlanif100</span><br><span class="line">   192.168.12.1/32  Direct  0    0           D   127.0.0.1       Vlanif100</span><br><span class="line">   192.168.14.0/24  Direct  0    0           D   192.168.14.1    Vlanif400</span><br><span class="line">   192.168.14.1/32  Direct  0    0           D   127.0.0.1       Vlanif400</span><br></pre></td></tr></table></figure><h3 id="查看SwitchA的IP路由表详细信息"><a href="#查看SwitchA的IP路由表详细信息" class="headerlink" title="查看SwitchA的IP路由表详细信息"></a>查看SwitchA的IP路由表详细信息</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] display ip routing-table 10.1.2.0 24 verbose</span><br><span class="line">Route Flags: R - relay, D - download to fib, T - to vpn-instance</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Table : Public</span><br><span class="line">Summary Count : 2</span><br><span class="line"></span><br><span class="line">Destination: 10.1.2.0/24</span><br><span class="line">     Protocol: Static          Process ID: 0</span><br><span class="line">   Preference: 60                    Cost: 0</span><br><span class="line">      NextHop: 192.168.12.2     Neighbour: 0.0.0.0</span><br><span class="line">        State: Active Adv Relied      Age: 00h13m13s</span><br><span class="line">          Tag: 0                 Priority: medium</span><br><span class="line">        Label: NULL               QoSInfo: 0x0</span><br><span class="line">   IndirectID: 0x80000001       </span><br><span class="line"> RelayNextHop: 0.0.0.0          Interface: Vlanif100</span><br><span class="line">     TunnelID: 0x0                  Flags: RD</span><br><span class="line"></span><br><span class="line">Destination: 10.1.2.0/24</span><br><span class="line">     Protocol: Static          Process ID: 0</span><br><span class="line">   Preference: 70                    Cost: 0</span><br><span class="line">      NextHop: 192.168.14.2     Neighbour: 0.0.0.0</span><br><span class="line">        State: Inactive Adv Relied    Age: 00h00m45s</span><br><span class="line">          Tag: 0                 Priority: medium</span><br><span class="line">        Label: NULL               QoSInfo: 0x0</span><br><span class="line">   IndirectID: 0x80000002       </span><br><span class="line"> RelayNextHop: 0.0.0.0          Interface: Vlanif400</span><br><span class="line">     TunnelID: 0x0                  Flags: R</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从SwitchA的IP路由表中可以看出，到达10.1.2.0/24这个网段仅有一条活跃的路由，链路正常情况下从PC1发往PC2的数据流会优先算则走经过SwitchB的这条路径。从SwitchA的IP路由表详细信可以看出，到达10.1.2.0/24这个网段除了有一条状态为Active的路由，还有一条状态为Inactive的路由，当主用链路故障的时候状态为Inactive的路由就会重新生效，这样流量就能切换到经过SwitchD的这条路径上。这样就能通过静态路由实现路由的主备备份。</span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><h2 id="SwitchA的配置文件"><a href="#SwitchA的配置文件" class="headerlink" title="SwitchA的配置文件"></a>SwitchA的配置文件</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span></span><br><span class="line">sysname SwitchA</span><br><span class="line"><span class="params">#</span></span><br><span class="line">vlan batch 10 100 400</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif10</span><br><span class="line"> ip address 10.1.1.1 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif100</span><br><span class="line"> ip address 192.168.12.1 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif400</span><br><span class="line"> ip address 192.168.14.1 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 10</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 100</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/3</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 400</span><br><span class="line"><span class="params">#</span></span><br><span class="line">ip route-static 10.1.2.0 255.255.255.0 192.168.12.2</span><br><span class="line">ip route-static 10.1.2.0 255.255.255.0 192.168.14.2 preference 70</span><br><span class="line"><span class="params">#</span></span><br><span class="line">return</span><br></pre></td></tr></table></figure><h2 id="SwitchB的配置文件"><a href="#SwitchB的配置文件" class="headerlink" title="SwitchB的配置文件"></a>SwitchB的配置文件</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span></span><br><span class="line">sysname SwitchB</span><br><span class="line"><span class="params">#</span></span><br><span class="line">vlan batch 100 200</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif100</span><br><span class="line"> ip address 192.168.12.2 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif200</span><br><span class="line"> ip address 192.168.23.1 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 100</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 200</span><br><span class="line"><span class="params">#</span></span><br><span class="line">ip route-static 10.1.1.0 255.255.255.0 192.168.12.1</span><br><span class="line">ip route-static 10.1.2.0 255.255.255.0 192.168.23.2</span><br><span class="line"><span class="params">#</span></span><br><span class="line">return</span><br></pre></td></tr></table></figure><h2 id="SwitchC的配置文件"><a href="#SwitchC的配置文件" class="headerlink" title="SwitchC的配置文件"></a>SwitchC的配置文件</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span></span><br><span class="line">sysname SwitchC</span><br><span class="line"><span class="params">#</span></span><br><span class="line">vlan batch 20 200 300</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif20</span><br><span class="line"> ip address 10.1.2.1 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif200</span><br><span class="line"> ip address 192.168.23.2 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif300</span><br><span class="line"> ip address 192.168.34.1 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 20</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 200</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/3</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 300</span><br><span class="line"><span class="params">#</span></span><br><span class="line">ip route-static 10.1.1.0 255.255.255.0 192.168.23.1</span><br><span class="line">ip route-static 10.1.1.0 255.255.255.0 192.168.34.2 preference 70</span><br><span class="line"><span class="params">#</span></span><br><span class="line">return</span><br></pre></td></tr></table></figure><h2 id="SwitchD的配置文件"><a href="#SwitchD的配置文件" class="headerlink" title="SwitchD的配置文件"></a>SwitchD的配置文件</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span></span><br><span class="line">sysname SwitchD</span><br><span class="line"><span class="params">#</span></span><br><span class="line">vlan batch 300 400</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif300</span><br><span class="line"> ip address 192.168.34.2 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface Vlanif400</span><br><span class="line"> ip address 192.168.14.2 255.255.255.0</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 400</span><br><span class="line"><span class="params">#</span></span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 300</span><br><span class="line"><span class="params">#</span></span><br><span class="line">ip route-static 10.1.1.0 255.255.255.0 192.168.14.1</span><br><span class="line">ip route-static 10.1.2.0 255.255.255.0 192.168.34.1</span><br><span class="line"><span class="params">#</span></span><br><span class="line">return!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络技术 </category>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态路由 </tag>
            
            <tag> 主从备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 Java Web 开发环境</title>
      <link href="/2022/12/16/%E6%90%AD%E5%BB%BA%20Java%20Web%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/12/16/%E6%90%AD%E5%BB%BA%20Java%20Web%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过配置 <code>JDK</code> 、<code>Tomcat</code> 和 <code>Mysql</code>，完成<code>Java Web</code> 开发环境的配置</p><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><p><strong>JDK 是开发Java程序必须安装的软件，我们查看一下 yum 源里面的 JDK：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list java*</span><br></pre></td></tr></table></figure><p><strong>选择适合本机的JDK，并安装：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.7.0-openjdk* -y</span><br></pre></td></tr></table></figure><p><strong>安装完成后，查看是否安装成功：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h1 id="安装-Tomcat"><a href="#安装-Tomcat" class="headerlink" title="安装 Tomcat"></a>安装 Tomcat</h1><p><strong>进入本地文件夹</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br></pre></td></tr></table></figure><p><strong>到官网找到 <code>Tomcat</code> 的下载链接，并下载到服务器中, 这里提供了一个快速下载 <code>Tomcat</code> 的地址：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mc.qcloudimg.com/static/archive/fa66329388f85c08e8d6c12ceb8b2ca3/apache-tomcat-7.0.77.tar.gz</span><br></pre></td></tr></table></figure><p><strong>解压这个文件夹：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf apache-tomcat-7.0.77.tar.gz</span><br></pre></td></tr></table></figure><p><strong>重命名这个文件：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> apache-tomcat-7.0.77 /usr/local/tomcat7</span><br></pre></td></tr></table></figure><p><strong>进入 bin 文件夹</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/tomcat7/bin</span><br></pre></td></tr></table></figure><p><strong>给这个文件夹下的所有 shell 脚本授予权限：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 777 *.sh</span><br></pre></td></tr></table></figure><p><strong>开启tomcat服务：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><h1 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h1><p><strong>使用 yum 安装 MySQL：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mysql-server mysql mysql-devel</span><br></pre></td></tr></table></figure><p><strong>安装完成后，启动 MySQL 服务：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p><strong>设置 MySQL 账户 root 密码：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/mysqladmin -u root password <span class="string">&#x27;Password&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p><strong>访问 Tomcat</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问 http://ip:8080 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Tomcat </tag>
            
            <tag> Jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源码编译安装Redis</title>
      <link href="/2022/12/15/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Redis/"/>
      <url>/2022/12/15/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="1、下载源码"><a href="#1、下载源码" class="headerlink" title="1、下载源码"></a>1、下载源码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将下载的包存储在新创建的/opt/soft目录下</span><br><span class="line">[root@nues ~]# <span class="built_in">mkdir</span> /opt/soft   <span class="comment">#创建soft文件夹</span></span><br><span class="line">[root@nues ~]# <span class="built_in">cd</span> /opt/soft</span><br><span class="line">[root@nues soft]#  wget http://download.redis.io/releases/redis-5.0.6.tar.gz</span><br></pre></td></tr></table></figure><h1 id="2、安装组件"><a href="#2、安装组件" class="headerlink" title="2、安装组件"></a>2、安装组件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nues soft]# yum groupinstall <span class="string">&#x27;Development Tools&#x27;</span></span><br><span class="line">[root@nues soft]# tar -xf redis-5.0.6.tar.gz -C /usr/local/  <span class="comment">#解压到 /usr/local/路径</span></span><br></pre></td></tr></table></figure><h1 id="3、编译安装"><a href="#3、编译安装" class="headerlink" title="3、编译安装"></a>3、编译安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nues soft]# yum -y install gcc make  <span class="comment">#安装组件</span></span><br><span class="line">[root@nues soft]# <span class="built_in">cd</span> /usr/local/</span><br><span class="line">[root@nues <span class="built_in">local</span>]# <span class="built_in">mv</span> redis-5.0.6 redis  <span class="comment">#修改名字</span></span><br><span class="line">[root@nues <span class="built_in">local</span>]# <span class="built_in">cd</span> redis</span><br><span class="line">[root@nues redis]# make   <span class="comment">#编译</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/06/pScUuGR.jpg" alt="编译redis.webp"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues redis]# make install PREFIX=/usr/local/redis  <span class="comment"># 参数：后面跟 PREFIX=/usr/local/redis  指定redis的安装路径</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/06/pScUKR1.jpg" alt="安装redis.webp"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">拷贝执行文件到/usr/local/bin下</span><br><span class="line">[root@nues redis]# <span class="built_in">cd</span> /usr/local/redis/bin</span><br><span class="line">[root@nues bin]# <span class="built_in">cp</span> * /usr/local/bin/</span><br></pre></td></tr></table></figure><h1 id="4、修改配置"><a href="#4、修改配置" class="headerlink" title="4、修改配置"></a>4、修改配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis]# <span class="built_in">mkdir</span> -p /data/redis/logs <span class="comment">#创建数据目录和日志存储目录</span></span><br><span class="line">[root@nues ~]# vim /usr/local/redis/redis.conf</span><br><span class="line">修改以下行</span><br><span class="line"><span class="comment">#行号#</span></span><br><span class="line">69 <span class="comment">#bind 127.0.0.1 # 添加#号 注释掉，以便外网访问</span></span><br><span class="line">88 protected-mode no  <span class="comment">#yes改成no 关闭保护模式</span></span><br><span class="line">136 daemonize <span class="built_in">yes</span> <span class="comment">#no 改成ye 开启守护进程模式</span></span><br><span class="line">171 logfile <span class="string">&quot;/data/redis/logs/redis.log&quot;</span>  <span class="comment">#指定redis log 日志存储路径以及日志文件名称</span></span><br><span class="line">263 <span class="built_in">dir</span> /data/redis   <span class="comment">#指定AOF和RDB存储路径</span></span><br><span class="line">507 requirepass nues1234   <span class="comment">#去掉注释， 后面设置redis的密码</span></span><br></pre></td></tr></table></figure><h1 id="5、创建用户"><a href="#5、创建用户" class="headerlink" title="5、创建用户"></a>5、创建用户</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#赋权(注意要跟systemd中指定的用户一样)</span></span><br><span class="line">[root@nues ~]# groupadd appadmin</span><br><span class="line">[root@nues ~]# useradd -g appadmin -s /sbin/nologin appadmin</span><br><span class="line">[root@nues ~]# <span class="built_in">chown</span> -R appadmin. /usr/local/redis</span><br><span class="line">[root@nues ~]# <span class="built_in">chown</span> -R appadmin. /data/redis/</span><br></pre></td></tr></table></figure><h1 id="6、系统管理"><a href="#6、系统管理" class="headerlink" title="6、系统管理"></a>6、系统管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# vim /usr/local/redis/redis.conf</span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis persistent key-value database</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/redis.conf --supervised systemd</span><br><span class="line">ExecStop=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line">ExecRepload=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">Type=notify</span><br><span class="line">User=appadmin</span><br><span class="line">Group=appadmin</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h1 id="7、启动服务"><a href="#7、启动服务" class="headerlink" title="7、启动服务"></a>7、启动服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# systemctl daemon-reload  <span class="comment">#重新加载某个服务的配置文件，如果新安装了一个服务，归属于 systemctl 管理，要是新服务的服务程序配置文件生效，需重新加载。</span></span><br><span class="line">[root@nues ~]# systemctl start redis</span><br><span class="line">[root@nues ~]# systemctl <span class="built_in">enable</span> redis</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/redis.service to /usr/lib/systemd/system/redis.service.</span><br><span class="line">[root@nues ~]# systemctl status redis</span><br><span class="line">● redis.service - Redis persistent key-value database</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/redis.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 二 2021-09-14 23:29:40 EDT; 10s ago</span><br><span class="line"> Main PID: 102290 (redis-server)</span><br><span class="line">   CGroup: /system.slice/redis.service</span><br><span class="line">           └─102290 /usr/local/redis/bin/redis-server *:6379</span><br><span class="line"></span><br><span class="line">9月 14 23:29:40 nues systemd[1]: Starting Redis persistent key-value database...</span><br><span class="line">9月 14 23:29:40 nues systemd[1]: Started Redis persistent key-value database.</span><br><span class="line">9月 14 23:29:46 nues systemd[1]: [/usr/lib/systemd/system/redis.service:7] Unknown lvalue <span class="string">&#x27;ExecRepload&#x27;</span> <span class="keyword">in</span> section <span class="string">&#x27;Service&#x27;</span></span><br><span class="line">[root@nues ~]# lsof -i:6379</span><br><span class="line">COMMAND      PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">redis-ser 102290 appadmin    6u  IPv6 450647      0t0  TCP *:6379 (LISTEN)</span><br><span class="line">redis-ser 102290 appadmin    7u  IPv4 450648      0t0  TCP *:6379 (LISTEN)</span><br><span class="line">[root@nues ~]# ss -tnlp | grep 6379   <span class="comment">#socket statistics 命令即为ss</span></span><br><span class="line">LISTEN     0      128          *:6379                     *:*                   <span class="built_in">users</span>:((&quot;redis-server&quot;,pid=<span class="number">102290</span>,fd=<span class="number">7</span>))</span><br><span class="line">LISTEN     0      128         :::6379                    :::*                   <span class="built_in">users</span>:((&quot;redis-server&quot;,pid=<span class="number">102290</span>,fd=<span class="number">6</span>))</span><br></pre></td></tr></table></figure><h1 id="8、密码管理"><a href="#8、密码管理" class="headerlink" title="8、密码管理"></a>8、密码管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]#  vim /usr/local/redis/redis.conf</span><br><span class="line"><span class="comment">#行号#</span></span><br><span class="line">507 requirepass nues1234       <span class="comment"># requirepass 后面的为修改后的密码</span></span><br><span class="line">[root@nues ~]# systemctl restart redis <span class="comment">#重启服务 修改密码生效</span></span><br><span class="line">验证密码</span><br><span class="line">[root@nues ~]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; auth nues1234</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">远程访问，注意选项后面必须有个空格，然后再写密码和IP</span><br><span class="line">[root@nues ~]# redis-cli  -p 6379 -c -h 10.15.3.233</span><br><span class="line">10.15.3.233:6379&gt; auth nues1234</span><br><span class="line">OK</span><br><span class="line">10.15.3.233:6379&gt; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7使用pip3命令安装Ansible 2.11</title>
      <link href="/2022/12/14/Centos7%E4%BD%BF%E7%94%A8pip3%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85Ansible%202.11/"/>
      <url>/2022/12/14/Centos7%E4%BD%BF%E7%94%A8pip3%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85Ansible%202.11/</url>
      
        <content type="html"><![CDATA[<h1 id="Ansible简介"><a href="#Ansible简介" class="headerlink" title="Ansible简介"></a>Ansible简介</h1><ul><li>批量管理Server的工具</li><li>无需部署Agent，通过ssh管理</li><li>流行的自动化运维工具：<a href="https://github.com/ansible/ansible">https://github.com/ansible/ansible</a></li></ul><h1 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Centos7.6</span><br></pre></td></tr></table></figure><h1 id="使用源码安装Python3-9-8"><a href="#使用源码安装Python3-9-8" class="headerlink" title="使用源码安装Python3.9.8"></a>使用源码安装Python3.9.8</h1><h2 id="升级pip"><a href="#升级pip" class="headerlink" title="升级pip"></a>升级pip</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br></pre></td></tr></table></figure><h2 id="安装Ansible最新版本"><a href="#安装Ansible最新版本" class="headerlink" title="安装Ansible最新版本"></a>安装Ansible最新版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/local/python/bin/pip3 install ansible</span></span><br><span class="line">pip3 install ansible</span><br><span class="line"> </span><br><span class="line"><span class="comment">#/usr/local/python/bin/ansible --version</span></span><br><span class="line">ansible --version</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/python/bin/ansible /usr/local/bin/</span><br><span class="line">ansible --version</span><br></pre></td></tr></table></figure><h2 id="安装Ansible指定版本"><a href="#安装Ansible指定版本" class="headerlink" title="安装Ansible指定版本"></a>安装Ansible指定版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/local/python/bin/pip3 install ansible==2.1.1</span></span><br><span class="line"><span class="comment">#/usr/local/python/bin/pip3 install ansible==1.9.1</span></span><br><span class="line">pip3 install ansible==2.1.1</span><br><span class="line">pip3 install ansible==1.9.1</span><br></pre></td></tr></table></figure><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/python/bin/ansible-doc -l    <span class="comment">#查看总帮助</span></span><br><span class="line">/usr/local/python/bin/ansible-doc -s shell  <span class="comment">#查看shell模块的帮助</span></span><br><span class="line">/usr/local/python/bin/ansible-doc -s raw</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx.conf--（负载均衡） 基本配置说明</title>
      <link href="/2022/12/14/Nginx.conf--%EF%BC%88%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%89%20%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
      <url>/2022/12/14/Nginx.conf--%EF%BC%88%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%89%20%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="一、正向代理"><a href="#一、正向代理" class="headerlink" title="一、正向代理"></a>一、正向代理</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>位于客户端与原始服务器之间的服务器，为了获取原始服务器数据，客户端向代理服务器发送请求并指定请求目标（原始服务器），然后代理服务器接收请求并转换给原始服务器，并将响应数据返回客户端。</p><p><strong>正向代理是客户端使用的，对客户端进行代理，客户端知道并主动使用代理</strong></p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ul><li>访问原来无法访问的资源，FQ</li><li>可以做缓存，加速资源的访问</li><li>对客户端上网进行认证授权</li><li>上网行为管理，记录用户访问记录</li></ul><h1 id="二、反向代理服务器"><a href="#二、反向代理服务器" class="headerlink" title="二、反向代理服务器"></a>二、反向代理服务器</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>客户端发送请求到服务器（客户端认为是原始服务器，实际上是一台反向服务器），反向代理服务器接收请求并将请求转发给内部网络中的多台集群服务器，并装饰响应的数据返回给客户端</p><p><strong>反射代理一般用于服务器集群，分布式等，实现负载均衡</strong></p><h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><ul><li>负载均衡，提高处理和响应速度</li><li>保证内网的安全，隐藏服务器的信息，防止<code>web</code>攻击</li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>使用Nginx作为其他服务器</strong></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1-创建虚拟主机配置文件，并配置反向代理"><a href="#1-创建虚拟主机配置文件，并配置反向代理" class="headerlink" title="1.创建虚拟主机配置文件，并配置反向代理"></a>1.创建虚拟主机配置文件，并配置反向代理</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cd /etc/nginx/conf.d/</span></span><br><span class="line"><span class="comment">#cp /default.conf proxy.conf</span></span><br><span class="line"><span class="comment">#vi /proxy.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span>   tomcat_server &#123;</span><br><span class="line"></span><br><span class="line">         <span class="attribute">server</span> <span class="number">192.168.1.66:8080</span>  weght=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="attribute">listen</span>    <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span>  www.tomcat.com;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://tomcat_server;   <span class="comment">#指定何理的后台服务器</span></span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>重启服务</strong><code>nginx -s reload</code></p><h4 id="2-配置域名解析"><a href="#2-配置域名解析" class="headerlink" title="2.配置域名解析**"></a>2.配置域名解析**</h4><h4 id="3、访问：可直接通过www-taocat-com-访问http-192-168-1-66-8080"><a href="#3、访问：可直接通过www-taocat-com-访问http-192-168-1-66-8080" class="headerlink" title="3、访问：可直接通过www.taocat.com 访问http://192.168.1.66:8080"></a>3、访问：可直接通过www.taocat.com 访问<a href="http://192.168.1.66/">http://192.168.1.66</a>:8080</h4><h1 id="三、负载均衡"><a href="#三、负载均衡" class="headerlink" title="三、负载均衡"></a>三、负载均衡</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h2><p>反向代理服务器将接收到的请求按照一定的规则分发到不同的服务器进行处理，从而提高系统响应和处理速度，称为负载均衡</p><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vi /proxy.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span>   tomcat_server &#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">server</span> <span class="number">192.168.1.67:8080</span> </span><br><span class="line"></span><br><span class="line">server <span class="number">192.168.1.68:8080</span></span><br><span class="line"></span><br><span class="line">server <span class="number">192.168.1.69:8080</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="attribute">listen</span>    <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span>  www.tomcat.com;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://tomcat_server;   <span class="comment">#指定何理的后台服务器</span></span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">可以写成</span><br><span class="line"></span><br><span class="line">    <span class="comment">#其他页面反向代理到tomcat容器</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ .*$</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">index</span> index.jsp index.html;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http: http://tomcat_server;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="3-访问"><a href="#3-访问" class="headerlink" title="3.访问"></a>3.访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">默认轮循</span><br><span class="line"></span><br><span class="line">可直接通过www.taocat.com 访问http://192.168.1.69:8080、http://192.168.1.67:8080 、http://192.168.1.68:8080</span><br></pre></td></tr></table></figure><h1 id="四、Nginx服务器之负载均衡策略"><a href="#四、Nginx服务器之负载均衡策略" class="headerlink" title="四、Nginx服务器之负载均衡策略"></a>四、Nginx服务器之负载均衡策略</h1><p>　负载均衡用于从<code>upstream</code>模块定义的后端服务器列表中选取一台服务器接受用户的请求。一个最基本的<code>upstream</code>模块是这样的，模块内的<code>server</code>是服务器列表：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">**<span class="comment">#动态服务器组**</span></span><br><span class="line"></span><br><span class="line">    <span class="section">upstream</span> dynamic_zuoyu &#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server</span> localhost:<span class="number">8080</span>;  <span class="comment">#tomcat 7.0</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">server</span> localhost:<span class="number">8081</span>;  <span class="comment">#tomcat 8.0</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">server</span> localhost:<span class="number">8082</span>;  <span class="comment">#tomcat 8.5</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">server</span> localhost:<span class="number">8083</span>;  <span class="comment">#tomcat 9.0</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**在<code>upstream</code>模块配置完成后，要让指定的访问反向代理到服务器列表：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#其他页面反向代理到tomcat容器**</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="section">location</span> <span class="regexp">~ .*$</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">index</span> index.jsp index.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://dynamic_zuoyu;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>　<strong>这就是最基本的负载均衡实例，但这不足以满足实际需求；目前Nginx服务器的<code>upstream</code>模块支持6种方式的分配：</strong></p><h2 id="1、轮询"><a href="#1、轮询" class="headerlink" title="1、轮询"></a>1、轮询</h2><p>最基本的配置方法，上面的例子就是轮询的方式，它是<code>upstream</code>模块默认的负载均衡默认策略。每个请求会按时间顺序逐一分配到不同的后端服务器。</p><p><strong>有如下参数：</strong></p><p><strong>注意：</strong></p><ol><li><p>在轮询中，如果服务器down掉了，会自动剔除该服务器。</p></li><li><p>缺省配置就是轮询策略。</p></li><li><p>此策略适合服务器配置相当，无状态且短平快的服务使用。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> backserver &#123;</span><br><span class="line">   </span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.0.14</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.0.15</span>;</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li></ol><p>}<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">## 2、weight</span><br><span class="line"></span><br><span class="line">**权重方式，在轮询策略的基础上指定轮询的几率。例子如下：**</span><br><span class="line"></span><br><span class="line">​```nginx</span><br><span class="line">#动态服务器组</span><br><span class="line"></span><br><span class="line">    upstream dynamic_zuoyu &#123;</span><br><span class="line"></span><br><span class="line">        server localhost:8080   weight=2;  #tomcat 7.0</span><br><span class="line"></span><br><span class="line">        server localhost:8081;  #tomcat 8.0</span><br><span class="line"></span><br><span class="line">        server localhost:8082   backup;  #tomcat 8.5</span><br><span class="line"></span><br><span class="line">        server localhost:8083   max_fails=3 fail_timeout=20s;  #tomcat 9.0</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在该例子中，weight参数用于指定轮询机率，weight的默认值为1,；weight的数值与访问比率成正比，比如Tomcat 7.0被访问的机率为其他服务器的两倍。</p><p><strong>注意：</strong></p><ol><li>权重越高分配到需要处理的请求越多。</li><li>此策略可以与<code>least_conn</code>和<code>ip_hash</code>结合使用。</li><li>此策略比较适合服务器的硬件配置差别比较大的情况。</li></ol><h2 id="3、ip-hash"><a href="#3、ip-hash" class="headerlink" title="3、ip_hash"></a>3、ip_hash</h2><p>指定负载均衡器按照基于客户端IP的分配方式，这个方法确保了相同的客户端的请求一直发送到相同的服务器，以保证session会话。这样每个访客都固定访问一个后端服务器，可以解决session不能跨服务器的问题。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#动态服务器组</span></span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span> dynamic_zuoyu &#123;</span><br><span class="line"></span><br><span class="line">    ip_hash;    <span class="comment">#保证每个访客固定访问一个后端服务器</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>   weight=<span class="number">2</span>;  <span class="comment">#tomcat 7.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;  <span class="comment">#tomcat 8.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8082</span>;  <span class="comment">#tomcat 8.5</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8083</span>   max_fails=<span class="number">3</span> fail_timeout=<span class="number">20s</span>;  <span class="comment">#tomcat 9.0</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>在<code>nginx</code>版本<code>1.3.1</code>之前，不能在<code>ip_hash</code>中使用权重<code>（weight）</code>。</li><li><code>ip_hash</code>不能与<code>backup</code>同时使用。</li><li>此策略适合有状态服务，比如<code>session</code>。</li><li>当有服务器需要剔除，必须手动<code>down</code>掉。</li></ol><h2 id="4、least-conn"><a href="#4、least-conn" class="headerlink" title="4、least_conn"></a>4、least_conn</h2><p>把请求转发给连接数较少的后端服务器。轮询算法是把请求平均的转发给各个后端，使它们的负载大致相同；但是，有些请求占用的时间很长，会导致其所在的后端负载较高。这种情况下，least_conn这种方式就可以达到更好的负载均衡效果。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">#动态服务器组</span></span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span> dynamic_zuoyu &#123;</span><br><span class="line"></span><br><span class="line">    least_conn;    <span class="comment">#把请求转发给连接数较少的后端服务器</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>   weight=<span class="number">2</span>;  <span class="comment">#tomcat 7.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;  <span class="comment">#tomcat 8.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8082</span> backup;  <span class="comment">#tomcat 8.5</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8083</span>   max_fails=<span class="number">3</span> fail_timeout=<span class="number">20s</span>;  <span class="comment">#tomcat 9.0</span></span><br></pre></td></tr></table></figure><p>}</p><p><strong>注意：</strong></p><ol><li>此负载均衡策略适合请求处理时间长短不一造成服务器过载的情况。</li></ol><h2 id="5-第三方策略"><a href="#5-第三方策略" class="headerlink" title="5.第三方策略"></a>5.第三方策略</h2><p><strong>第三方的负载均衡策略的实现需要安装第三方插件。</strong></p><h3 id="1-fair"><a href="#1-fair" class="headerlink" title="1. fair"></a>1. fair</h3><p><strong>按照服务器端的响应时间来分配请求，响应时间短的优先分配。</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">动态服务器组</span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span> dynamic_zuoyu &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;  <span class="comment">#tomcat 7.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;  <span class="comment">#tomcat 8.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8082</span>;  <span class="comment">#tomcat 8.5</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8083</span>;  <span class="comment">#tomcat 9.0</span></span><br><span class="line"></span><br><span class="line">    fair;    <span class="comment">#实现响应时间短的优先分配</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-url-hash"><a href="#2-url-hash" class="headerlink" title="2. url_hash"></a>2. url_hash</h3><p>　　</p><p>按访问<code>url</code>的<code>hash</code>结果来分配请求，使每个<code>url</code>定向到同一个后端服务器，要配合缓存命中来使用。同一个资源多次请求，可能会到达不同的服务器上，导致不必要的多次下载，缓存命中率不高，以及一些资源时间的浪费。而使用<code>url_hash</code>，可以使得同一个<code>url</code>（也就是同一个资源请求）会到达同一台服务器，一旦缓存住了资源，再此收到请求，就可以从缓存中读取。　</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#动态服务器组</span></span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span> dynamic_zuoyu &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">hash</span> <span class="variable">$request_uri</span>;    <span class="comment">#实现每个url定向到同一个后端服务器</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;  <span class="comment">#tomcat 7.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;  <span class="comment">#tomcat 8.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8082</span>;  <span class="comment">#tomcat 8.5</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8083</span>;  <span class="comment">#tomcat 9.0</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、动静分离"><a href="#五、动静分离" class="headerlink" title="五、动静分离"></a>五、动静分离</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>tomcat在处理静态资源时效率不高，默认情况下所有资源都由tomcat处理，会导致web应用响应慢，占用系统资源**</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul><li>将静态资源交由<code>Nginx</code>处理，动态资源仍由<code>tomcat</code>处理，实现动静分离。</li><li>实际上就把<code>Nginx</code>作为静态资源服务器</li></ul><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><h3 id="编辑虚拟主机配置文件"><a href="#编辑虚拟主机配置文件" class="headerlink" title="编辑虚拟主机配置文件"></a>编辑虚拟主机配置文件</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vi</span> taobao.conf</span><br><span class="line">server&#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> erp.zh-jieli.com;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">index</span> index; <span class="comment">#默认主页为 /index</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#proxy_pass http://jieli;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ .*\.(js|css|ico|png|jpg|eot|svg|ttf|woff)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_cache</span> cache_one;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_cache_valid</span> <span class="number">200</span> <span class="number">304</span> <span class="number">302</span> <span class="number">5d</span>;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_cache_valid</span> any <span class="number">5d</span>;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_cache_key</span> <span class="string">&#x27;<span class="variable">$host</span>:<span class="variable">$server_port</span><span class="variable">$request_uri</span>&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">add_header</span> X-Cache <span class="string">&#x27;<span class="variable">$upstream_cache_status</span> from <span class="variable">$host</span>&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://static.zh-jieli.com; //查找位置</span><br><span class="line"></span><br><span class="line">            <span class="comment">#所有静态文件直接读取硬盘</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#root /var/lib/tomcat7/webapps/JieLiERP/WEB-INF ;</span></span><br><span class="line"></span><br><span class="line">            <span class="attribute">expires</span> <span class="number">30d</span>; <span class="comment">#缓存30天</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#其他页面反向代理到tomcat容器</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ .*$</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">index</span> index;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://zh-jieli.com;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server&#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">808</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> static;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ .*\.(js|css|ico|png|jpg|eot|svg|ttf|woff)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#所有静态文件直接读取硬盘</span></span><br><span class="line"></span><br><span class="line">            <span class="attribute">root</span> /var/lib/tomcat7/webapps/JieLiERP/WEB-INF ;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">expires</span> <span class="number">30d</span>; <span class="comment">#缓存30天</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="六、高并发处理"><a href="#六、高并发处理" class="headerlink" title="六、高并发处理"></a>六、高并发处理</h1><ol><li>负载均衡：集群</li><li>动静分离：使用<code>Nginx</code>、<code>cdn</code></li><li>缓存：以空间换时间，提高系统效率</li><li>限流：流量控制</li><li>降级：服务降载</li></ol>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单臂路由配置实例</title>
      <link href="/2022/12/14/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E5%AE%9E%E4%BE%8B/"/>
      <url>/2022/12/14/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>单臂路由<code>（router-on-a-stick）</code>是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同<code>VLAN</code>（虚拟局域网）之间的互联互通。</p><ul><li>交换机连接主机的端口为<code>access</code>链路</li><li>交换机连接路由器的端口为<code>Trunk</code>链路</li></ul><hr><h2 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h2><ul><li>单臂路由所有的流量都要经过主干链路，流量过大，容易形成流量瓶颈</li><li>单臂路由，一旦出现单点故障，对下vlan，所有vlan就不能通信了</li></ul><hr><h2 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h2><ul><li>路由器的物理接口可以被划分为多个逻辑接口</li><li>每个子接口对应一个VLAN网段的网关<br><img src="https://s1.ax1x.com/2023/01/11/pSnKAN6.png" alt="单臂路由拓扑图"></li></ul><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h2 id="AR1"><a href="#AR1" class="headerlink" title="AR1"></a>AR1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vlan batch 10 20</span><br><span class="line">interface GigabitEthernet0/0/0.1</span><br><span class="line"> dot1q termination vid 10</span><br><span class="line"> ip address 192.168.10.1 255.255.255.0 </span><br><span class="line"> arp broadcast enable</span><br><span class="line"></span><br><span class="line">interface GigabitEthernet0/0/0.2</span><br><span class="line"> dot1q termination vid 20</span><br><span class="line"> ip address 192.168.20.1 255.255.255.0 </span><br><span class="line"> arp broadcast enable</span><br></pre></td></tr></table></figure><h3 id="LSW1"><a href="#LSW1" class="headerlink" title="LSW1"></a>LSW1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vlan batch 10 20</span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line"></span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 10</span><br><span class="line"></span><br><span class="line">interface GigabitEthernet0/0/3</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 20</span><br></pre></td></tr></table></figure><h3 id="PC1"><a href="#PC1" class="headerlink" title="PC1"></a>PC1</h3><ul><li>路由器GigabitEthernet0/0/0.1子接口IP作为网关<br><img src="https://s1.ax1x.com/2023/01/11/pSnKE4K.png" alt="PC1"></li></ul><h3 id="PC2"><a href="#PC2" class="headerlink" title="PC2"></a>PC2</h3><ul><li>路由器GigabitEthernet0/0/0.2子接口IP作为网关<br><img src="https://s1.ax1x.com/2023/01/11/pSnKZ9O.png" alt="PC2"></li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.20.2</span><br><span class="line"></span><br><span class="line">Ping 192.168.20.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br><span class="line">From 192.168.20.2: bytes=32 seq=2 ttl=127 time=78 ms</span><br><span class="line">From 192.168.20.2: bytes=32 seq=3 ttl=127 time=94 ms</span><br><span class="line">From 192.168.20.2: bytes=32 seq=4 ttl=127 time=78 ms</span><br><span class="line">From 192.168.20.2: bytes=32 seq=5 ttl=127 time=78 ms</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络技术 </category>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单臂路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每天一个linux命令--后台运行命令nohup</title>
      <link href="/2022/12/12/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AAlinux%E5%91%BD%E4%BB%A4--%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4nohup/"/>
      <url>/2022/12/12/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AAlinux%E5%91%BD%E4%BB%A4--%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4nohup/</url>
      
        <content type="html"><![CDATA[<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p><code>nohup</code> 命令用于将进程放后台运行（不挂断）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> Command [ Arg … ] [ &amp; ]</span><br></pre></td></tr></table></figure><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><ul><li>—help #打印帮助信息并退出</li><li>—version #打印版本信息并退出</li></ul><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p><strong>后台运行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">nohup</span> java -server -Xms128M -Xmx512M -XX:MetaspaceSize=128M -jar test.jar <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span> &amp;</span><br></pre></td></tr></table></figure><p><strong>执行test.sh 脚本，并重定向输入到 test.log 文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">nohup</span> /scripts/test.sh &gt; test.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p><strong>2&gt;&amp;1 解释 #将标准错误 2 重定向到标准输出 &amp;1 ，标准输出 &amp;1 再被重定向输入到 test.log 文件中。</strong></p><ul><li>0 – stdin (standard input，标准输入)</li><li>1 – stdout (standard output，标准输出)</li><li>2 – stderr (standard error，标准错误输出)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nohup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令大全</title>
      <link href="/2022/12/09/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2022/12/09/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h1><h2 id="在当前目录新建一个Git代码库"><a href="#在当前目录新建一个Git代码库" class="headerlink" title="在当前目录新建一个Git代码库"></a>在当前目录新建一个Git代码库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h2 id="新建一个目录，将其初始化为Git代码库"><a href="#新建一个目录，将其初始化为Git代码库" class="headerlink" title="新建一个目录，将其初始化为Git代码库"></a>新建一个目录，将其初始化为Git代码库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init [project-name]</span><br></pre></td></tr></table></figure><h2 id="下载一个项目和它的整个代码历史"><a href="#下载一个项目和它的整个代码历史" class="headerlink" title="下载一个项目和它的整个代码历史"></a>下载一个项目和它的整个代码历史</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure><h1 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h1><p><code>Git</code> 的设置文件为<code>. gitconfig</code>，它可以在用户主目录下 (全局配置)，也可以在项目目录下 (项目配置)</p><h2 id="显示当前的Git配置"><a href="#显示当前的Git配置" class="headerlink" title="显示当前的Git配置"></a>显示当前的Git配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><h2 id="编辑Git配置文件"><a href="#编辑Git配置文件" class="headerlink" title="编辑Git配置文件"></a>编辑Git配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config -e [--global]</span><br></pre></td></tr></table></figure><h2 id="设置提交代码时的用户信息"><a href="#设置提交代码时的用户信息" class="headerlink" title="设置提交代码时的用户信息"></a>设置提交代码时的用户信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config [--global] user.name <span class="string">&quot;[name]&quot;</span></span><br><span class="line">$ git config [--global] user.email <span class="string">&quot;[email address]&quot;</span></span><br></pre></td></tr></table></figure><h2 id="颜色设置"><a href="#颜色设置" class="headerlink" title="颜色设置"></a>颜色设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global color.ui <span class="literal">true</span>                         <span class="comment"># git status等命令自动着色</span></span><br><span class="line">git config --global color.status auto</span><br><span class="line">git config --global color.diff auto</span><br><span class="line">git config --global color.branch auto</span><br><span class="line">git config --global color.interactive auto</span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy                    <span class="comment"># remove  proxy configuration on git</span></span><br></pre></td></tr></table></figure><h1 id="三、增加-删除文件"><a href="#三、增加-删除文件" class="headerlink" title="三、增加 / 删除文件"></a>三、增加 / 删除文件</h1><h2 id="添加指定文件到暂存区"><a href="#添加指定文件到暂存区" class="headerlink" title="添加指定文件到暂存区"></a>添加指定文件到暂存区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="添加指定目录到暂存区，包括子目录"><a href="#添加指定目录到暂存区，包括子目录" class="headerlink" title="添加指定目录到暂存区，包括子目录"></a>添加指定目录到暂存区，包括子目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add [<span class="built_in">dir</span>]</span><br></pre></td></tr></table></figure><h2 id="添加当前目录的所有文件到暂存区"><a href="#添加当前目录的所有文件到暂存区" class="headerlink" title="添加当前目录的所有文件到暂存区"></a>添加当前目录的所有文件到暂存区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>添加每个变化前，都会要求确认</p><h2 id="对于同一个文件的多处变化，可以实现分次提交"><a href="#对于同一个文件的多处变化，可以实现分次提交" class="headerlink" title="对于同一个文件的多处变化，可以实现分次提交"></a>对于同一个文件的多处变化，可以实现分次提交</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p</span><br></pre></td></tr></table></figure><h2 id="删除工作区文件，并且将这次删除放入暂存区"><a href="#删除工作区文件，并且将这次删除放入暂存区" class="headerlink" title="删除工作区文件，并且将这次删除放入暂存区"></a>删除工作区文件，并且将这次删除放入暂存区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">rm</span> [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="停止追踪指定文件，但该文件会保留在工作区"><a href="#停止追踪指定文件，但该文件会保留在工作区" class="headerlink" title="停止追踪指定文件，但该文件会保留在工作区"></a>停止追踪指定文件，但该文件会保留在工作区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">rm</span> --cached [file]</span><br></pre></td></tr></table></figure><h2 id="改名文件，并且将这个改名放入暂存区"><a href="#改名文件，并且将这个改名放入暂存区" class="headerlink" title="改名文件，并且将这个改名放入暂存区"></a>改名文件，并且将这个改名放入暂存区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">mv</span> [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h1 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h1><h2 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m [message]</span><br></pre></td></tr></table></figure><h2 id="提交暂存区的指定文件到仓库区"><a href="#提交暂存区的指定文件到仓库区" class="headerlink" title="提交暂存区的指定文件到仓库区"></a>提交暂存区的指定文件到仓库区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br></pre></td></tr></table></figure><h2 id="提交工作区自上次commit之后的变化，直接到仓库区"><a href="#提交工作区自上次commit之后的变化，直接到仓库区" class="headerlink" title="提交工作区自上次commit之后的变化，直接到仓库区"></a>提交工作区自上次commit之后的变化，直接到仓库区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><h2 id="提交时显示所有diff信息"><a href="#提交时显示所有diff信息" class="headerlink" title="提交时显示所有diff信息"></a>提交时显示所有diff信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -v</span><br></pre></td></tr></table></figure><h2 id="将add和commit合为一步"><a href="#将add和commit合为一步" class="headerlink" title="将add和commit合为一步"></a>将add和commit合为一步</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -am <span class="string">&#x27;message&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="使用一次新的commit，替代上一次提交"><a href="#使用一次新的commit，替代上一次提交" class="headerlink" title="使用一次新的commit，替代上一次提交"></a>使用一次新的commit，替代上一次提交</h2><h2 id="如果代码没有任何新变化，则用来改写上一次commit的提交信息"><a href="#如果代码没有任何新变化，则用来改写上一次commit的提交信息" class="headerlink" title="如果代码没有任何新变化，则用来改写上一次commit的提交信息"></a>如果代码没有任何新变化，则用来改写上一次commit的提交信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend -m [message]</span><br></pre></td></tr></table></figure><h2 id="重做上一次commit，并包括指定文件的新变化"><a href="#重做上一次commit，并包括指定文件的新变化" class="headerlink" title="重做上一次commit，并包括指定文件的新变化"></a>重做上一次commit，并包括指定文件的新变化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h1 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h1><h2 id="列出所有本地分支"><a href="#列出所有本地分支" class="headerlink" title="列出所有本地分支"></a>列出所有本地分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><h2 id="列出所有远程分支"><a href="#列出所有远程分支" class="headerlink" title="列出所有远程分支"></a>列出所有远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><h2 id="列出所有本地分支和远程分支"><a href="#列出所有本地分支和远程分支" class="headerlink" title="列出所有本地分支和远程分支"></a>列出所有本地分支和远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -a</span><br></pre></td></tr></table></figure><h2 id="新建一个分支，但依然停留在当前分支"><a href="#新建一个分支，但依然停留在当前分支" class="headerlink" title="新建一个分支，但依然停留在当前分支"></a>新建一个分支，但依然停留在当前分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch [branch-name]</span><br></pre></td></tr></table></figure><h2 id="新建一个分支，并切换到该分支"><a href="#新建一个分支，并切换到该分支" class="headerlink" title="新建一个分支，并切换到该分支"></a>新建一个分支，并切换到该分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b [branch]</span><br></pre></td></tr></table></figure><h2 id="新建一个分支，指向指定commit"><a href="#新建一个分支，指向指定commit" class="headerlink" title="新建一个分支，指向指定commit"></a>新建一个分支，指向指定commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch [branch] [commit]</span><br></pre></td></tr></table></figure><h2 id="新建一个分支，与指定的远程分支建立追踪关系"><a href="#新建一个分支，与指定的远程分支建立追踪关系" class="headerlink" title="新建一个分支，与指定的远程分支建立追踪关系"></a>新建一个分支，与指定的远程分支建立追踪关系</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track [branch] [remote-branch]</span><br></pre></td></tr></table></figure><h2 id="切换到指定分支，并更新工作区"><a href="#切换到指定分支，并更新工作区" class="headerlink" title="切换到指定分支，并更新工作区"></a>切换到指定分支，并更新工作区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout [branch-name]</span><br></pre></td></tr></table></figure><h2 id="切换到上一个分支"><a href="#切换到上一个分支" class="headerlink" title="切换到上一个分支"></a>切换到上一个分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -</span><br></pre></td></tr></table></figure><h2 id="建立追踪关系，在现有分支与指定的远程分支之间"><a href="#建立追踪关系，在现有分支与指定的远程分支之间" class="headerlink" title="建立追踪关系，在现有分支与指定的远程分支之间"></a>建立追踪关系，在现有分支与指定的远程分支之间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br></pre></td></tr></table></figure><h2 id="合并指定分支到当前分支"><a href="#合并指定分支到当前分支" class="headerlink" title="合并指定分支到当前分支"></a>合并指定分支到当前分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge [branch]</span><br></pre></td></tr></table></figure><h2 id="选择一个commit，合并进当前分支"><a href="#选择一个commit，合并进当前分支" class="headerlink" title="选择一个commit，合并进当前分支"></a>选择一个commit，合并进当前分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick [commit]</span><br></pre></td></tr></table></figure><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d [branch-name]</span><br></pre></td></tr></table></figure><h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h2 id="检出版本v2-0"><a href="#检出版本v2-0" class="headerlink" title="检出版本v2.0"></a>检出版本v2.0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout v2.0</span><br></pre></td></tr></table></figure><h2 id="从远程分支develop创建新本地分支devel并检出"><a href="#从远程分支develop创建新本地分支devel并检出" class="headerlink" title="从远程分支develop创建新本地分支devel并检出"></a>从远程分支develop创建新本地分支devel并检出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b devel origin/develop</span><br></pre></td></tr></table></figure><h2 id="检出head版本的README文件（可用于修改错误回退）"><a href="#检出head版本的README文件（可用于修改错误回退）" class="headerlink" title="检出head版本的README文件（可用于修改错误回退）"></a>检出head版本的README文件（可用于修改错误回退）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- README</span><br></pre></td></tr></table></figure><h1 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h1><h2 id="列出所有tag"><a href="#列出所有tag" class="headerlink" title="列出所有tag"></a>列出所有tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag</span><br></pre></td></tr></table></figure><h2 id="新建一个tag在当前commit"><a href="#新建一个tag在当前commit" class="headerlink" title="新建一个tag在当前commit"></a>新建一个tag在当前commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag </span><br></pre></td></tr></table></figure><h2 id="新建一个tag在指定commit"><a href="#新建一个tag在指定commit" class="headerlink" title="新建一个tag在指定commit"></a>新建一个tag在指定commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag  [commit]</span><br></pre></td></tr></table></figure><h2 id="删除本地tag"><a href="#删除本地tag" class="headerlink" title="删除本地tag"></a>删除本地tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -d </span><br></pre></td></tr></table></figure><h2 id="删除远程tag"><a href="#删除远程tag" class="headerlink" title="删除远程tag"></a>删除远程tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin :refs/tags/[tagName]</span><br></pre></td></tr></table></figure><h2 id="查看tag信息"><a href="#查看tag信息" class="headerlink" title="查看tag信息"></a>查看tag信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git show </span><br></pre></td></tr></table></figure><h2 id="提交指定tag"><a href="#提交指定tag" class="headerlink" title="提交指定tag"></a>提交指定tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [remote] </span><br></pre></td></tr></table></figure><h2 id="提交所有tag"><a href="#提交所有tag" class="headerlink" title="提交所有tag"></a>提交所有tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [remote] --tags</span><br></pre></td></tr></table></figure><h2 id="新建一个分支，指向某个tag"><a href="#新建一个分支，指向某个tag" class="headerlink" title="新建一个分支，指向某个tag"></a>新建一个分支，指向某个tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b [branch] </span><br></pre></td></tr></table></figure><h1 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h1><h2 id="显示有变更的文件"><a href="#显示有变更的文件" class="headerlink" title="显示有变更的文件"></a>显示有变更的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><h2 id="显示当前分支的版本历史"><a href="#显示当前分支的版本历史" class="headerlink" title="显示当前分支的版本历史"></a>显示当前分支的版本历史</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="显示commit历史，以及每次commit发生变更的文件"><a href="#显示commit历史，以及每次commit发生变更的文件" class="headerlink" title="显示commit历史，以及每次commit发生变更的文件"></a>显示commit历史，以及每次commit发生变更的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h2 id="搜索提交历史，根据关键词"><a href="#搜索提交历史，根据关键词" class="headerlink" title="搜索提交历史，根据关键词"></a>搜索提交历史，根据关键词</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -S [keyword]</span><br></pre></td></tr></table></figure><h2 id="显示某个commit之后的所有变动，每个commit占据一行"><a href="#显示某个commit之后的所有变动，每个commit占据一行" class="headerlink" title="显示某个commit之后的所有变动，每个commit占据一行"></a>显示某个commit之后的所有变动，每个commit占据一行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span>  HEAD --pretty=format:%s</span><br></pre></td></tr></table></figure><h2 id="显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件"><a href="#显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件" class="headerlink" title="显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件"></a>显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span>  HEAD --grep feature</span><br></pre></td></tr></table></figure><h2 id="显示某个文件的版本历史，包括文件改名"><a href="#显示某个文件的版本历史，包括文件改名" class="headerlink" title="显示某个文件的版本历史，包括文件改名"></a>显示某个文件的版本历史，包括文件改名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br></pre></td></tr></table></figure><h2 id="显示指定文件相关的每一次diff"><a href="#显示指定文件相关的每一次diff" class="headerlink" title="显示指定文件相关的每一次diff"></a>显示指定文件相关的每一次diff</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -p [file]</span><br></pre></td></tr></table></figure><h2 id="显示过去5次提交"><a href="#显示过去5次提交" class="headerlink" title="显示过去5次提交"></a>显示过去5次提交</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br></pre></td></tr></table></figure><h2 id="显示所有提交过的用户，按提交次数排序"><a href="#显示所有提交过的用户，按提交次数排序" class="headerlink" title="显示所有提交过的用户，按提交次数排序"></a>显示所有提交过的用户，按提交次数排序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git shortlog -sn</span><br></pre></td></tr></table></figure><h2 id="显示指定文件是什么人在什么时间修改过"><a href="#显示指定文件是什么人在什么时间修改过" class="headerlink" title="显示指定文件是什么人在什么时间修改过"></a>显示指定文件是什么人在什么时间修改过</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame [file]</span><br></pre></td></tr></table></figure><h2 id="显示暂存区和工作区的差异"><a href="#显示暂存区和工作区的差异" class="headerlink" title="显示暂存区和工作区的差异"></a>显示暂存区和工作区的差异</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><h2 id="显示暂存区和上一个commit的差异"><a href="#显示暂存区和上一个commit的差异" class="headerlink" title="显示暂存区和上一个commit的差异"></a>显示暂存区和上一个commit的差异</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff --cached [file]</span><br></pre></td></tr></table></figure><h2 id="显示工作区与当前分支最新commit之间的差异"><a href="#显示工作区与当前分支最新commit之间的差异" class="headerlink" title="显示工作区与当前分支最新commit之间的差异"></a>显示工作区与当前分支最新commit之间的差异</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff HEAD</span><br></pre></td></tr></table></figure><h2 id="显示两次提交之间的差异"><a href="#显示两次提交之间的差异" class="headerlink" title="显示两次提交之间的差异"></a>显示两次提交之间的差异</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff [first-branch]...[second-branch]</span><br></pre></td></tr></table></figure><h2 id="显示今天你写了多少行代码"><a href="#显示今天你写了多少行代码" class="headerlink" title="显示今天你写了多少行代码"></a>显示今天你写了多少行代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff --shortstat <span class="string">&quot;@&#123;0 day ago&#125;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="显示某次提交的元数据和内容变化"><a href="#显示某次提交的元数据和内容变化" class="headerlink" title="显示某次提交的元数据和内容变化"></a>显示某次提交的元数据和内容变化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git show [commit]</span><br></pre></td></tr></table></figure><h2 id="显示某次提交发生变化的文件"><a href="#显示某次提交发生变化的文件" class="headerlink" title="显示某次提交发生变化的文件"></a>显示某次提交发生变化的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git show --name-only [commit]</span><br></pre></td></tr></table></figure><h2 id="显示某次提交时，某个文件的内容"><a href="#显示某次提交时，某个文件的内容" class="headerlink" title="显示某次提交时，某个文件的内容"></a>显示某次提交时，某个文件的内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git show [commit]:[filename]</span><br></pre></td></tr></table></figure><h2 id="显示当前分支的最近几次提交"><a href="#显示当前分支的最近几次提交" class="headerlink" title="显示当前分支的最近几次提交"></a>显示当前分支的最近几次提交</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h1 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h1><h2 id="下载远程仓库的所有变动"><a href="#下载远程仓库的所有变动" class="headerlink" title="下载远程仓库的所有变动"></a>下载远程仓库的所有变动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch [remote]</span><br></pre></td></tr></table></figure><h2 id="显示所有远程仓库"><a href="#显示所有远程仓库" class="headerlink" title="显示所有远程仓库"></a>显示所有远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><h2 id="显示某个远程仓库的信息"><a href="#显示某个远程仓库的信息" class="headerlink" title="显示某个远程仓库的信息"></a>显示某个远程仓库的信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show [remote]</span><br></pre></td></tr></table></figure><h2 id="增加一个新的远程仓库，并命名"><a href="#增加一个新的远程仓库，并命名" class="headerlink" title="增加一个新的远程仓库，并命名"></a>增加一个新的远程仓库，并命名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add [shortname] [url]</span><br></pre></td></tr></table></figure><h2 id="取回远程仓库的变化，并与本地分支合并"><a href="#取回远程仓库的变化，并与本地分支合并" class="headerlink" title="取回远程仓库的变化，并与本地分支合并"></a>取回远程仓库的变化，并与本地分支合并</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull [remote] [branch]</span><br></pre></td></tr></table></figure><h2 id="上传本地指定分支到远程仓库"><a href="#上传本地指定分支到远程仓库" class="headerlink" title="上传本地指定分支到远程仓库"></a>上传本地指定分支到远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [remote] [branch]</span><br></pre></td></tr></table></figure><h2 id="强行推送当前分支到远程仓库，即使有冲突"><a href="#强行推送当前分支到远程仓库，即使有冲突" class="headerlink" title="强行推送当前分支到远程仓库，即使有冲突"></a>强行推送当前分支到远程仓库，即使有冲突</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [remote] --force</span><br></pre></td></tr></table></figure><h2 id="推送所有分支到远程仓库"><a href="#推送所有分支到远程仓库" class="headerlink" title="推送所有分支到远程仓库"></a>推送所有分支到远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><h1 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h1><h2 id="恢复暂存区的指定文件到工作区"><a href="#恢复暂存区的指定文件到工作区" class="headerlink" title="恢复暂存区的指定文件到工作区"></a>恢复暂存区的指定文件到工作区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout [file]</span><br></pre></td></tr></table></figure><h2 id="恢复某个commit的指定文件到暂存区和工作区"><a href="#恢复某个commit的指定文件到暂存区和工作区" class="headerlink" title="恢复某个commit的指定文件到暂存区和工作区"></a>恢复某个commit的指定文件到暂存区和工作区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout [commit] [file]</span><br></pre></td></tr></table></figure><h2 id="恢复暂存区的所有文件到工作区"><a href="#恢复暂存区的所有文件到工作区" class="headerlink" title="恢复暂存区的所有文件到工作区"></a>恢复暂存区的所有文件到工作区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout .</span><br></pre></td></tr></table></figure><h2 id="重置暂存区的指定文件，与上一次commit保持一致，但工作区不变"><a href="#重置暂存区的指定文件，与上一次commit保持一致，但工作区不变" class="headerlink" title="重置暂存区的指定文件，与上一次commit保持一致，但工作区不变"></a>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset [file]</span><br></pre></td></tr></table></figure><h2 id="重置暂存区与工作区，与上一次commit保持一致"><a href="#重置暂存区与工作区，与上一次commit保持一致" class="headerlink" title="重置暂存区与工作区，与上一次commit保持一致"></a>重置暂存区与工作区，与上一次commit保持一致</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard</span><br></pre></td></tr></table></figure><h2 id="重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变"><a href="#重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变" class="headerlink" title="重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变"></a>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset [commit]</span><br></pre></td></tr></table></figure><h2 id="重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致"><a href="#重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致" class="headerlink" title="重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致"></a>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard [commit]</span><br></pre></td></tr></table></figure><h2 id="重置当前HEAD为指定commit，但保持暂存区和工作区不变"><a href="#重置当前HEAD为指定commit，但保持暂存区和工作区不变" class="headerlink" title="重置当前HEAD为指定commit，但保持暂存区和工作区不变"></a>重置当前HEAD为指定commit，但保持暂存区和工作区不变</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep [commit]</span><br></pre></td></tr></table></figure><h2 id="新建一个commit，用来撤销指定commit"><a href="#新建一个commit，用来撤销指定commit" class="headerlink" title="新建一个commit，用来撤销指定commit"></a>新建一个commit，用来撤销指定commit</h2><h2 id="后者的所有变化都将被前者抵消，并且应用到当前分支"><a href="#后者的所有变化都将被前者抵消，并且应用到当前分支" class="headerlink" title="后者的所有变化都将被前者抵消，并且应用到当前分支"></a>后者的所有变化都将被前者抵消，并且应用到当前分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert [commit]</span><br></pre></td></tr></table></figure><h2 id="暂时将未提交的变化移除，稍后再移入"><a href="#暂时将未提交的变化移除，稍后再移入" class="headerlink" title="暂时将未提交的变化移除，稍后再移入"></a>暂时将未提交的变化移除，稍后再移入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><h1 id="十、其他"><a href="#十、其他" class="headerlink" title="十、其他"></a>十、其他</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">git init                                                  <span class="comment"># 初始化本地git仓库（创建新仓库）</span></span><br><span class="line">git config --global user.name <span class="string">&quot;xxx&quot;</span>                       <span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;xxx@xxx.com&quot;</span>              <span class="comment"># 配置邮件</span></span><br><span class="line">git config --global color.ui <span class="literal">true</span>                         <span class="comment"># git status等命令自动着色</span></span><br><span class="line">git config --global color.status auto</span><br><span class="line">git config --global color.diff auto</span><br><span class="line">git config --global color.branch auto</span><br><span class="line">git config --global color.interactive auto</span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy                    <span class="comment"># remove  proxy configuration on git</span></span><br><span class="line">git <span class="built_in">clone</span> git+ssh://git@192.168.53.168/VT.git             <span class="comment"># clone远程仓库</span></span><br><span class="line">git status                                                <span class="comment"># 查看当前版本状态（是否修改）</span></span><br><span class="line">git add xyz                                               <span class="comment"># 添加xyz文件至index</span></span><br><span class="line">git add .                                                 <span class="comment"># 增加当前子目录下所有更改过的文件至index</span></span><br><span class="line">git commit -m <span class="string">&#x27;xxx&#x27;</span>                                       <span class="comment"># 提交</span></span><br><span class="line">git commit --amend -m <span class="string">&#x27;xxx&#x27;</span>                               <span class="comment"># 合并上一次提交（用于反复修改）</span></span><br><span class="line">git commit -am <span class="string">&#x27;xxx&#x27;</span>                                      <span class="comment"># 将add和commit合为一步</span></span><br><span class="line">git <span class="built_in">rm</span> xxx                                                <span class="comment"># 删除index中的文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r *                                               <span class="comment"># 递归删除</span></span><br><span class="line">git <span class="built_in">log</span>                                                   <span class="comment"># 显示提交日志</span></span><br><span class="line">git <span class="built_in">log</span> -1                                                <span class="comment"># 显示1行日志 -n为n行</span></span><br><span class="line">git <span class="built_in">log</span> -5</span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span>                                            <span class="comment"># 显示提交日志及相关变动文件</span></span><br><span class="line">git <span class="built_in">log</span> -p -m</span><br><span class="line">git show dfb02e6e4f2f7b573337763e5c0013802e392818         <span class="comment"># 显示某个提交的详细内容</span></span><br><span class="line">git show dfb02                                            <span class="comment"># 可只用commitid的前几位</span></span><br><span class="line">git show HEAD                                             <span class="comment"># 显示HEAD提交日志</span></span><br><span class="line">git show HEAD^                                            <span class="comment"># 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span></span><br><span class="line">git tag                                                   <span class="comment"># 显示已存在的tag</span></span><br><span class="line">git tag -a v2.0 -m <span class="string">&#x27;xxx&#x27;</span>                                  <span class="comment"># 增加v2.0的tag</span></span><br><span class="line">git show v2.0                                             <span class="comment"># 显示v2.0的日志及详细内容</span></span><br><span class="line">git <span class="built_in">log</span> v2.0                                              <span class="comment"># 显示v2.0的日志</span></span><br><span class="line">git diff                                                  <span class="comment"># 显示所有未添加至index的变更</span></span><br><span class="line">git diff --cached                                         <span class="comment"># 显示所有已添加index但还未commit的变更</span></span><br><span class="line">git diff HEAD^                                            <span class="comment"># 比较与上一个版本的差异</span></span><br><span class="line">git diff HEAD -- ./lib                                    <span class="comment"># 比较与HEAD版本lib目录的差异</span></span><br><span class="line">git diff origin/master..master                            <span class="comment"># 比较远程分支master上有本地分支master上没有的</span></span><br><span class="line">git diff origin/master..master --<span class="built_in">stat</span>                     <span class="comment"># 只显示差异的文件，不显示具体内容</span></span><br><span class="line">git remote add origin git+ssh://git@192.168.53.168/VT.git <span class="comment"># 增加远程定义（用于push/pull/fetch）</span></span><br><span class="line">git branch                                                <span class="comment"># 显示本地分支</span></span><br><span class="line">git branch --contains 50089                               <span class="comment"># 显示包含提交50089的分支</span></span><br><span class="line">git branch -a                                             <span class="comment"># 显示所有分支</span></span><br><span class="line">git branch -r                                             <span class="comment"># 显示所有原创分支</span></span><br><span class="line">git branch --merged                                       <span class="comment"># 显示所有已合并到当前分支的分支</span></span><br><span class="line">git branch --no-merged                                    <span class="comment"># 显示所有未合并到当前分支的分支</span></span><br><span class="line">git branch -m master master_copy                          <span class="comment"># 本地分支改名</span></span><br><span class="line">git checkout -b master_copy                               <span class="comment"># 从当前分支创建新分支master_copy并检出</span></span><br><span class="line">git checkout -b master master_copy                        <span class="comment"># 上面的完整版</span></span><br><span class="line">git checkout features/performance                         <span class="comment"># 检出已存在的features/performance分支</span></span><br><span class="line">git checkout --track hotfixes/BJVEP933                    <span class="comment"># 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span></span><br><span class="line">git checkout v2.0                                         <span class="comment"># 检出版本v2.0</span></span><br><span class="line">git checkout -b devel origin/develop                      <span class="comment"># 从远程分支develop创建新本地分支devel并检出</span></span><br><span class="line">git checkout -- README                                    <span class="comment"># 检出head版本的README文件（可用于修改错误回退）</span></span><br><span class="line">git merge origin/master                                   <span class="comment"># 合并远程master分支至当前分支</span></span><br><span class="line">git cherry-pick ff44785404a8e                             <span class="comment"># 合并提交ff44785404a8e的修改</span></span><br><span class="line">git push origin master                                    <span class="comment"># 将当前分支push到远程master分支</span></span><br><span class="line">git push origin :hotfixes/BJVEP933                        <span class="comment"># 删除远程仓库的hotfixes/BJVEP933分支</span></span><br><span class="line">git push --tags                                           <span class="comment"># 把所有tag推送到远程仓库</span></span><br><span class="line">git fetch                                                 <span class="comment"># 获取所有远程分支（不更新本地分支，另需merge）</span></span><br><span class="line">git fetch --prune                                         <span class="comment"># 获取所有原创分支并清除服务器上已删掉的分支</span></span><br><span class="line">git pull origin master                                    <span class="comment"># 获取远程分支master并merge到当前分支</span></span><br><span class="line">git <span class="built_in">mv</span> README README2                                     <span class="comment"># 重命名文件README为README2</span></span><br><span class="line">git reset --hard HEAD                                     <span class="comment"># 将当前版本重置为HEAD（通常用于merge失败回退）</span></span><br><span class="line">git rebase</span><br><span class="line">git branch -d hotfixes/BJVEP933                           <span class="comment"># 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span></span><br><span class="line">git branch -D hotfixes/BJVEP933                           <span class="comment"># 强制删除分支hotfixes/BJVEP933</span></span><br><span class="line">git ls-files                                              <span class="comment"># 列出git index包含的文件</span></span><br><span class="line">git show-branch                                           <span class="comment"># 图示当前分支历史</span></span><br><span class="line">git show-branch --all                                     <span class="comment"># 图示所有分支历史</span></span><br><span class="line">git whatchanged                                           <span class="comment"># 显示提交历史对应的文件修改</span></span><br><span class="line">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       <span class="comment"># 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span></span><br><span class="line">git ls-tree HEAD                                          <span class="comment"># 内部命令：显示某个git对象</span></span><br><span class="line">git rev-parse v2.0                                        <span class="comment"># 内部命令：显示某个ref对于的SHA1 HASH</span></span><br><span class="line">git reflog                                                <span class="comment"># 显示所有提交，包括孤立节点</span></span><br><span class="line">git show HEAD@&#123;5&#125;</span><br><span class="line">git show master@&#123;yesterday&#125;                               <span class="comment"># 显示master分支昨天的状态</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&#x27;%h %s&#x27;</span> --graph                   <span class="comment"># 图示提交日志</span></span><br><span class="line">git show HEAD~3</span><br><span class="line">git show -s --pretty=raw 2be7fcb476</span><br><span class="line">git stash                                                 <span class="comment"># 暂存当前修改，将所有至为HEAD状态</span></span><br><span class="line">git stash list                                            <span class="comment"># 查看所有暂存</span></span><br><span class="line">git stash show -p stash@&#123;0&#125;                               <span class="comment"># 参考第一次暂存</span></span><br><span class="line">git stash apply stash@&#123;0&#125;                                 <span class="comment"># 应用第一次暂存</span></span><br><span class="line">git grep <span class="string">&quot;delete from&quot;</span>                                    <span class="comment"># 文件中搜索文本“delete from”</span></span><br><span class="line">git grep -e <span class="string">&#x27;#define&#x27;</span> --and -e SORT_DIRENT</span><br><span class="line">git gc</span><br><span class="line">git fsck</span><br></pre></td></tr></table></figure><h2 id="生成一个可供发布的压缩包"><a href="#生成一个可供发布的压缩包" class="headerlink" title="生成一个可供发布的压缩包"></a>生成一个可供发布的压缩包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git archive</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPM和YUM 详解</title>
      <link href="/2022/12/06/RPM%E5%92%8CYUM%20%E8%AF%A6%E8%A7%A3/"/>
      <url>/2022/12/06/RPM%E5%92%8CYUM%20%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h1><h2 id="1-0-介绍"><a href="#1-0-介绍" class="headerlink" title="1.0 介绍"></a>1.0 介绍</h2><p><code>RPM</code>一种用于互联网下载包的打包及安装工具,它生成具有<code>RPM</code>扩展名的文件</p><h2 id="1-1指令"><a href="#1-1指令" class="headerlink" title="1.1指令"></a>1.1指令</h2><h3 id="1-11-rpm包的查询指令"><a href="#1-11-rpm包的查询指令" class="headerlink" title="1.11 rpm包的查询指令"></a>1.11 rpm包的查询指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询已安装的所有rpm包</span></span><br><span class="line">rpm -qa</span><br><span class="line"><span class="comment">#查询所安装的rpm包并进行过滤</span></span><br><span class="line">rpm -qa | grep xxx</span><br><span class="line"><span class="comment">#分页显示</span></span><br><span class="line">rpm -qa | more</span><br><span class="line"><span class="comment">#查询软件是否安装</span></span><br><span class="line">rpm -q 软件包名</span><br><span class="line"><span class="comment">#查看软件包信息</span></span><br><span class="line">rpm -qi 软件报名</span><br><span class="line"><span class="comment">#查询软件包中的文件</span></span><br><span class="line">rpm -ql软件报名</span><br><span class="line"><span class="comment">#查询文件所属的软件包</span></span><br><span class="line">rpm -qf文件全路径名</span><br></pre></td></tr></table></figure><h3 id="1-2-安装rpm-包"><a href="#1-2-安装rpm-包" class="headerlink" title="1.2 安装rpm 包"></a>1.2 安装rpm 包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**rpm -ivh RPM** 包全路径名称</span><br><span class="line">i=install 安装</span><br><span class="line">v=verbose 提示</span><br><span class="line">h=<span class="built_in">hash</span> 进度条</span><br></pre></td></tr></table></figure><h2 id="1-3安装步骤"><a href="#1-3安装步骤" class="headerlink" title="1.3安装步骤"></a>1.3安装步骤</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">挂载上centos 的iso文件.</span><br><span class="line">到/media/Centos_x_x_Final/Packages下面找需要的rpm包.</span><br><span class="line">rpm -ivh RPM包全路径名称.</span><br><span class="line">安装完成.</span><br></pre></td></tr></table></figure><h2 id="1-4卸载rpm包"><a href="#1-4卸载rpm包" class="headerlink" title="1.4卸载rpm包"></a>1.4卸载rpm包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e RPM包的名称</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果其他软件包依赖于要卸载的软件包,卸载时则会产生错误信息.</span><br><span class="line">如果强制删除，可以增加参数-nodeps,但是不推荐这样做。</span><br><span class="line">rpm-e --nodepes RPM包名称</span><br></pre></td></tr></table></figure><h1 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h1><h2 id="2-0介绍"><a href="#2-0介绍" class="headerlink" title="2.0介绍"></a>2.0介绍</h2><p><code>Yum</code>是一个<code>Shell</code>前端软件包管理器.基于<code>RPM</code>包管理，能够从指定的服务器自动下载.<code>RPM</code>包并且安装,可以自动处理依赖性关系.并且一次性安装所有依赖的软件包.</p><h2 id="2-1-指令"><a href="#2-1-指令" class="headerlink" title="2.1 指令"></a>2.1 指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">查询yum服务器是否有需要安装的软件</span><br><span class="line">yum list|grep xxx软件名</span><br><span class="line">安装指定的yum包</span><br><span class="line">yum install xxx</span><br><span class="line">卸载指定的yum包</span><br><span class="line">yum remove xxx</span><br><span class="line">列出软件包的依赖</span><br><span class="line">yum deplist xxx</span><br><span class="line">显示软件包的秒数信息和摘要信息</span><br><span class="line">yum info xxx</span><br><span class="line">升级所有软件包</span><br><span class="line">yum update</span><br><span class="line">升级指定软件包</span><br><span class="line">yum update xxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rpm </tag>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于CentOS搭建Node.js环境</title>
      <link href="/2022/12/03/%E5%9F%BA%E4%BA%8ECentOS%E6%90%AD%E5%BB%BANode.js%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/12/03/%E5%9F%BA%E4%BA%8ECentOS%E6%90%AD%E5%BB%BANode.js%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Node-js环境"><a href="#安装Node-js环境" class="headerlink" title="安装Node.js环境"></a>安装Node.js环境</h1><p><strong>1.下载最新的稳定版到本地</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# wget https://nodejs.org/dist/v6.10.3/node-v6.10.3-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p><strong>2.将其解压</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# tar xvJf node-v6.10.3-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p><strong>3.将解压的 Node.js 目录移动到 /usr/local 目录下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">mv</span> node-v6.10.3-linux-x64 /usr/local/node-v6</span><br></pre></td></tr></table></figure><p><strong>4.配置 node 软链接到 /bin 目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">ln</span> -s /usr/local/node-v6/bin/node /bin/node</span><br></pre></td></tr></table></figure><h1 id="配置和使用npm"><a href="#配置和使用npm" class="headerlink" title="配置和使用npm"></a>配置和使用npm</h1><p><code>npm</code> 是 <code>Node.js</code> 的包管理和分发工具。它可以让 <code>Node.js</code> 开发者能够更加轻松的共享代码和共用代码片段</p><p><strong>1.下载 <code>node</code> 的压缩包中已经包含了 <code>npm</code> , 我们只需要将其软链接到 <code>bin</code> 目录下即可</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">ln</span> -s /usr/local/node-v6/bin/npm /bin/npm</span><br></pre></td></tr></table></figure><p><strong>2.配置环境变量</strong></p><p><strong>2.1将 <code>/usr/local/node-v6/bin</code> 目录添加到 <code>$PATH</code> 环境变量中可以方便地使用通过 <code>npm</code> 全局安装的第三方工具</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">echo</span> <span class="string">&#x27;export PATH=/usr/local/node-v6/bin:$PATH&#x27;</span> &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><p><strong>2.2生效环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p><strong>3.使用 npm</strong></p><p>通过 <code>npm</code> 安装进程管理模块 <code>forever</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# npm install forever -g</span><br></pre></td></tr></table></figure><ul><li><a href="https://cloud.tencent.com/developer/labs/lab/10040">参阅</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每天一个linux命令--egrep</title>
      <link href="/2022/12/02/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--egrep/"/>
      <url>/2022/12/02/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4--egrep/</url>
      
        <content type="html"><![CDATA[<p><code>egrep</code>命令以名称为依据从运行进程队列中查找进程，并显示查找到的进程<code>ID</code>。每一个进程<code>ID</code>以一个十进制数表示，通过一个分割字符串和下一个<code>ID</code>分开，默认的分割字符串是一个新行。对于每个属性选项，用户可以在命令行上指定一个以逗号分割的可能值的集合。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p><code>egrep(选项)(参数)</code></p><h1 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-o：仅显示找到的最小（起始）进程号；</span><br><span class="line">-n：仅显示找到的最大（结束）进程号；</span><br><span class="line">-l：显示进程名称；</span><br><span class="line">-P：指定父进程号；</span><br><span class="line">-g：指定进程组；</span><br><span class="line">-t：指定开启进程的终端；</span><br><span class="line">-u：指定进程的有效用户ID。</span><br></pre></td></tr></table></figure><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进程名称：指定要查找的进程名称，同时也支持类似grep指令中的匹配模式。</span><br></pre></td></tr></table></figure><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# pgrep -lo httpd</span><br><span class="line">4557 httpd</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# pgrep -<span class="built_in">ln</span> httpd</span><br><span class="line">4566 httpd</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# pgrep -l httpd</span><br><span class="line">4557 httpd</span><br><span class="line">4560 httpd</span><br><span class="line">4561 httpd</span><br><span class="line">4562 httpd</span><br><span class="line">4563 httpd</span><br><span class="line">4564 httpd</span><br><span class="line">4565 httpd</span><br><span class="line">4566 httpd</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# pgrep httpd</span><br><span class="line">4557</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> egrep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux split 分割日志</title>
      <link href="/2022/11/21/Linux%20split%20%E5%88%86%E5%89%B2%E6%97%A5%E5%BF%97/"/>
      <url>/2022/11/21/Linux%20split%20%E5%88%86%E5%89%B2%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> 命令用于将文件平均分割为多个小文件，多用于日志查看。</span><br><span class="line"></span><br><span class="line">先下载一个测试文件 [split_test][1]</span><br><span class="line">[root@dosbat ~]# wget https://raw.githubusercontent.com/wxnacy/file/master/common/split_test</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# <span class="built_in">split</span> split_test </span><br><span class="line">[root@dosbat ~]# ll</span><br><span class="line">-rw-r--r--  1 root root   216320 8月  15 05:55 split_test</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xaa</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xab</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xac</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xad</span><br><span class="line">...</span><br><span class="line">默认 `<span class="built_in">split</span>` 会将文件均匀的分割成多个小文件，文件名以 x 开头，剩余字符按字符表排序。</span><br></pre></td></tr></table></figure><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">split</span> [OPTION]... [FILE [PREFIX]]</span><br></pre></td></tr></table></figure><p><code>split</code> 命令有多个参数可供调用</p><ul><li>-b 指定输出文件的大小，单位为 byte。</li><li>-d 使用数字作为后缀。</li><li>-l 指定输出文件的行数</li><li>-a 指定后缀的长度</li></ul><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="分割出-100k-的文件"><a href="#分割出-100k-的文件" class="headerlink" title="分割出 100k 的文件"></a>分割出 100k 的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">split</span> -b 100k split_test</span><br><span class="line">[root@dosbat ~]# ll</span><br><span class="line">total 856</span><br><span class="line">-rw-r--r--  1 root root   216320 8月  15 05:55 split_test</span><br><span class="line">-rw-r--r--  1 root root   102400 8月  15 05:58 xaa</span><br><span class="line">-rw-r--r--  1 root root   102400 8月  15 05:58 xab</span><br><span class="line">-rw-r--r--  1 root root    11520 8月  15 05:58 xac</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xad</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xae</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xaf</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xag</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 05:56 xah</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="使用数字为后缀，并指定长度"><a href="#使用数字为后缀，并指定长度" class="headerlink" title="使用数字为后缀，并指定长度"></a>使用数字为后缀，并指定长度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">split</span> -b 100k -d -a 4 split_test</span><br><span class="line">[root@dosbat ~]# ll</span><br><span class="line"></span><br><span class="line">-rw-r--r--  1 root root   216320 8月  15 05:55 split_test</span><br><span class="line">-rw-r--r--  1 root root   102400 8月  15 06:01 x0000</span><br><span class="line">-rw-r--r--  1 root root   102400 8月  15 06:01 x0001</span><br><span class="line">-rw-r--r--  1 root root    11520 8月  15 06:01 x0002</span><br></pre></td></tr></table></figure><h2 id="指定文件前缀"><a href="#指定文件前缀" class="headerlink" title="指定文件前缀"></a>指定文件前缀</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">split</span> -b 100k -d -a 4 split_test <span class="built_in">split</span>.</span><br><span class="line">-rw-r--r--  1 root root   102400 8月  15 06:02 split.0000</span><br><span class="line">-rw-r--r--  1 root root   102400 8月  15 06:02 split.0001</span><br><span class="line">-rw-r--r--  1 root root    11520 8月  15 06:02 split.0002</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="指定行数分割文件"><a href="#指定行数分割文件" class="headerlink" title="指定行数分割文件"></a>指定行数分割文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">split</span> -l 1000 split_test</span><br><span class="line">[root@dosbat ~]# ll</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xaa</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xab</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xac</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xad</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xae</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xaf</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xag</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xah</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xai</span><br><span class="line">-rw-r--r--  1 root root    20000 8月  15 06:03 xaj</span><br><span class="line">-rw-r--r--  1 root root    16320 8月  15 06:03 xak</span><br><span class="line">...</span><br><span class="line">[root@prometheus ~]# <span class="built_in">wc</span> -l xaa</span><br><span class="line">1000 xaa</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NTP时间服务器配置</title>
      <link href="/2022/11/19/NTP%E6%97%B6%E9%97%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/11/19/NTP%E6%97%B6%E9%97%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="NTP"><a href="#NTP" class="headerlink" title="NTP"></a>NTP</h1><p><code>NTP（Network Time Protocol）</code>网络时间协议，工作在<code>UDP</code>的<code>123</code>端口。一种来同步计算机时间，实现高精度时间同步，较小的误差的协议。</p><h1 id="NTP服务器"><a href="#NTP服务器" class="headerlink" title="NTP服务器"></a>NTP服务器</h1><p><code>NTP</code>服务器通过向<code>UTC</code>的时间源（<code>原子钟、天文台、卫星或者Internet</code>）获取时间同步。根据与<code>UTC</code>源的远近将所有时间服务器划分为不同的层<code>（Stratum）</code>。顶层的<code>Stratum-1</code>有外部<code>UTC</code>接入，<code>Stratum-2</code>从顶层获取时间，<code>Stratum-3</code>从<code>Stratum-2</code>获取时间，以此类推，成阶梯式架构互相连接。总层数在15以内。顶层<code>Stratum-1</code>是整个系统的基础。</p><p>计算机主机与多个时间服务器连接，利用统计学的算法过滤不同服务器的时间，选择最佳的路径和来源校正主机时间。<code>NTP</code>使用鉴定<code>（Authentication）</code>机制，检查时间来源的合法性。</p><h1 id="NTP时间同步方式"><a href="#NTP时间同步方式" class="headerlink" title="NTP时间同步方式"></a>NTP时间同步方式</h1><ul><li><code>broadcast/multicast</code>:主要用于局域网对时，时间服务器周期性广播，将时间信息传送给其他网络中的时间服务器，时间有少量延迟，配置简单，但是精确度不高。</li><li><code>Symmetric</code>：一台服务器从远端时间服务器获取时钟，也可以提供时间信息给远端的时间服务器。这种方式用于配置冗余的时间服务器，以提供更高精确度给主机。</li><li><code>client/server</code>：一台时间服务器接收上层时间服务器的时间信息，并提供时间信息给下层用户。不提供给其他时间服务器时间信息。时间信息传输都使用<code>UDP</code>协议。同时与许多时间服务器通讯校时，利用过滤算法找出相对可靠的时间来源，然后用它来校时。</li></ul><h1 id="NTP服务器配置"><a href="#NTP服务器配置" class="headerlink" title="NTP服务器配置"></a>NTP服务器配置</h1><div class="table-container"><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:right">IP</th><th style="text-align:center">系统</th></tr></thead><tbody><tr><td style="text-align:left">ntp_server</td><td style="text-align:right">10.15.3.100</td><td style="text-align:center">RHEL7.8</td></tr><tr><td style="text-align:left">ntp_client</td><td style="text-align:right">10.15.3.42</td><td style="text-align:center">RHEL7.8</td></tr></tbody></table></div><h2 id="1-安装ntp"><a href="#1-安装ntp" class="headerlink" title="1.安装ntp"></a>1.安装ntp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1）确认是否已安装ntp</span><br><span class="line">[root@ntp_server ~]# rpm -qa |grep ntp</span><br><span class="line">若只有ntpdate而未见ntp，则需删除原有ntpdate。如：</span><br><span class="line"></span><br><span class="line">ntpdate-4.2.6p5-22.el7_0.x86_64</span><br><span class="line"></span><br><span class="line">fontpackages-filesystem-1.44-8.el7.noarch</span><br><span class="line"></span><br><span class="line">python-ntplib-0.3.2-1.el7.noarch</span><br><span class="line"></span><br><span class="line">2）删除已安装ntp</span><br><span class="line">[root@ntp_server ~]# yum –y remove ntpdate-4.2.6p5-22.el7.x86_64</span><br><span class="line">3）重新安装ntp</span><br><span class="line">[root@server ~]# yum –y install ntp</span><br></pre></td></tr></table></figure><h2 id="2-修改配置钱，向上层时间服务器同步本机时间"><a href="#2-修改配置钱，向上层时间服务器同步本机时间" class="headerlink" title="2.修改配置钱，向上层时间服务器同步本机时间"></a>2.修改配置钱，向上层时间服务器同步本机时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_server ~]# ntpdate 114.118.7.161</span><br><span class="line">30 May 02:52:51 ntpdate[12938]: adjust time server 114.118.7.161 offset 0.000146 sec</span><br></pre></td></tr></table></figure><h2 id="3-修改-etc-ntp-conf配置文件"><a href="#3-修改-etc-ntp-conf配置文件" class="headerlink" title="3.修改/etc/ntp.conf配置文件"></a>3.修改/etc/ntp.conf配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_server ~]# vi /etc/ntp.conf </span><br><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line"><span class="comment">#注释默认拒绝所有操作</span></span><br><span class="line"><span class="comment">#restrict default nomodify notrap nopeer noquery</span></span><br><span class="line"><span class="comment">#允许本机的所有操作</span></span><br><span class="line">restrict 127.0.0.1 </span><br><span class="line">restrict ::1</span><br><span class="line"><span class="comment">#允许10.15.3.0网段的机器同步时间</span></span><br><span class="line">restrict 10.15.3.0 mask 255.255.255.0 nomodify notrap</span><br><span class="line"><span class="comment">#允许任何人来同步</span></span><br><span class="line"><span class="comment">#restrict default nomodify notrap</span></span><br><span class="line"><span class="comment">#同步的上层时间服务器地址</span></span><br><span class="line">server 114.118.7.161</span><br><span class="line">server 202.112.10.36</span><br><span class="line"><span class="comment">#允许上层时间服务器主动修改本机时间</span></span><br><span class="line">restrict 114.118.7.161 nomodify notrap noquery</span><br><span class="line">restrict 202.112.10.36 nomodify notrap noquery</span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line"><span class="comment">#以本机作为时间服务器，上层不可用时，以本地时间为准，层数设置为8</span></span><br><span class="line">server 127.127.1.0 prefer</span><br><span class="line">fudge 127.127.1.0 stratum 8</span><br><span class="line"><span class="built_in">disable</span> monitor</span><br></pre></td></tr></table></figure><h2 id="4-将同步的时间写入硬件时钟"><a href="#4-将同步的时间写入硬件时钟" class="headerlink" title="4.将同步的时间写入硬件时钟"></a>4.将同步的时间写入硬件时钟</h2><p>在<code>/etc/sysconfig/ntpd</code>文件中添加<code>SYNC_HWCLOCK=yes</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_server ~]# vi /etc/sysconfig/ntpd</span><br></pre></td></tr></table></figure><h2 id="5-设置ntp服务自启动，并开启ntp服务"><a href="#5-设置ntp服务自启动，并开启ntp服务" class="headerlink" title="5.设置ntp服务自启动，并开启ntp服务"></a>5.设置ntp服务自启动，并开启ntp服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_server ~]# systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">[root@ntp_server ~]# systemctl start ntpd</span><br></pre></td></tr></table></figure><h2 id="6-开放防火墙的123udp端口"><a href="#6-开放防火墙的123udp端口" class="headerlink" title="6.开放防火墙的123udp端口"></a>6.开放防火墙的123udp端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_server ~]# firewall-cmd --zone=public --add-port=123/udp --permanent</span><br><span class="line">[root@ntp_server ~]# systemctl restart firewalld</span><br><span class="line">[root@ntp_server ~]# firewall-cmd --list-ports</span><br><span class="line">123/udp</span><br></pre></td></tr></table></figure><h2 id="7-使用ntpq-p查看状态"><a href="#7-使用ntpq-p查看状态" class="headerlink" title="7.使用ntpq -p查看状态"></a>7.使用ntpq -p查看状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]# ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line">*time.neu.edu.cn .PTP.            1 u   43   64    1   77.505   -5.118   0.152</span><br><span class="line"> makaki.miuku.ne .INIT.          16 u    -   64    0    0.000    0.000   0.000</span><br><span class="line"> pingless.com    .INIT.          16 u    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp7.flashdance 192.36.143.152   2 u   42   64    1  277.343   -1.609   3.482</span><br><span class="line"> 114.118.7.161   .INIT.          16 u    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 202.112.10.36   .INIT.          16 u    -   64    0    0.000    0.000   0.000</span><br></pre></td></tr></table></figure><h1 id="NTP客户端配置"><a href="#NTP客户端配置" class="headerlink" title="NTP客户端配置"></a>NTP客户端配置</h1><h2 id="1-客户端使用命令同步时间-或者配置同步计划"><a href="#1-客户端使用命令同步时间-或者配置同步计划" class="headerlink" title="1.客户端使用命令同步时间,或者配置同步计划"></a>1.客户端使用命令同步时间,或者配置同步计划</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_client ~]# ntpdate 10.15.3.42</span><br><span class="line">30 May 15:20:33 ntpdate[16251]: step time server 10.15.3.42 offset 8.376900 sec</span><br></pre></td></tr></table></figure><h2 id="2-写入定时任务-定时同步时间"><a href="#2-写入定时任务-定时同步时间" class="headerlink" title="2.写入定时任务,定时同步时间"></a>2.写入定时任务,定时同步时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp_client ~]# crontab -e</span><br><span class="line">*/1 * * * * ntpdate 10.15.3.42</span><br></pre></td></tr></table></figure><h1 id="国内常用NTP服务器地址及IP"><a href="#国内常用NTP服务器地址及IP" class="headerlink" title="国内常用NTP服务器地址及IP"></a>国内常用NTP服务器地址及IP</h1><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">210.72.145.44 (国家授时中心服务器IP地址)  </span><br><span class="line">133.100.11.8 日本 福冈大学  </span><br><span class="line">time-a.nist.gov 129.6.15.28 NIST, Gaithersburg, Maryland   </span><br><span class="line">time-b.nist.gov 129.6.15.29 NIST, Gaithersburg, Maryland   </span><br><span class="line">time-a.timefreq.bldrdoc.gov 132.163.4.101 NIST, Boulder, Colorado   </span><br><span class="line">time-b.timefreq.bldrdoc.gov 132.163.4.102 NIST, Boulder, Colorado   </span><br><span class="line">time-c.timefreq.bldrdoc.gov 132.163.4.103 NIST, Boulder, Colorado   </span><br><span class="line">utcnist.colorado.edu 128.138.140.44 University of Colorado, Boulder   </span><br><span class="line">time.nist.gov 192.43.244.18 NCAR, Boulder, Colorado   </span><br><span class="line">time-nw.nist.gov 131.107.1.10 Microsoft, Redmond, Washington   </span><br><span class="line">nist1.symmetricom.com 69.25.96.13 Symmetricom, San Jose, California   </span><br><span class="line">nist1-dc.glassey.com 216.200.93.8 Abovenet, Virginia   </span><br><span class="line">nist1-ny.glassey.com 208.184.49.9 Abovenet, New York City   </span><br><span class="line">nist1-sj.glassey.com 207.126.98.204 Abovenet, San Jose, California   </span><br><span class="line">nist1.aol-ca.truetime.com 207.200.81.113 TrueTime, AOL facility, Sunnyvale, California   </span><br><span class="line">nist1.aol-va.truetime.com 64.236.96.53 TrueTime, AOL facility, Virginia  </span><br><span class="line">————————————————————————————————————  </span><br><span class="line">ntp.sjtu.edu.cn 202.120.2.101 (上海交通大学网络中心NTP服务器地址）  </span><br><span class="line">s1a.time.edu.cn 北京邮电大学  </span><br><span class="line">s1b.time.edu.cn 清华大学  </span><br><span class="line">s1c.time.edu.cn 北京大学  </span><br><span class="line">s1d.time.edu.cn 东南大学  </span><br><span class="line">s1e.time.edu.cn 清华大学  </span><br><span class="line">s2a.time.edu.cn 清华大学  </span><br><span class="line">s2b.time.edu.cn 清华大学  </span><br><span class="line">s2c.time.edu.cn 北京邮电大学  </span><br><span class="line">s2d.time.edu.cn 西南地区网络中心  </span><br><span class="line">s2e.time.edu.cn 西北地区网络中心  </span><br><span class="line">s2f.time.edu.cn 东北地区网络中心  </span><br><span class="line">s2g.time.edu.cn 华东南地区网络中心  </span><br><span class="line">s2h.time.edu.cn 四川大学网络管理中心  </span><br><span class="line">s2j.time.edu.cn 大连理工大学网络中心  </span><br><span class="line">s2k.time.edu.cn CERNET桂林主节点  </span><br><span class="line">s2m.time.edu.cn 北京大学</span><br><span class="line">-----------------------------------</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos8网络相关命令</title>
      <link href="/2022/11/19/Centos8%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/11/19/Centos8%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>因为<code>CentOS 8</code>系统，弃用了<code>network.service</code> ，采用<code>NetworkManager（NM）</code>为网卡启用命令，当然<code>CentOS 8</code> 也可以安装<code>network.service</code>作为网卡服务，但是为了适应版本，我们在这里还是得来看下<code>nmcli</code>的命令的使用。</p><h2 id="网卡停止和启动命令"><a href="#网卡停止和启动命令" class="headerlink" title="网卡停止和启动命令"></a>网卡停止和启动命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启动 nmcli connection down ens33</span><br><span class="line"></span><br><span class="line">停止 nmcli connection up ens33</span><br></pre></td></tr></table></figure><h1 id="重启命令"><a href="#重启命令" class="headerlink" title="重启命令"></a>重启命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nmcli connection reload</span><br></pre></td></tr></table></figure><h1 id="查看网卡设备详细信息"><a href="#查看网卡设备详细信息" class="headerlink" title="查看网卡设备详细信息"></a>查看网卡设备详细信息</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nmcli device show / nmcli device show eth0</span><br></pre></td></tr></table></figure><h1 id="查看网卡设备状态"><a href="#查看网卡设备状态" class="headerlink" title="查看网卡设备状态"></a>查看网卡设备状态</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nmcli device status</span><br></pre></td></tr></table></figure><h1 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nmcli c / nmcli connection show <span class="comment">#c就是connection</span></span><br></pre></td></tr></table></figure><h1 id="查看所有活动连接"><a href="#查看所有活动连接" class="headerlink" title="查看所有活动连接"></a>查看所有活动连接</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# nmcli c show --active <span class="comment">#c就是connection</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>RAID磁盘冗余阵列---部署RAID10阵列与恢复</title>
      <link href="/2022/11/17/RAID%E7%A3%81%E7%9B%98%E5%86%97%E4%BD%99%E9%98%B5%E5%88%97---%E9%83%A8%E7%BD%B2RAID10%E9%98%B5%E5%88%97%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
      <url>/2022/11/17/RAID%E7%A3%81%E7%9B%98%E5%86%97%E4%BD%99%E9%98%B5%E5%88%97---%E9%83%A8%E7%BD%B2RAID10%E9%98%B5%E5%88%97%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><ul><li><code>Vmware</code>添加<code>4</code>块<code>20G</code>硬盘(模拟测试)</li><li>系统<code>CentOS Linux release 7.6.1810 (Core)</code></li></ul><p><img src="https://s2.loli.net/2023/01/19/nRewAch1p6qkrGj.png" alt=""></p><p>生产环境中用到的服务器一般都配备<code>RAID</code>阵列卡，我们需要学会使用<code>mdadm</code>命令在<code>Linux</code>系统中创建和管理软件<code>RAID</code>磁盘阵列，而且它涉及的理论知识和操作过程与生产环境中的完全一致。</p><p><code>mdadm</code>命令用于创建、调整、监控和管理<code>RAID</code>设备，英文全称为“<code>multiple devices admin</code>”，语法格式为“<code>mdadm``参数</code> <code>硬盘名称</code>”。</p><h1 id="mdadm命令中的常用参数及作用"><a href="#mdadm命令中的常用参数及作用" class="headerlink" title="mdadm命令中的常用参数及作用"></a>mdadm命令中的常用参数及作用</h1><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">-a</td><td style="text-align:left">检测设备名称</td></tr><tr><td style="text-align:left">-n</td><td style="text-align:left">指定设备数量</td></tr><tr><td style="text-align:left">-l</td><td style="text-align:left">指定RAID级别</td></tr><tr><td style="text-align:left">-C</td><td style="text-align:left">创建</td></tr><tr><td style="text-align:left">-v</td><td style="text-align:left">显示过程</td></tr><tr><td style="text-align:left">-f</td><td style="text-align:left">模拟设备损坏</td></tr><tr><td style="text-align:left">-r</td><td style="text-align:left">移除设备</td></tr><tr><td style="text-align:left">-Q</td><td style="text-align:left">查看摘要信息</td></tr><tr><td style="text-align:left">-D</td><td style="text-align:left">查看详细信息</td></tr><tr><td style="text-align:left">-S</td><td style="text-align:left">停止RAID磁盘阵列</td></tr></tbody></table></div><h1 id="创建整列卡"><a href="#创建整列卡" class="headerlink" title="创建整列卡"></a>创建整列卡</h1><p>接下来，使用<code>mdadm</code>命令创建<code>RAID 10</code>，名称为<code>/dev/md0</code>。<br>其中，<code>-C</code>参数代表创建一个<code>RAID</code>阵列卡；<code>-v</code>参数显示创建的过程，同时在后面追加一个设备名称<code>/dev/md0</code>，这样<code>/dev/md0</code>就是创建后的<code>RAID</code>磁盘阵列的名称；<code>-n 4</code>参数代表使用4块硬盘来部署这个<code>RAID</code>磁盘阵列；而<code>-l 10</code>参数则代表<code>RAID 10</code>方案；最后再加上<code>4</code>块硬盘设备的名称就搞定了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mdadm -Cv /dev/md0 -n 4 -l 10 /dev/sdb /dev/sdc /dev/sdd /dev/sde</span><br><span class="line">mdadm: layout defaults to n2</span><br><span class="line">mdadm: layout defaults to n2</span><br><span class="line">mdadm: chunk size defaults to 512K</span><br><span class="line">mdadm: size set to 20954112K</span><br><span class="line">mdadm: Defaulting to version 1.2 metadata</span><br><span class="line">mdadm: array /dev/md0 started.</span><br></pre></td></tr></table></figure><h2 id="查看简要信息"><a href="#查看简要信息" class="headerlink" title="查看简要信息"></a>查看简要信息</h2><p>可以用<code>-D</code>参数进行查看。也可以用<code>-Q</code>参数查看简要信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mdadm -Q /dev/md0</span><br><span class="line">/dev/md0: 39.97GiB raid10 4 devices, 0 spares. Use mdadm --detail <span class="keyword">for</span> more detail.</span><br></pre></td></tr></table></figure><h2 id="格式化Ext4格式"><a href="#格式化Ext4格式" class="headerlink" title="格式化Ext4格式"></a>格式化Ext4格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mkfs.ext4 /dev/md0</span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">文件系统标签=</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">分块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Stride=128 blocks, Stripe width=256 blocks</span><br><span class="line">2621440 inodes, 10477056 blocks</span><br><span class="line">523852 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">第一个数据块=0</span><br><span class="line">Maximum filesystem blocks=2157969408</span><br><span class="line">320 block <span class="built_in">groups</span></span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </span><br><span class="line">        4096000, 7962624</span><br><span class="line"></span><br><span class="line">Allocating group tables: 完成                            </span><br><span class="line">正在写入inode表: 完成                            </span><br><span class="line">Creating journal (32768 blocks): 完成</span><br><span class="line">Writing superblocks and filesystem accounting information: 完成   </span><br></pre></td></tr></table></figure><h2 id="创建挂载点，将硬盘设备进行挂载操作"><a href="#创建挂载点，将硬盘设备进行挂载操作" class="headerlink" title="创建挂载点，将硬盘设备进行挂载操作;"></a>创建挂载点，将硬盘设备进行挂载操作;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# <span class="built_in">mkdir</span> /RAID10</span><br><span class="line">[root@53 ~]# mount /dev/md0 /RAID10</span><br><span class="line">[root@53 ~]# <span class="built_in">df</span> -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root   36G  4.6G   32G   13% /</span><br><span class="line">devtmpfs                 898M     0  898M    0% /dev</span><br><span class="line">tmpfs                    910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                    910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                    910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               1014M  146M  869M   15% /boot</span><br><span class="line">/dev/mapper/centos-home   18G   33M   18G    1% /home</span><br><span class="line">/dev/md0                  40G   49M   38G    1% /RAID10</span><br><span class="line">tmpfs                    182M     0  182M    0% /run/user/0</span><br></pre></td></tr></table></figure><p>再来查看<code>/dev/md0</code>磁盘阵列设备的详细信息，确认<code>RAID</code>级别<code>（Raid Level）</code>、阵列大小<code>（Array Size）</code>和总硬盘数<code>（Total Devices）</code>都是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mdadm -D /dev/md0</span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Mon Jul 25 04:40:30 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 41908224 (39.97 GiB 42.91 GB)</span><br><span class="line">     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Jul 27 01:54:59 2022</span><br><span class="line">             State : clean </span><br><span class="line">    Active Devices : 4</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : 53:0  (<span class="built_in">local</span> to host 53)</span><br><span class="line">              UUID : 01af1583:0b79c2e7:ae64d91a:f68e8e39</span><br><span class="line">            Events : 17</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0       8       16        0      active <span class="built_in">sync</span> set-A   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       2       8       48        2      active <span class="built_in">sync</span> set-A   /dev/sdd</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br></pre></td></tr></table></figure><h2 id="修改-etc-fatab文件"><a href="#修改-etc-fatab文件" class="headerlink" title="修改/etc/fatab文件"></a>修改/etc/fatab文件</h2><p>如果想让创建好的<code>RAID</code>磁盘阵列能够一直提供服务，不会因每次的重启操作而取消，那么一定要记得将信息添加到<code>/etc/fstab</code>文件中，这样可以确保在每次重启后<code>RAID</code>磁盘阵列都是有效的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# <span class="built_in">echo</span> <span class="string">&quot;/dev/md0 /RAID10 ext4 defaults 0 0&quot;</span>  &gt;&gt; /etc/fstab</span><br><span class="line">[root@53 ~]# <span class="built_in">cat</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># /etc/fstab</span></span><br><span class="line"><span class="comment"># Created by anaconda on Thu May  6 03:04:18 2021</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span></span><br><span class="line"><span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">UUID=087c7d4c-a364-4f57-8803-ac2927618cca /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-home /home                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line">/dev/md0 /RAID10 ext4 defaults 0 0</span><br></pre></td></tr></table></figure><h1 id="损坏磁盘阵列及修复"><a href="#损坏磁盘阵列及修复" class="headerlink" title="损坏磁盘阵列及修复"></a>损坏磁盘阵列及修复</h1><p>之所以在生产环境中部署<code>RAID 10</code>磁盘阵列，就是为了提高存储设备的<code>IO</code>读写速度及数据的安全性，但因为我们的硬盘设备是在虚拟机中模拟出来的，所以对于读写速度的改善可能并不直观。下面演示一下<code>RAID</code>磁盘阵列损坏后的处理方法，以确保以后在步入运维岗位后不会因为突发事件而手忙脚乱。</p><p>在确认有一块物理硬盘设备出现损坏而不能再继续正常使用后，应该使用<code>mdadm</code>命令将其移除，然后查看<code>RAID</code>磁盘阵列的状态，可以发现状态已经改变：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mdadm /dev/md0 -f /dev/sdb</span><br><span class="line">mdadm: <span class="built_in">set</span> /dev/sdb faulty <span class="keyword">in</span> /dev/md0</span><br><span class="line">[root@53 ~]# mdadm -D /dev/md0</span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Mon Jul 25 04:40:30 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 41908224 (39.97 GiB 42.91 GB)</span><br><span class="line">     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Jul 27 02:07:03 2022</span><br><span class="line">             State : clean, degraded </span><br><span class="line">    Active Devices : 3</span><br><span class="line">   Working Devices : 3</span><br><span class="line">    Failed Devices : 1</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : 53:0  (<span class="built_in">local</span> to host 53)</span><br><span class="line">              UUID : 01af1583:0b79c2e7:ae64d91a:f68e8e39</span><br><span class="line">            Events : 19</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       -       0        0        0      removed</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       2       8       48        2      active <span class="built_in">sync</span> set-A   /dev/sdd</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br><span class="line"></span><br><span class="line">       0       8       16        -      faulty   /dev/sdb</span><br></pre></td></tr></table></figure><p>刚刚使用的<code>-f</code>参数是让硬盘模拟损坏的效果。为了能够彻底地将故障盘移除，还要再执行一步操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mdadm /dev/md0 -r /dev/sdb</span><br><span class="line">mdadm: hot removed /dev/sdb from /dev/md0</span><br></pre></td></tr></table></figure><p>在<code>RAID 10</code>级别的磁盘阵列中，当<code>RAID 1</code>磁盘阵列中存在一个故障盘时并不影响<code>RAID 10</code>磁盘阵列的使用。当购买了新的硬盘设备后再使用<code>mdadm</code>命令予以替换即可，在此期间可以在<code>/RAID</code>目录中正常地创建或删除文件。由于我们是在虚拟机中模拟硬盘，所以先重启系统，然后再把新的硬盘添加到<code>RAID</code>磁盘阵列中。</p><p>更换硬盘后再次使用<code>-a</code>参数进行添加操作，系统默认会自动开始数据的同步工作。使用<code>-D</code>参数即可看到整个过程和进度（用百分比表示）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@53 ~]# mdadm /dev/md0 -a /dev/sdb</span><br><span class="line">mdadm: added /dev/sdb</span><br><span class="line">[root@53 ~]# mdadm -D /dev/md0</span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Mon Jul 25 04:40:30 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 41908224 (39.97 GiB 42.91 GB)</span><br><span class="line">     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Jul 27 02:10:18 2022</span><br><span class="line">             State : clean, degraded, recovering </span><br><span class="line">    Active Devices : 3</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 1</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">    Rebuild Status : 44% complete</span><br><span class="line"></span><br><span class="line">              Name : 53:0  (<span class="built_in">local</span> to host 53)</span><br><span class="line">              UUID : 01af1583:0b79c2e7:ae64d91a:f68e8e39</span><br><span class="line">            Events : 29</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       4       8       16        0      spare rebuilding   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       2       8       48        2      active <span class="built_in">sync</span> set-A   /dev/sdd</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br></pre></td></tr></table></figure><h1 id="查找故障盘"><a href="#查找故障盘" class="headerlink" title="查找故障盘"></a>查找故障盘</h1><ul><li>一般故障盘对应的盘符上面的指示灯会一直闪烁，或者根据盘符顺序查找</li></ul>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RAID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frp-内网穿透神器搭建</title>
      <link href="/2022/11/06/Frp-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%A5%9E%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/11/06/Frp-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%A5%9E%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p><code>frp</code> 是一个可用于内网穿透的高性能的反向代理应用，支持 <code>tcp</code>, <code>udp</code>, <code>http</code>, <code>https</code> 协议.</p><h1 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h1><p>通过在具有公网 <code>IP</code> 的节点上部署 <code>frp</code> 服务端，可以轻松地将内网服务穿透到公网，同时提供诸多专业的功能特性，这包括：</p><ol><li>客户端服务端通信支持 <code>TCP</code>、<code>UDP</code>以及 <code>Websocket</code> 等多种协议;</li><li>采用 <code>TCP</code> 连接流式复用，在单个连接间承载更多请求，节省连接建立时间;</li><li>代理组间的负载均衡;</li><li>端口复用，多个服务通过同一个服务端端口暴露;</li><li>多个原生支持的客户端插件（静态文件查看，<code>HTTP</code>、<code>SOCK5</code> 代理等），便于独立使用 <code>frp</code> 客户端完成某些工作;</li><li>高度扩展性的服务端插件系统，方便结合自身需求进行功能扩展;</li><li>服务端和客户端 <code>UI</code> 页面;</li></ol><h1 id="服务端-frps"><a href="#服务端-frps" class="headerlink" title="服务端 - frps"></a>服务端 - frps</h1><h2 id="1-下载程序"><a href="#1-下载程序" class="headerlink" title="1. 下载程序"></a>1. 下载程序</h2><p>首先到 <code>frp</code> 的 <code>releases</code> 页面下载最新版的对应 <code>VPS</code> 的处理器架构的压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fatedier/frp/releases</span><br></pre></td></tr></table></figure><p>如何知道 <code>VPS</code> 的处理器架构？在 <code>VPS</code> 上运行这个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">arch</span></span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><p>如果输出<code>x86_64</code>则需要下载带<code>linux_amd64</code>的那个压缩包;</p><h2 id="2-解压赋权"><a href="#2-解压赋权" class="headerlink" title="2.解压赋权"></a>2.解压赋权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]#<span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">[root@dosbat ~]#wget --no-check-certificate https://github.com/fatedier/frp/releases/download/v0.18.0/frp_0.18.0_linux_amd64.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">[root@dosbat ~]#tar -xzvf frp_0.18.0_linux_amd64.tar.gz</span><br><span class="line"><span class="comment"># 文件夹名改成 frp，不然目录太长了不方便</span></span><br><span class="line">[root@dosbat ~]#<span class="built_in">mv</span> frp_0.18.0_linux_amd64 frp</span><br><span class="line">[root@dosbat ~]#<span class="built_in">cd</span> frp</span><br><span class="line"><span class="comment"># 确保 frps 程序具有可执行权限</span></span><br><span class="line">[root@dosbat ~]#<span class="built_in">chmod</span> +x frps</span><br><span class="line">然后试着运行一下`frps`，看看是否能正常运行</span><br><span class="line">然后试着运行一下`frps`，看看是否能正常运行</span><br><span class="line"></span><br><span class="line">[root@dosbat frp]# ./frps --<span class="built_in">help</span></span><br><span class="line">frps is the server of frp (https://github.com/fatedier/frp)</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  frps [flags]</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --allow_ports string         allow ports</span><br><span class="line">      --bind_addr string           <span class="built_in">bind</span> address (default <span class="string">&quot;0.0.0.0&quot;</span>)</span><br><span class="line">  -p, --bind_port int              <span class="built_in">bind</span> port (default 7000)</span><br><span class="line">      --bind_udp_port int          <span class="built_in">bind</span> udp port</span><br><span class="line">  -c, --config string              config file of frps</span><br><span class="line">      --dashboard_addr string      dasboard address (default <span class="string">&quot;0.0.0.0&quot;</span>)</span><br><span class="line">      --dashboard_port int         dashboard port</span><br><span class="line">      --dashboard_pwd string       dashboard password (default <span class="string">&quot;admin&quot;</span>)</span><br><span class="line">      --dashboard_user string      dashboard user (default <span class="string">&quot;admin&quot;</span>)</span><br><span class="line">      --disable_log_color          <span class="built_in">disable</span> <span class="built_in">log</span> color <span class="keyword">in</span> console</span><br><span class="line">  -h, --<span class="built_in">help</span>                       <span class="built_in">help</span> <span class="keyword">for</span> frps</span><br><span class="line">      --kcp_bind_port int          kcp <span class="built_in">bind</span> udp port</span><br><span class="line">      --log_file string            <span class="built_in">log</span> file (default <span class="string">&quot;console&quot;</span>)</span><br><span class="line">      --log_level string           <span class="built_in">log</span> level (default <span class="string">&quot;info&quot;</span>)</span><br><span class="line">      --log_max_days int           <span class="built_in">log</span> max days (default 3)</span><br><span class="line">      --max_ports_per_client int   max ports per client</span><br><span class="line">      --proxy_bind_addr string     proxy <span class="built_in">bind</span> address (default <span class="string">&quot;0.0.0.0&quot;</span>)</span><br><span class="line">      --subdomain_host string      subdomain host</span><br><span class="line">  -t, --token string               auth token</span><br><span class="line">  -v, --version                    version of frpc</span><br><span class="line">      --vhost_http_port int        vhost http port</span><br><span class="line">      --vhost_http_timeout int     vhost http response header <span class="built_in">timeout</span> (default 60)</span><br><span class="line">      --vhost_https_port int       vhost https port</span><br></pre></td></tr></table></figure><h2 id="3-配置systemd服务"><a href="#3-配置systemd服务" class="headerlink" title="3.配置systemd服务"></a>3.配置systemd服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# vi /lib/systemd/system/frps.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Frp Server Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=nobody</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">ExecStart=/usr/bin/frps -c /etc/frp/frps.ini  (启动命令,我这里frps.ini放在了etc目录下所以这里是这么写的)</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="4-常用指令"><a href="#4-常用指令" class="headerlink" title="4.常用指令"></a>4.常用指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">启动服务</span><br><span class="line">[root@dosbat ~]# systemctl start frps</span><br><span class="line">添加自启动</span><br><span class="line">[root@dosbat ~]#  systemctl <span class="built_in">enable</span> frps</span><br><span class="line">查看服务状态</span><br><span class="line">[root@dosbat ~]#  systemctl status frps</span><br></pre></td></tr></table></figure><h2 id="5-配置程序"><a href="#5-配置程序" class="headerlink" title="5. 配置程序"></a>5. 配置程序</h2><p><strong>先停止服务</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# systemctl stop frps</span><br></pre></td></tr></table></figure><p>参考以下配置说明来书写配置文件<code>frps.ini</code>,完整的配置说明可以查看目录下的<code>frps_full.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面这句开头必须要有，表示配置的开始</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frp 服务端端口（必须）</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frp 服务端密码（必须）</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">12345678</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 认证超时时间，由于时间戳会被用于加密认证，防止报文劫持后被他人利用</span></span><br><span class="line"><span class="comment"># 因此服务端与客户端所在机器的时间差不能超过这个时间（秒）</span></span><br><span class="line"><span class="comment"># 默认为900秒，即15分钟，如果设置成0就不会对报文时间戳进行超时验证</span></span><br><span class="line"><span class="attr">authentication_timeout</span> = <span class="number">900</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仪表盘端口，只有设置了才能使用仪表盘（即后台）</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仪表盘访问的用户名密码，如果不设置，则默认都是 admin</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你想要用 frp 穿透访问内网中的网站（例如路由器设置页面）</span></span><br><span class="line"><span class="comment"># 则必须要设置以下两个监听端口，不设置则不会开启这项功能</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">10080</span></span><br><span class="line"><span class="attr">vhost_https_port</span> = <span class="number">10443</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此设置需要配合客户端设置，仅在穿透到内网中的 http 或 https 时有用（可选）</span></span><br><span class="line"><span class="comment"># 假设此项设置为 example.com，客户端配置 http 时将 subdomain 设置为 test，</span></span><br><span class="line"><span class="comment"># 则你将 test.example.com 解析到服务端后，可以使用此域名来访问客户端对应的 http</span></span><br><span class="line"><span class="attr">subdomain_host</span> = example.com</span><br></pre></td></tr></table></figure><p>然后把你精简后的配置文件内容写入<code>frps.ini</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]# <span class="built_in">echo</span> <span class="string">&quot;[common]</span></span><br><span class="line"><span class="string">bind_port = 7000</span></span><br><span class="line"><span class="string">token = 12345678</span></span><br><span class="line"><span class="string">dashboard_port = 7500</span></span><br><span class="line"><span class="string">dashboard_user = admin</span></span><br><span class="line"><span class="string">dashboard_pwd = admin</span></span><br><span class="line"><span class="string">vhost_http_port = 10080</span></span><br><span class="line"><span class="string">vhost_https_port = 10443</span></span><br><span class="line"><span class="string">subdomain_host = example.com&quot;</span> &gt; frps.ini</span><br><span class="line">最后启动服务</span><br><span class="line">[root@dosbat ~]# systemctl start frps</span><br></pre></td></tr></table></figure><h2 id="仪表盘登录"><a href="#仪表盘登录" class="headerlink" title="仪表盘登录"></a>仪表盘登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x:7500/</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/19/sehXroHRu3PgVZl.webp" alt="3228507733-1.webp"></p><ul><li>账户密码端口都是参考<code>frps.ini</code></li></ul><h1 id="客户端-frpc"><a href="#客户端-frpc" class="headerlink" title="客户端 - frpc"></a>客户端 - frpc</h1><h2 id="1-安装赋权"><a href="#1-安装赋权" class="headerlink" title="1.安装赋权"></a>1.安装赋权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dosbat ~]#wget --no-check-certificate https://github.com/fatedier/frp/releases/download/v0.18.0/frp_0.18.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">[root@dosbat ~]#tar -xzvf frp_0.18.0_linux_amd64.tar.gz</span><br><span class="line"><span class="comment"># 文件夹名改成 frp，不然目录太长了不方便</span></span><br><span class="line">[root@dosbat ~]#<span class="built_in">mv</span> frp_0.18.0_linux_amd64 frp</span><br><span class="line">[root@dosbat ~]#<span class="built_in">cd</span> frp</span><br><span class="line"><span class="comment"># 确保 frps 程序具有可执行权限</span></span><br><span class="line">[root@dosbat ~]#<span class="built_in">chmod</span> +x frpc</span><br></pre></td></tr></table></figure><h2 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h2><h3 id="1-基本配置（必须）"><a href="#1-基本配置（必须）" class="headerlink" title="1.基本配置（必须）"></a>1.基本配置（必须）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面这句开头必须要有，表示配置的开始</span></span><br><span class="line">[common]</span><br><span class="line"><span class="comment"># frp 服务端地址，可以填ip或者域名</span></span><br><span class="line">server_addr = 0.0.0.0 (填写frps服务器地址)</span><br><span class="line"><span class="comment"># frp 服务端端口，即填写服务端配置中的 bind_port</span></span><br><span class="line">server_port = 7000</span><br><span class="line"><span class="comment"># 填写 frp 服务端密码</span></span><br><span class="line">token = 12345678(与之前服务器的密码一致)</span><br></pre></td></tr></table></figure><h2 id="2-TCP-UDP"><a href="#2-TCP-UDP" class="headerlink" title="2.TCP/UDP"></a>2.TCP/UDP</h2><p>这里以转发 <code>ssh</code> 为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义一个配置名称，格式为“[名称]”，放在开头</span></span><br><span class="line">[ssh]</span><br><span class="line"><span class="comment"># 连接类型，填 tcp 或 udp</span></span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地ip，填你需要转发到的目的ip</span></span><br><span class="line"><span class="comment"># 如果是转发到frp客户端所在本机（比如路由器）则填 127.0.0.1</span></span><br><span class="line"><span class="comment"># 否则填对应机器的内网ip</span></span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line"><span class="comment"># 需要转发到的端口，比如 ssh 端口是 22</span></span><br><span class="line">local_port = 22</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否加密客户端与服务端之间的通信，默认是 false</span></span><br><span class="line">use_encryption = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 是否压缩客户端与服务端之间的通信，默认是 false</span></span><br><span class="line"><span class="comment"># 压缩可以节省流量，但需要消耗 CPU 资源</span></span><br><span class="line"><span class="comment"># 加密自然也会消耗 CPU 资源，但是不大</span></span><br><span class="line">use_compression = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frp 服务端的远程监听端口，即你访问服务端的 remote_port 就相当于访问</span></span><br><span class="line"><span class="comment"># 客户端的 local_port，如果填0则会随机分配一个端口</span></span><br><span class="line">remote_port = 6001</span><br></pre></td></tr></table></figure><h2 id="3-HTTP-S"><a href="#3-HTTP-S" class="headerlink" title="3.HTTP(S)"></a>3.HTTP(S)</h2><p>以转发路由器设置页面为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义一个配置名称，格式为“[名称]”，放在开头</span></span><br><span class="line">[router-web]</span><br><span class="line"><span class="comment"># 连接类型，填 http 或 https</span></span><br><span class="line"><span class="built_in">type</span> = http</span><br><span class="line"></span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 80</span><br><span class="line"></span><br><span class="line"><span class="comment"># http 可以考虑加密和压缩一下</span></span><br><span class="line">use_encryption = <span class="literal">true</span></span><br><span class="line">use_compression = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义访问网站的用户名和密码，如果不定义的话谁都可以访问，会不安全</span></span><br><span class="line"><span class="comment"># 有些路由器如果从内部访问web是不需要用户名密码的，因此需要在这里加一层密码保护</span></span><br><span class="line"><span class="comment"># 如果你发现不加这个密码保护，路由器配置页面原本的用户认证能正常生效的话，可以不加</span></span><br><span class="line">http_user = admin</span><br><span class="line">http_pwd = admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还记得我们在服务端配置的 subdomain_host = example.com 吗</span></span><br><span class="line"><span class="comment"># 假设这里我们填 web01，那么你将 web01.example.com 解析到服务端ip后</span></span><br><span class="line"><span class="comment"># 你就可以使用 域名:端口 来访问你的 http 了</span></span><br><span class="line"><span class="comment"># 这个域名的作用是用来区分不同的 http，因为你可以配置多个这样的配置</span></span><br><span class="line">subdomain = web01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义域名，这个不同于 subdomain，你可以设置与 subdomain_host 无关的其他域名</span></span><br><span class="line"><span class="comment"># subdomain 与 custom_domains 中至少有一个必须要设置</span></span><br><span class="line">custom_domains = web02.yourdomain.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配路径，可以设置多个，用逗号分隔，比如你设置 locations 为以下这个，</span></span><br><span class="line"><span class="comment"># 那么所有 http://xxx/abc 和 http://xxx/def 都会被转发到 http://xxx/</span></span><br><span class="line"><span class="comment"># 如果不需要这个功能可以不写这项，就直接该怎么访问就怎么访问</span></span><br><span class="line">locations = /abc,/def</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重写 host header，相当于反向代理中的“发送域名”</span></span><br><span class="line"><span class="comment"># 如果设置了，转发 http 时，请求中的 host 会被替换成这个</span></span><br><span class="line"><span class="comment"># 一般情况下不需要用到这个，可以不写这项</span></span><br><span class="line">host_header_rewrite = dev.yourdomain.com</span><br></pre></td></tr></table></figure><h2 id="4-TCP-UDP-范围转发"><a href="#4-TCP-UDP-范围转发" class="headerlink" title="4.TCP/UDP 范围转发"></a>4.TCP/UDP 范围转发</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义一个配置名称，格式为“[range:名称]”，放在开头</span></span><br><span class="line">[range:multi-port]</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">use_encryption = <span class="literal">false</span></span><br><span class="line">use_compression = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地端口和远程端口可以指定多个范围，如下格式，且范围之间必须一一对应</span></span><br><span class="line">local_port = 6010-6020,6022,6024-6028</span><br><span class="line">remote_port = 16010-16020,16022,16024-16028</span><br></pre></td></tr></table></figure><h2 id="5-合并配置"><a href="#5-合并配置" class="headerlink" title="5.合并配置"></a>5.合并配置</h2><p>写入到<code>frpc.ini</code>中，然后仿照运行服务端的方式来运行客户端</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">12345678</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6001</span></span><br><span class="line"></span><br><span class="line"><span class="section">[router-web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">http_user</span> = admin</span><br><span class="line"><span class="attr">http_pwd</span> = admin</span><br><span class="line"><span class="attr">subdomain</span> = web01</span><br><span class="line"><span class="attr">custom_domains</span> = web02.yourdomain.com</span><br><span class="line"><span class="attr">locations</span> = /abc,/def</span><br><span class="line"><span class="attr">host_header_rewrite</span> = dev.yourdomain.com</span><br><span class="line"></span><br><span class="line"><span class="section">[range:multi-port]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">6010</span>-<span class="number">6020</span>,<span class="number">6022</span>,<span class="number">6024</span>-<span class="number">6028</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">16010</span>-<span class="number">16020</span>,<span class="number">16022</span>,<span class="number">16024</span>-<span class="number">16028</span></span><br></pre></td></tr></table></figure><h2 id="6-启动服务"><a href="#6-启动服务" class="headerlink" title="6.启动服务"></a>6.启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues frp]# ./frps -c frps.ini</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yum安装提示没有可用软件包</title>
      <link href="/2022/11/02/yum%E5%AE%89%E8%A3%85%E6%8F%90%E7%A4%BA%E6%B2%A1%E6%9C%89%E5%8F%AF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
      <url>/2022/11/02/yum%E5%AE%89%E8%A3%85%E6%8F%90%E7%A4%BA%E6%B2%A1%E6%9C%89%E5%8F%AF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装软件提示没有可用的软件包</span><br></pre></td></tr></table></figure><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>出现该问题的原因是该软件包在第三方的<code>yum</code>源里面，而不在官方<code>yum</code>源里面。解决的方法，就是安装<code>epel</code>源。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# yum install epel-release <span class="comment">##安装epel源</span></span><br><span class="line"></span><br><span class="line">[root@nues ~]# yum update <span class="comment">##更新</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本实现数组冒泡排序</title>
      <link href="/2022/07/08/Shell%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
      <url>/2022/07/08/Shell%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义数组</span></span><br><span class="line">arr=(6 5 3 1 8 7 2 4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数组长度</span></span><br><span class="line">len=<span class="variable">$&#123;#arr[@]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 冒泡排序算法</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>; i&lt;<span class="variable">$len</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> ((j=i+<span class="number">1</span>; j&lt;<span class="variable">$len</span>; j++))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$&#123;arr[i]&#125;</span> -gt <span class="variable">$&#123;arr[j]&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="comment"># 交换两个数的值</span></span><br><span class="line">            temp=<span class="variable">$&#123;arr[i]&#125;</span></span><br><span class="line">            arr[i]=<span class="variable">$&#123;arr[j]&#125;</span></span><br><span class="line">            arr[j]=<span class="variable">$temp</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出排序后的数组</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;排序后的数组为:<span class="variable">$&#123;arr[@]&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">定义了一个数组arr，然后使用冒泡排序算法对数组进行排序，最后输出排序后的数组。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> for </tag>
            
            <tag> 冒泡排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SFTP 多用户，多目录不同权限设置</title>
      <link href="/2022/06/05/SFTP%20%E5%A4%9A%E7%94%A8%E6%88%B7%EF%BC%8C%E5%A4%9A%E7%9B%AE%E5%BD%95%E4%B8%8D%E5%90%8C%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/"/>
      <url>/2022/06/05/SFTP%20%E5%A4%9A%E7%94%A8%E6%88%B7%EF%BC%8C%E5%A4%9A%E7%9B%AE%E5%BD%95%E4%B8%8D%E5%90%8C%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><blockquote><p>useradd</p></blockquote><ul><li><p>-g 用户组；</p></li><li><p>-d 指定家目录； </p></li><li><p>-s 不登陆；</p></li><li><p>-M 不创建家目录； </p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">groupadd sftp</span><br><span class="line">useradd -g sftp -s /sbin/nologin -M bytedance</span><br><span class="line">useradd -g sftp -s /sbin/nologin -M huaweimusic</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/sftp/bytedance/&#123;upload,reporting&#125;</span><br><span class="line"><span class="built_in">mkdir</span> -p /home/sftp/huaweimusic/KDM</span><br><span class="line"></span><br><span class="line"><span class="comment"># ChrootDirectory 上级必须是root,权限最大为755</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R root.root /home/sftp/bytedance</span><br><span class="line"><span class="built_in">chown</span> -R root.root /home/sftp/huaweimusic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录权限最小化</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> bytedance.sftp /home/sftp/bytedance/&#123;upload,reporting&#125;</span><br><span class="line"><span class="built_in">chown</span> huaweimusic.sftp /home/sftp/huaweimusic/KDM</span><br></pre></td></tr></table></figure><h2 id="配置文件-etc-ssh-sshd-config更改及添加如下"><a href="#配置文件-etc-ssh-sshd-config更改及添加如下" class="headerlink" title="配置文件/etc/ssh/sshd_config更改及添加如下"></a>配置文件<code>/etc/ssh/sshd_config</code>更改及添加如下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># Subsystemsftp/usr/libexec/openssh/sftp-server 注释此行</span></span><br><span class="line"></span><br><span class="line">Subsystem sftp internal-sftp </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将以下配置放最后行,以免有其他干扰到</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Match Group sftp   支持Group组控制</span></span><br><span class="line">Match User bytedance,huaweimusic</span><br><span class="line">    ChrootDirectory /home/sftp/%u</span><br><span class="line">    X11Forwarding no</span><br><span class="line">    AllowTcpForwarding no</span><br><span class="line">    ForceCommand internal-sftp</span><br><span class="line"></span><br><span class="line"><span class="comment">#Match User huaweimusic</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ChrootDirectory /home/sftp/huaweimusic</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   X11Forwarding no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   AllowTcpForwarding no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ForceCommand internal-sftp</span></span><br></pre></td></tr></table></figure><h2 id="检查并重启sshd服务"><a href="#检查并重启sshd服务" class="headerlink" title="检查并重启sshd服务"></a>检查并重启<code>sshd</code>服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sshd -t</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="错误解决"><a href="#错误解决" class="headerlink" title="错误解决"></a>错误解决</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sshd -t</span><br><span class="line">/etc/ssh/sshd_config line 105: Directive <span class="string">&#x27;UsePAM&#x27;</span> is not allowed within a Match block</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p><code>ChrootDirectory</code> 设置的目录权限及其所有的上级文件夹权限，属主和属组必须是 <code>root</code>；<br>只有属主能拥有写权限，权限最大设置只能是 <code>755</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配 sftp 用户组</span></span><br><span class="line"></span><br><span class="line">Match Group sftp </span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配用户</span></span><br><span class="line"></span><br><span class="line">Match user userA,userB </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定属于用户组 sftp 的用户访问的根文件夹。%h 代表用户 home 目录，%u 代表用户名。  </span></span><br><span class="line"></span><br><span class="line">ChrootDirectory /data/sftp/%u </span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制执行内部 sftp，并忽略任何 ~/.ssh/rc 文件中的命令</span></span><br><span class="line"></span><br><span class="line">ForceCommand internal-sftp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否允许 TCP 转发，默认值为 &quot;yes&quot;， 禁止 TCP 转发并不能增强安全性，除非禁止了用户对 shell 的访问，因为用户可以安装他们自己的转发器。  </span></span><br><span class="line"></span><br><span class="line">AllowTcpForwarding no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否允许进行 X11 转发。默认值是 &quot;no&quot;，设为 &quot;yes&quot; 表示允许。如果允许 X11 转发并且 sshd(8)代理的显示区被配置为在含有通配符的地址(X11UseLocalhost)上监听。那么将可能有额外的信息被泄漏。由于使用 X11 转发的可能带来的风险，此指令默认值为&quot;no&quot;。需要注意的是，禁止 X11 转发并不能禁止用户转发 X11 通信，因为用户可以安装他们自己的转发器。  </span></span><br><span class="line"></span><br><span class="line">X11Forwarding no </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SFTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本实现自动屏蔽DDOS攻击IP</title>
      <link href="/2022/05/08/Shell%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%B1%8F%E8%94%BDDDOS%E6%94%BB%E5%87%BBIP/"/>
      <url>/2022/05/08/Shell%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%B1%8F%E8%94%BDDDOS%E6%94%BB%E5%87%BBIP/</url>
      
        <content type="html"><![CDATA[<h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义要屏蔽的IP地址列表文件</span></span><br><span class="line">block_list_file=<span class="string">&quot;/etc/block_list.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果文件不存在，则创建文件</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$block_list_file</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">touch</span> <span class="variable">$block_list_file</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前时间戳</span></span><br><span class="line">timestamp=`<span class="built_in">date</span> +%s`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历文件中的所有IP地址</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># 获取IP地址和上次封禁时间</span></span><br><span class="line">    ip=`<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">    last_block_time=`<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果上次封禁时间超过1小时，则重新封禁该IP地址</span></span><br><span class="line">    <span class="keyword">if</span> [ $((timestamp-last_block_time)) -gt 3600 ]; <span class="keyword">then</span></span><br><span class="line">        /sbin/iptables -A INPUT -s <span class="variable">$ip</span> -j DROP</span><br><span class="line">        <span class="comment"># 更新封禁时间</span></span><br><span class="line">        sed -i <span class="string">&quot;s/<span class="variable">$&#123;ip&#125;</span>.*/<span class="variable">$&#123;ip&#125;</span> <span class="variable">$&#123;timestamp&#125;</span>/g&quot;</span> <span class="variable">$block_list_file</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="variable">$block_list_file</span></span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">定义了一个屏蔽IP列表文件，然后通过iptables命令对列表中的IP进行封禁。</span><br><span class="line">该脚本可以定时执行，以自动屏蔽那些频繁发起DDOS攻击的IP地址。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDOS </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos错误：Local Time与实际相差8小时</title>
      <link href="/2022/05/01/Centos%E9%94%99%E8%AF%AF%EF%BC%9ALocal%20Time%E4%B8%8E%E5%AE%9E%E9%99%85%E7%9B%B8%E5%B7%AE8%E5%B0%8F%E6%97%B6/"/>
      <url>/2022/05/01/Centos%E9%94%99%E8%AF%AF%EF%BC%9ALocal%20Time%E4%B8%8E%E5%AE%9E%E9%99%85%E7%9B%B8%E5%B7%AE8%E5%B0%8F%E6%97%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h2><p>​    <code>Local Time</code>与实际相差8小时</p><h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>这通常是时区设置不正确引起的。可以按照以下步骤检查和更正时区设置：</p><ol><li><p>使用<code>timedatectl</code>命令查看当前系统的时区设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure></li><li><p>如果时区设置不正确，则可以使用以下命令更改时区设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone &lt;timezone&gt;</span><br></pre></td></tr></table></figure><p>其中<code>&lt;timezone&gt;</code>应替换为您所在的时区，例如<code>Asia/Shanghai</code>。</p></li><li><p>更改后，再次运行<code>timedatectl</code>命令来验证时区设置是否正确。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure></li><li><p>如果仍然存在问题，可能需要同步系统时钟。可以使用以下命令手动同步系统时钟：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop chronyd</span><br><span class="line"><span class="built_in">sudo</span> ntpdate pool.ntp.org</span><br><span class="line"><span class="built_in">sudo</span> systemctl start chronyd</span><br></pre></td></tr></table></figure><p>这将停止<code>chronyd</code>服务，使用<code>ntpdate</code>工具从<code>pool.ntp.org</code>同步系统时钟，然后重新启动<code>chronyd</code>服务。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> 错误日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 7搭建 Docker 环境</title>
      <link href="/2021/12/11/Centos7%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/"/>
      <url>/2021/12/11/Centos7%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="操作系统要求"><a href="#操作系统要求" class="headerlink" title="操作系统要求"></a>操作系统要求</h2><p>要安装 <code>Docker</code> 引擎，您需要 <code>CentOS 7 或 8</code> 的维护版本。不支持或测试存档版本。</p><p>该<code>centos-extras库</code>必须启用。默认情况下启用此存储库，但如果您已禁用它，则需要 重新启用它。</p><p><code>overlay2</code>推荐使用存储驱动。</p><h2 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h2><p>旧版本的 <code>Docker</code> 被称为<code>docker</code>或d<code>ocker-engine</code>。如果安装了这些，请卸载它们以及相关的依赖项。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><p><strong>1.首先安装 Docker 必要依赖包 ：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p><strong>2.由于自带</strong> <strong><code>yum</code></strong> <strong>没有</strong> <strong><code>Docker-CE</code></strong> <strong>所以我们需要先增加</strong> <strong><code>docker repo</code>(官方源国内访问不到，添加阿里云的源)：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><strong>3.用 yum 安装 Docker：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# yum install -y docker-ce</span><br></pre></td></tr></table></figure><p><strong>4.直接yum安装，安装成功后查看版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# docker -v</span><br></pre></td></tr></table></figure><p><strong>5.启动docker</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# systemctl start docker</span><br></pre></td></tr></table></figure><p><strong>6.设置开机启动</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p><strong>7.查看docker状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# systemctl status docker</span><br></pre></td></tr></table></figure><p><strong>8.配置镜像加速器</strong><br>因为国内访问<code>Docker Hub</code>较慢,可以使用腾讯云提供的国内镜像源,加速访问<code>Docker Hub</code>（采用阿里云提供镜像源）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">[root@nues ~]# <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://自已的编码.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://自已的编码.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@nues ~]# systemctl daemon-reload  <span class="comment">#重新加载服务配置文件</span></span><br><span class="line">[root@nues ~]# systemctl restart docker <span class="comment">#重启服务</span></span><br></pre></td></tr></table></figure><h2 id="验证与应用"><a href="#验证与应用" class="headerlink" title="验证与应用"></a>验证与应用</h2><p><strong>1.下载一个官方的 hello-world 镜像到本地</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# docker run hello-world</span><br><span class="line">Unable to find image <span class="string">&#x27;hello-world:latest&#x27;</span> locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">2db29710123e: Pull complete </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>2.下载好的镜像就会出现在镜像列表里</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# docker images</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">hello-world   latest    feb5d9fea6a5   26 hours ago   13.3kB</span><br></pre></td></tr></table></figure><p><strong>3.运行容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# docker run hello-world</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>4.查看所有的容器信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@nues ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">6a0df7b2d4eb   hello-world   <span class="string">&quot;/hello&quot;</span>   44 seconds ago   Exited (0) 44 seconds ago             intelligent_franklin</span><br><span class="line">部分参数释义：</span><br><span class="line">.CONTAINER ID  容器ID</span><br><span class="line">.Image 镜像ID</span><br><span class="line">.COMMAND  指令</span><br><span class="line">.Created 创建容器的时间点.</span><br><span class="line">.Ports 暴露的端口.</span><br><span class="line">.Status 容器状态.</span><br><span class="line">.Names 容器名称.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ops </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos8修改固定IP重启后不生效问题</title>
      <link href="/2021/11/18/Centos8%E4%BF%AE%E6%94%B9%E5%9B%BA%E5%AE%9AIP%E9%87%8D%E5%90%AF%E5%90%8E%E4%B8%8D%E7%94%9F%E6%95%88%E9%97%AE%E9%A2%98/"/>
      <url>/2021/11/18/Centos8%E4%BF%AE%E6%94%B9%E5%9B%BA%E5%AE%9AIP%E9%87%8D%E5%90%AF%E5%90%8E%E4%B8%8D%E7%94%9F%E6%95%88%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Centos</span><br><span class="line">查看IP 执行命令: ip addr</span><br><span class="line"></span><br><span class="line">修改IP vi /etc/sysconfig/network-scripts/ifcfg-ens160修改IP地址</span><br><span class="line"></span><br><span class="line">重启 执行命令: ifdown ens160 &amp;&amp; ifup ens160</span><br></pre></td></tr></table></figure><h1 id="Centos-8"><a href="#Centos-8" class="headerlink" title="Centos 8"></a>Centos 8</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在CentOS8中已废弃网络network.service</span><br><span class="line">因此需要使用nmcli配置ip地址</span><br><span class="line">在修改好静态ip地址后，依次使用命令</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# nmcli c reload</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# nmcli networking off</span><br><span class="line"></span><br><span class="line">[root@dosbat ~]# nmcli networking on</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
